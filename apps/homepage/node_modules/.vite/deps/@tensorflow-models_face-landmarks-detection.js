import { Tensor, add, assert, cast, clipByValue, concat, dispose, div, exp, expandDims, fromPixels, image, mul, reshape, sigmoid, slice, squeeze, sub, tensor1d, tensor2d, tidy, toPixels } from "./dist-ComUTqwG.js";
import { loadGraphModel } from "./dist-BDzPB5Rr.js";

//#region ../../node_modules/.pnpm/@mediapipe+face_mesh@0.4.1633559619/node_modules/@mediapipe/face_mesh/face_mesh.js
(function() {
	var v;
	function aa(a) {
		var b = 0;
		return function() {
			return b < a.length ? {
				done: !1,
				value: a[b++]
			} : { done: !0 };
		};
	}
	var ba = "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, c) {
		if (a == Array.prototype || a == Object.prototype) return a;
		a[b] = c.value;
		return a;
	};
	function ca(a) {
		a = [
			"object" == typeof globalThis && globalThis,
			a,
			"object" == typeof window && window,
			"object" == typeof self && self,
			"object" == typeof global && global
		];
		for (var b = 0; b < a.length; ++b) {
			var c = a[b];
			if (c && c.Math == Math) return c;
		}
		throw Error("Cannot find global object");
	}
	var G$1 = ca(this);
	function J$1(a, b) {
		if (b) a: {
			var c = G$1;
			a = a.split(".");
			for (var d = 0; d < a.length - 1; d++) {
				var e = a[d];
				if (!(e in c)) break a;
				c = c[e];
			}
			a = a[a.length - 1];
			d = c[a];
			b = b(d);
			b != d && null != b && ba(c, a, {
				configurable: !0,
				writable: !0,
				value: b
			});
		}
	}
	J$1("Symbol", function(a) {
		function b(g) {
			if (this instanceof b) throw new TypeError("Symbol is not a constructor");
			return new c(d + (g || "") + "_" + e++, g);
		}
		function c(g, f) {
			this.g = g;
			ba(this, "description", {
				configurable: !0,
				writable: !0,
				value: f
			});
		}
		if (a) return a;
		c.prototype.toString = function() {
			return this.g;
		};
		var d = "jscomp_symbol_" + (1e9 * Math.random() >>> 0) + "_", e = 0;
		return b;
	});
	J$1("Symbol.iterator", function(a) {
		if (a) return a;
		a = Symbol("Symbol.iterator");
		for (var b = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), c = 0; c < b.length; c++) {
			var d = G$1[b[c]];
			"function" === typeof d && "function" != typeof d.prototype[a] && ba(d.prototype, a, {
				configurable: !0,
				writable: !0,
				value: function() {
					return da(aa(this));
				}
			});
		}
		return a;
	});
	function da(a) {
		a = { next: a };
		a[Symbol.iterator] = function() {
			return this;
		};
		return a;
	}
	function K$1(a) {
		var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];
		return b ? b.call(a) : { next: aa(a) };
	}
	function L$1(a) {
		if (!(a instanceof Array)) {
			a = K$1(a);
			for (var b, c = []; !(b = a.next()).done;) c.push(b.value);
			a = c;
		}
		return a;
	}
	var ea = "function" == typeof Object.create ? Object.create : function(a) {
		function b() {}
		b.prototype = a;
		return new b();
	}, fa;
	if ("function" == typeof Object.setPrototypeOf) fa = Object.setPrototypeOf;
	else {
		var ha;
		a: {
			var ia = { a: !0 }, ja = {};
			try {
				ja.__proto__ = ia;
				ha = ja.a;
				break a;
			} catch (a) {}
			ha = !1;
		}
		fa = ha ? function(a, b) {
			a.__proto__ = b;
			if (a.__proto__ !== b) throw new TypeError(a + " is not extensible");
			return a;
		} : null;
	}
	var ka = fa;
	function M(a, b) {
		a.prototype = ea(b.prototype);
		a.prototype.constructor = a;
		if (ka) ka(a, b);
		else for (var c in b) if ("prototype" != c) if (Object.defineProperties) {
			var d = Object.getOwnPropertyDescriptor(b, c);
			d && Object.defineProperty(a, c, d);
		} else a[c] = b[c];
		a.ea = b.prototype;
	}
	function ma() {
		this.l = !1;
		this.i = null;
		this.h = void 0;
		this.g = 1;
		this.s = this.m = 0;
		this.j = null;
	}
	function na(a) {
		if (a.l) throw new TypeError("Generator is already running");
		a.l = !0;
	}
	ma.prototype.o = function(a) {
		this.h = a;
	};
	function oa(a, b) {
		a.j = {
			U: b,
			V: !0
		};
		a.g = a.m || a.s;
	}
	ma.prototype.return = function(a) {
		this.j = { return: a };
		this.g = this.s;
	};
	function N$1(a, b, c) {
		a.g = c;
		return { value: b };
	}
	function pa(a) {
		this.g = new ma();
		this.h = a;
	}
	function qa(a, b) {
		na(a.g);
		var c = a.g.i;
		if (c) return ra(a, "return" in c ? c["return"] : function(d) {
			return {
				value: d,
				done: !0
			};
		}, b, a.g.return);
		a.g.return(b);
		return sa(a);
	}
	function ra(a, b, c, d) {
		try {
			var e = b.call(a.g.i, c);
			if (!(e instanceof Object)) throw new TypeError("Iterator result " + e + " is not an object");
			if (!e.done) return a.g.l = !1, e;
			var g = e.value;
		} catch (f) {
			return a.g.i = null, oa(a.g, f), sa(a);
		}
		a.g.i = null;
		d.call(a.g, g);
		return sa(a);
	}
	function sa(a) {
		for (; a.g.g;) try {
			var b = a.h(a.g);
			if (b) return a.g.l = !1, {
				value: b.value,
				done: !1
			};
		} catch (c) {
			a.g.h = void 0, oa(a.g, c);
		}
		a.g.l = !1;
		if (a.g.j) {
			b = a.g.j;
			a.g.j = null;
			if (b.V) throw b.U;
			return {
				value: b.return,
				done: !0
			};
		}
		return {
			value: void 0,
			done: !0
		};
	}
	function ta(a) {
		this.next = function(b) {
			na(a.g);
			a.g.i ? b = ra(a, a.g.i.next, b, a.g.o) : (a.g.o(b), b = sa(a));
			return b;
		};
		this.throw = function(b) {
			na(a.g);
			a.g.i ? b = ra(a, a.g.i["throw"], b, a.g.o) : (oa(a.g, b), b = sa(a));
			return b;
		};
		this.return = function(b) {
			return qa(a, b);
		};
		this[Symbol.iterator] = function() {
			return this;
		};
	}
	function O$1(a, b) {
		b = new ta(new pa(b));
		ka && a.prototype && ka(b, a.prototype);
		return b;
	}
	function ua(a, b) {
		a instanceof String && (a += "");
		var c = 0, d = !1, e = { next: function() {
			if (!d && c < a.length) {
				var g = c++;
				return {
					value: b(g, a[g]),
					done: !1
				};
			}
			d = !0;
			return {
				done: !0,
				value: void 0
			};
		} };
		e[Symbol.iterator] = function() {
			return e;
		};
		return e;
	}
	var va = "function" == typeof Object.assign ? Object.assign : function(a, b) {
		for (var c = 1; c < arguments.length; c++) {
			var d = arguments[c];
			if (d) for (var e in d) Object.prototype.hasOwnProperty.call(d, e) && (a[e] = d[e]);
		}
		return a;
	};
	J$1("Object.assign", function(a) {
		return a || va;
	});
	J$1("Promise", function(a) {
		function b(f) {
			this.h = 0;
			this.i = void 0;
			this.g = [];
			this.o = !1;
			var h = this.j();
			try {
				f(h.resolve, h.reject);
			} catch (k$1) {
				h.reject(k$1);
			}
		}
		function c() {
			this.g = null;
		}
		function d(f) {
			return f instanceof b ? f : new b(function(h) {
				h(f);
			});
		}
		if (a) return a;
		c.prototype.h = function(f) {
			if (null == this.g) {
				this.g = [];
				var h = this;
				this.i(function() {
					h.l();
				});
			}
			this.g.push(f);
		};
		var e = G$1.setTimeout;
		c.prototype.i = function(f) {
			e(f, 0);
		};
		c.prototype.l = function() {
			for (; this.g && this.g.length;) {
				var f = this.g;
				this.g = [];
				for (var h = 0; h < f.length; ++h) {
					var k$1 = f[h];
					f[h] = null;
					try {
						k$1();
					} catch (l) {
						this.j(l);
					}
				}
			}
			this.g = null;
		};
		c.prototype.j = function(f) {
			this.i(function() {
				throw f;
			});
		};
		b.prototype.j = function() {
			function f(l) {
				return function(n) {
					k$1 || (k$1 = !0, l.call(h, n));
				};
			}
			var h = this, k$1 = !1;
			return {
				resolve: f(this.C),
				reject: f(this.l)
			};
		};
		b.prototype.C = function(f) {
			if (f === this) this.l(/* @__PURE__ */ new TypeError("A Promise cannot resolve to itself"));
			else if (f instanceof b) this.F(f);
			else {
				a: switch (typeof f) {
					case "object":
						var h = null != f;
						break a;
					case "function":
						h = !0;
						break a;
					default: h = !1;
				}
				h ? this.u(f) : this.m(f);
			}
		};
		b.prototype.u = function(f) {
			var h = void 0;
			try {
				h = f.then;
			} catch (k$1) {
				this.l(k$1);
				return;
			}
			"function" == typeof h ? this.G(h, f) : this.m(f);
		};
		b.prototype.l = function(f) {
			this.s(2, f);
		};
		b.prototype.m = function(f) {
			this.s(1, f);
		};
		b.prototype.s = function(f, h) {
			if (0 != this.h) throw Error("Cannot settle(" + f + ", " + h + "): Promise already settled in state" + this.h);
			this.h = f;
			this.i = h;
			2 === this.h && this.D();
			this.A();
		};
		b.prototype.D = function() {
			var f = this;
			e(function() {
				if (f.B()) {
					var h = G$1.console;
					"undefined" !== typeof h && h.error(f.i);
				}
			}, 1);
		};
		b.prototype.B = function() {
			if (this.o) return !1;
			var f = G$1.CustomEvent, h = G$1.Event, k$1 = G$1.dispatchEvent;
			if ("undefined" === typeof k$1) return !0;
			"function" === typeof f ? f = new f("unhandledrejection", { cancelable: !0 }) : "function" === typeof h ? f = new h("unhandledrejection", { cancelable: !0 }) : (f = G$1.document.createEvent("CustomEvent"), f.initCustomEvent("unhandledrejection", !1, !0, f));
			f.promise = this;
			f.reason = this.i;
			return k$1(f);
		};
		b.prototype.A = function() {
			if (null != this.g) {
				for (var f = 0; f < this.g.length; ++f) g.h(this.g[f]);
				this.g = null;
			}
		};
		var g = new c();
		b.prototype.F = function(f) {
			var h = this.j();
			f.J(h.resolve, h.reject);
		};
		b.prototype.G = function(f, h) {
			var k$1 = this.j();
			try {
				f.call(h, k$1.resolve, k$1.reject);
			} catch (l) {
				k$1.reject(l);
			}
		};
		b.prototype.then = function(f, h) {
			function k$1(w, r) {
				return "function" == typeof w ? function(y) {
					try {
						l(w(y));
					} catch (m) {
						n(m);
					}
				} : r;
			}
			var l, n, u = new b(function(w, r) {
				l = w;
				n = r;
			});
			this.J(k$1(f, l), k$1(h, n));
			return u;
		};
		b.prototype.catch = function(f) {
			return this.then(void 0, f);
		};
		b.prototype.J = function(f, h) {
			function k$1() {
				switch (l.h) {
					case 1:
						f(l.i);
						break;
					case 2:
						h(l.i);
						break;
					default: throw Error("Unexpected state: " + l.h);
				}
			}
			var l = this;
			null == this.g ? g.h(k$1) : this.g.push(k$1);
			this.o = !0;
		};
		b.resolve = d;
		b.reject = function(f) {
			return new b(function(h, k$1) {
				k$1(f);
			});
		};
		b.race = function(f) {
			return new b(function(h, k$1) {
				for (var l = K$1(f), n = l.next(); !n.done; n = l.next()) d(n.value).J(h, k$1);
			});
		};
		b.all = function(f) {
			var h = K$1(f), k$1 = h.next();
			return k$1.done ? d([]) : new b(function(l, n) {
				function u(y) {
					return function(m) {
						w[y] = m;
						r--;
						0 == r && l(w);
					};
				}
				var w = [], r = 0;
				do
					w.push(void 0), r++, d(k$1.value).J(u(w.length - 1), n), k$1 = h.next();
				while (!k$1.done);
			});
		};
		return b;
	});
	J$1("Object.is", function(a) {
		return a ? a : function(b, c) {
			return b === c ? 0 !== b || 1 / b === 1 / c : b !== b && c !== c;
		};
	});
	J$1("Array.prototype.includes", function(a) {
		return a ? a : function(b, c) {
			var d = this;
			d instanceof String && (d = String(d));
			var e = d.length;
			c = c || 0;
			for (0 > c && (c = Math.max(c + e, 0)); c < e; c++) {
				var g = d[c];
				if (g === b || Object.is(g, b)) return !0;
			}
			return !1;
		};
	});
	J$1("String.prototype.includes", function(a) {
		return a ? a : function(b, c) {
			if (null == this) throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");
			if (b instanceof RegExp) throw new TypeError("First argument to String.prototype.includes must not be a regular expression");
			return -1 !== this.indexOf(b, c || 0);
		};
	});
	J$1("Array.prototype.keys", function(a) {
		return a ? a : function() {
			return ua(this, function(b) {
				return b;
			});
		};
	});
	var wa = this || self;
	function P$1(a, b) {
		a = a.split(".");
		var c = wa;
		a[0] in c || "undefined" == typeof c.execScript || c.execScript("var " + a[0]);
		for (var d; a.length && (d = a.shift());) a.length || void 0 === b ? c[d] && c[d] !== Object.prototype[d] ? c = c[d] : c = c[d] = {} : c[d] = b;
	}
	function xa(a, b) {
		b = String.fromCharCode.apply(null, b);
		return null == a ? b : a + b;
	}
	var ya, za = "undefined" !== typeof TextDecoder, Aa, Ba = "undefined" !== typeof TextEncoder;
	function Ca(a) {
		if (Ba) a = (Aa || (Aa = new TextEncoder())).encode(a);
		else {
			var b = void 0;
			b = void 0 === b ? !1 : b;
			for (var c = 0, d = new Uint8Array(3 * a.length), e = 0; e < a.length; e++) {
				var g = a.charCodeAt(e);
				if (128 > g) d[c++] = g;
				else {
					if (2048 > g) d[c++] = g >> 6 | 192;
					else {
						if (55296 <= g && 57343 >= g) {
							if (56319 >= g && e < a.length) {
								var f = a.charCodeAt(++e);
								if (56320 <= f && 57343 >= f) {
									g = 1024 * (g - 55296) + f - 56320 + 65536;
									d[c++] = g >> 18 | 240;
									d[c++] = g >> 12 & 63 | 128;
									d[c++] = g >> 6 & 63 | 128;
									d[c++] = g & 63 | 128;
									continue;
								} else e--;
							}
							if (b) throw Error("Found an unpaired surrogate");
							g = 65533;
						}
						d[c++] = g >> 12 | 224;
						d[c++] = g >> 6 & 63 | 128;
					}
					d[c++] = g & 63 | 128;
				}
			}
			a = d.subarray(0, c);
		}
		return a;
	}
	var Da = {}, Ea = null;
	function Fa(a, b) {
		void 0 === b && (b = 0);
		Ga();
		b = Da[b];
		for (var c = Array(Math.floor(a.length / 3)), d = b[64] || "", e = 0, g = 0; e < a.length - 2; e += 3) {
			var f = a[e], h = a[e + 1], k$1 = a[e + 2], l = b[f >> 2];
			f = b[(f & 3) << 4 | h >> 4];
			h = b[(h & 15) << 2 | k$1 >> 6];
			k$1 = b[k$1 & 63];
			c[g++] = l + f + h + k$1;
		}
		l = 0;
		k$1 = d;
		switch (a.length - e) {
			case 2: l = a[e + 1], k$1 = b[(l & 15) << 2] || d;
			case 1: a = a[e], c[g] = b[a >> 2] + b[(a & 3) << 4 | l >> 4] + k$1 + d;
		}
		return c.join("");
	}
	function Ha(a) {
		var b = a.length, c = 3 * b / 4;
		c % 3 ? c = Math.floor(c) : -1 != "=.".indexOf(a[b - 1]) && (c = -1 != "=.".indexOf(a[b - 2]) ? c - 2 : c - 1);
		var d = new Uint8Array(c), e = 0;
		Ia(a, function(g) {
			d[e++] = g;
		});
		return d.subarray(0, e);
	}
	function Ia(a, b) {
		function c(k$1) {
			for (; d < a.length;) {
				var l = a.charAt(d++), n = Ea[l];
				if (null != n) return n;
				if (!/^[\s\xa0]*$/.test(l)) throw Error("Unknown base64 encoding at char: " + l);
			}
			return k$1;
		}
		Ga();
		for (var d = 0;;) {
			var e = c(-1), g = c(0), f = c(64), h = c(64);
			if (64 === h && -1 === e) break;
			b(e << 2 | g >> 4);
			64 != f && (b(g << 4 & 240 | f >> 2), 64 != h && b(f << 6 & 192 | h));
		}
	}
	function Ga() {
		if (!Ea) {
			Ea = {};
			for (var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), b = [
				"+/=",
				"+/",
				"-_=",
				"-_.",
				"-_"
			], c = 0; 5 > c; c++) {
				var d = a.concat(b[c].split(""));
				Da[c] = d;
				for (var e = 0; e < d.length; e++) {
					var g = d[e];
					void 0 === Ea[g] && (Ea[g] = e);
				}
			}
		}
	}
	var Ja = "function" === typeof Uint8Array.prototype.slice, Ka;
	function La(a, b, c) {
		return b === c ? Ka || (Ka = new Uint8Array(0)) : Ja ? a.slice(b, c) : new Uint8Array(a.subarray(b, c));
	}
	var Q$1 = 0, R$1 = 0;
	function Ma(a, b) {
		b = void 0 === b ? {} : b;
		b = void 0 === b.v ? !1 : b.v;
		this.h = null;
		this.g = this.j = this.l = 0;
		this.m = !1;
		this.v = b;
		a && Na(this, a);
	}
	function Na(a, b) {
		b = b.constructor === Uint8Array ? b : b.constructor === ArrayBuffer ? new Uint8Array(b) : b.constructor === Array ? new Uint8Array(b) : b.constructor === String ? Ha(b) : b instanceof Uint8Array ? new Uint8Array(b.buffer, b.byteOffset, b.byteLength) : new Uint8Array(0);
		a.h = b;
		a.l = 0;
		a.j = a.h.length;
		a.g = a.l;
	}
	Ma.prototype.reset = function() {
		this.g = this.l;
	};
	function Oa(a) {
		for (var b = 128, c = 0, d = 0, e = 0; 4 > e && 128 <= b; e++) b = a.h[a.g++], c |= (b & 127) << 7 * e;
		128 <= b && (b = a.h[a.g++], c |= (b & 127) << 28, d |= (b & 127) >> 4);
		if (128 <= b) for (e = 0; 5 > e && 128 <= b; e++) b = a.h[a.g++], d |= (b & 127) << 7 * e + 3;
		if (128 > b) {
			a = c >>> 0;
			b = d >>> 0;
			if (d = b & 2147483648) a = ~a + 1 >>> 0, b = ~b >>> 0, 0 == a && (b = b + 1 >>> 0);
			a = 4294967296 * b + (a >>> 0);
			return d ? -a : a;
		}
		a.m = !0;
	}
	Ma.prototype.i = function() {
		var a = this.h, b = a[this.g], c = b & 127;
		if (128 > b) return this.g += 1, c;
		b = a[this.g + 1];
		c |= (b & 127) << 7;
		if (128 > b) return this.g += 2, c;
		b = a[this.g + 2];
		c |= (b & 127) << 14;
		if (128 > b) return this.g += 3, c;
		b = a[this.g + 3];
		c |= (b & 127) << 21;
		if (128 > b) return this.g += 4, c;
		b = a[this.g + 4];
		c |= (b & 15) << 28;
		if (128 > b) return this.g += 5, c >>> 0;
		this.g += 5;
		128 <= a[this.g++] && 128 <= a[this.g++] && 128 <= a[this.g++] && 128 <= a[this.g++] && this.g++;
		return c;
	};
	Ma.prototype.o = function() {
		var a = this.h[this.g], b = this.h[this.g + 1];
		var c = this.h[this.g + 2];
		var d = this.h[this.g + 3];
		this.g += 4;
		c = (a << 0 | b << 8 | c << 16 | d << 24) >>> 0;
		a = 2 * (c >> 31) + 1;
		b = c >>> 23 & 255;
		c &= 8388607;
		return 255 == b ? c ? NaN : Infinity * a : 0 == b ? a * Math.pow(2, -149) * c : a * Math.pow(2, b - 150) * (c + Math.pow(2, 23));
	};
	var Pa = [];
	function Qa() {
		this.g = new Uint8Array(64);
		this.h = 0;
	}
	Qa.prototype.push = function(a) {
		if (!(this.h + 1 < this.g.length)) {
			var b = this.g;
			this.g = new Uint8Array(Math.ceil(1 + 2 * this.g.length));
			this.g.set(b);
		}
		this.g[this.h++] = a;
	};
	Qa.prototype.length = function() {
		return this.h;
	};
	Qa.prototype.end = function() {
		var a = this.g, b = this.h;
		this.h = 0;
		return La(a, 0, b);
	};
	function Ra(a, b) {
		for (; 127 < b;) a.push(b & 127 | 128), b >>>= 7;
		a.push(b);
	}
	function Sa(a) {
		var b = {}, c = void 0 === b.N ? !1 : b.N;
		this.o = { v: void 0 === b.v ? !1 : b.v };
		this.N = c;
		b = this.o;
		Pa.length ? (c = Pa.pop(), b && (c.v = b.v), a && Na(c, a), a = c) : a = new Ma(a, b);
		this.g = a;
		this.m = this.g.g;
		this.h = this.i = this.l = -1;
		this.j = !1;
	}
	Sa.prototype.reset = function() {
		this.g.reset();
		this.h = this.l = -1;
	};
	function S$1(a) {
		var b = a.g;
		(b = b.g == b.j) || (b = a.j) || (b = a.g, b = b.m || 0 > b.g || b.g > b.j);
		if (b) return !1;
		a.m = a.g.g;
		b = a.g.i();
		var c = b & 7;
		if (0 != c && 5 != c && 1 != c && 2 != c && 3 != c && 4 != c) return a.j = !0, !1;
		a.i = b;
		a.l = b >>> 3;
		a.h = c;
		return !0;
	}
	function Ta(a) {
		switch (a.h) {
			case 0:
				if (0 != a.h) Ta(a);
				else {
					for (a = a.g; a.h[a.g] & 128;) a.g++;
					a.g++;
				}
				break;
			case 1:
				1 != a.h ? Ta(a) : (a = a.g, a.g += 8);
				break;
			case 2:
				if (2 != a.h) Ta(a);
				else {
					var b = a.g.i();
					a = a.g;
					a.g += b;
				}
				break;
			case 5:
				5 != a.h ? Ta(a) : (a = a.g, a.g += 4);
				break;
			case 3:
				b = a.l;
				do {
					if (!S$1(a)) {
						a.j = !0;
						break;
					}
					if (4 == a.h) {
						a.l != b && (a.j = !0);
						break;
					}
					Ta(a);
				} while (1);
				break;
			default: a.j = !0;
		}
	}
	function Ua(a, b, c) {
		var d = a.g.j, e = a.g.i(), g = a.g.g + e;
		a.g.j = g;
		c(b, a);
		c = g - a.g.g;
		if (0 !== c) throw Error("Message parsing ended unexpectedly. Expected to read " + e + " bytes, instead read " + (e - c) + " bytes, either the data ended unexpectedly or the message misreported its own length");
		a.g.g = g;
		a.g.j = d;
		return b;
	}
	function T(a) {
		return a.g.o();
	}
	function Va(a) {
		var b = a.g.i();
		a = a.g;
		var c = a.g;
		a.g += b;
		a = a.h;
		var d;
		if (za) (d = ya) || (d = ya = new TextDecoder("utf-8", { fatal: !1 })), d = d.decode(a.subarray(c, c + b));
		else {
			b = c + b;
			for (var e = [], g = null, f, h, k$1; c < b;) f = a[c++], 128 > f ? e.push(f) : 224 > f ? c >= b ? e.push(65533) : (h = a[c++], 194 > f || 128 !== (h & 192) ? (c--, e.push(65533)) : e.push((f & 31) << 6 | h & 63)) : 240 > f ? c >= b - 1 ? e.push(65533) : (h = a[c++], 128 !== (h & 192) || 224 === f && 160 > h || 237 === f && 160 <= h || 128 !== ((d = a[c++]) & 192) ? (c--, e.push(65533)) : e.push((f & 15) << 12 | (h & 63) << 6 | d & 63)) : 244 >= f ? c >= b - 2 ? e.push(65533) : (h = a[c++], 128 !== (h & 192) || 0 !== (f << 28) + (h - 144) >> 30 || 128 !== ((d = a[c++]) & 192) || 128 !== ((k$1 = a[c++]) & 192) ? (c--, e.push(65533)) : (f = (f & 7) << 18 | (h & 63) << 12 | (d & 63) << 6 | k$1 & 63, f -= 65536, e.push((f >> 10 & 1023) + 55296, (f & 1023) + 56320))) : e.push(65533), 8192 <= e.length && (g = xa(g, e), e.length = 0);
			d = xa(g, e);
		}
		return d;
	}
	function Wa(a, b, c) {
		var d = a.g.i();
		for (d = a.g.g + d; a.g.g < d;) c.push(b.call(a.g));
	}
	function Xa(a, b) {
		2 == a.h ? Wa(a, Ma.prototype.o, b) : b.push(T(a));
	}
	function Ya() {
		this.h = [];
		this.i = 0;
		this.g = new Qa();
	}
	function Za(a, b) {
		0 !== b.length && (a.h.push(b), a.i += b.length);
	}
	function $a(a) {
		var b = a.i + a.g.length();
		if (0 === b) return new Uint8Array(0);
		b = new Uint8Array(b);
		for (var c = a.h, d = c.length, e = 0, g = 0; g < d; g++) {
			var f = c[g];
			0 !== f.length && (b.set(f, e), e += f.length);
		}
		c = a.g;
		d = c.h;
		0 !== d && (b.set(c.g.subarray(0, d), e), c.h = 0);
		a.h = [b];
		return b;
	}
	function U$1(a, b, c) {
		if (null != c) {
			Ra(a.g, 8 * b + 5);
			a = a.g;
			var d = c;
			d = (c = 0 > d ? 1 : 0) ? -d : d;
			0 === d ? 0 < 1 / d ? Q$1 = R$1 = 0 : (R$1 = 0, Q$1 = 2147483648) : isNaN(d) ? (R$1 = 0, Q$1 = 2147483647) : 34028234663852886e22 < d ? (R$1 = 0, Q$1 = (c << 31 | 2139095040) >>> 0) : 11754943508222875e-54 > d ? (d = Math.round(d / Math.pow(2, -149)), R$1 = 0, Q$1 = (c << 31 | d) >>> 0) : (b = Math.floor(Math.log(d) / Math.LN2), d *= Math.pow(2, -b), d = Math.round(8388608 * d), 16777216 <= d && ++b, R$1 = 0, Q$1 = (c << 31 | b + 127 << 23 | d & 8388607) >>> 0);
			c = Q$1;
			a.push(c >>> 0 & 255);
			a.push(c >>> 8 & 255);
			a.push(c >>> 16 & 255);
			a.push(c >>> 24 & 255);
		}
	}
	var ab = "function" === typeof Uint8Array;
	function bb(a, b, c) {
		if (null != a) return "object" === typeof a ? ab && a instanceof Uint8Array ? c(a) : cb(a, b, c) : b(a);
	}
	function cb(a, b, c) {
		if (Array.isArray(a)) {
			for (var d = Array(a.length), e = 0; e < a.length; e++) d[e] = bb(a[e], b, c);
			Array.isArray(a) && a.W && db(d);
			return d;
		}
		d = {};
		for (e in a) d[e] = bb(a[e], b, c);
		return d;
	}
	function eb(a) {
		return "number" === typeof a ? isFinite(a) ? a : String(a) : a;
	}
	var fb = { W: {
		value: !0,
		configurable: !0
	} };
	function db(a) {
		Array.isArray(a) && !Object.isFrozen(a) && Object.defineProperties(a, fb);
		return a;
	}
	var gb;
	function V$1(a, b, c) {
		var d = gb;
		gb = null;
		a || (a = d);
		d = this.constructor.ca;
		a || (a = d ? [d] : []);
		this.j = d ? 0 : -1;
		this.m = this.g = null;
		this.h = a;
		a: {
			d = this.h.length;
			a = d - 1;
			if (d && (d = this.h[a], !(null === d || "object" != typeof d || Array.isArray(d) || ab && d instanceof Uint8Array))) {
				this.l = a - this.j;
				this.i = d;
				break a;
			}
			void 0 !== b && -1 < b ? (this.l = Math.max(b, a + 1 - this.j), this.i = null) : this.l = Number.MAX_VALUE;
		}
		if (c) for (b = 0; b < c.length; b++) a = c[b], a < this.l ? (a += this.j, (d = this.h[a]) ? db(d) : this.h[a] = hb) : (ib(this), (d = this.i[a]) ? db(d) : this.i[a] = hb);
	}
	var hb = Object.freeze(db([]));
	function ib(a) {
		var b = a.l + a.j;
		a.h[b] || (a.i = a.h[b] = {});
	}
	function W$1(a, b, c) {
		return -1 === b ? null : (void 0 === c ? 0 : c) || b >= a.l ? a.i ? a.i[b] : void 0 : a.h[b + a.j];
	}
	function jb(a, b) {
		var c = void 0 === c ? !1 : c;
		var d = W$1(a, b, c);
		d ??= hb;
		d === hb && (d = db([]), X$1(a, b, d, c));
		return d;
	}
	function kb(a) {
		var b = jb(a, 3);
		a.m || (a.m = {});
		if (!a.m[3]) {
			for (var c = 0; c < b.length; c++) b[c] = +b[c];
			a.m[3] = !0;
		}
		return b;
	}
	function lb(a, b, c) {
		a = W$1(a, b);
		return null == a ? c : a;
	}
	function Y$1(a, b, c) {
		a = W$1(a, b);
		a = null == a ? a : +a;
		return null == a ? void 0 === c ? 0 : c : a;
	}
	function X$1(a, b, c, d) {
		(void 0 === d ? 0 : d) || b >= a.l ? (ib(a), a.i[b] = c) : a.h[b + a.j] = c;
	}
	function mb(a, b, c) {
		if (-1 === c) return null;
		a.g || (a.g = {});
		if (!a.g[c]) {
			var d = W$1(a, c, !1);
			d && (a.g[c] = new b(d));
		}
		return a.g[c];
	}
	function nb(a, b) {
		a.g || (a.g = {});
		var c = a.g[1];
		if (!c) {
			var d = jb(a, 1);
			c = [];
			for (var e = 0; e < d.length; e++) c[e] = new b(d[e]);
			a.g[1] = c;
		}
		return c;
	}
	function ob(a, b, c) {
		var d = void 0 === d ? !1 : d;
		a.g || (a.g = {});
		var e = c ? pb(c, !1) : c;
		a.g[b] = c;
		X$1(a, b, e, d);
	}
	function qb(a, b, c, d) {
		var e = nb(a, c);
		b = b ? b : new c();
		a = jb(a, 1);
		void 0 != d ? (e.splice(d, 0, b), a.splice(d, 0, pb(b, !1))) : (e.push(b), a.push(pb(b, !1)));
	}
	V$1.prototype.toJSON = function() {
		var a = pb(this, !1);
		return cb(a, eb, Fa);
	};
	function pb(a, b) {
		if (a.g) for (var c in a.g) {
			var d = a.g[c];
			if (Array.isArray(d)) for (var e = 0; e < d.length; e++) d[e] && pb(d[e], b);
			else d && pb(d, b);
		}
		return a.h;
	}
	V$1.prototype.toString = function() {
		return pb(this, !1).toString();
	};
	function rb(a, b) {
		if (a = a.o) {
			Za(b, b.g.end());
			for (var c = 0; c < a.length; c++) Za(b, a[c]);
		}
	}
	function sb(a, b) {
		if (4 == b.h) return !1;
		var c = b.m;
		Ta(b);
		b.N || (b = La(b.g.h, c, b.g.g), (c = a.o) ? c.push(b) : a.o = [b]);
		return !0;
	}
	function tb(a) {
		V$1.call(this, a, -1, ub);
	}
	M(tb, V$1);
	tb.prototype.getRows = function() {
		return W$1(this, 1);
	};
	tb.prototype.getCols = function() {
		return W$1(this, 2);
	};
	tb.prototype.getPackedDataList = function() {
		return kb(this);
	};
	tb.prototype.getLayout = function() {
		return lb(this, 4, 0);
	};
	function vb(a, b) {
		for (; S$1(b);) switch (b.i) {
			case 8:
				var c = b.g.i();
				X$1(a, 1, c);
				break;
			case 16:
				c = b.g.i();
				X$1(a, 2, c);
				break;
			case 29:
			case 26:
				Xa(b, a.getPackedDataList());
				break;
			case 32:
				c = Oa(b.g);
				X$1(a, 4, c);
				break;
			default: if (!sb(a, b)) return a;
		}
		return a;
	}
	var ub = [3];
	function Z$1(a, b) {
		var c = void 0;
		return new (c || (c = Promise))(function(d, e) {
			function g(k$1) {
				try {
					h(b.next(k$1));
				} catch (l) {
					e(l);
				}
			}
			function f(k$1) {
				try {
					h(b["throw"](k$1));
				} catch (l) {
					e(l);
				}
			}
			function h(k$1) {
				k$1.done ? d(k$1.value) : new c(function(l) {
					l(k$1.value);
				}).then(g, f);
			}
			h((b = b.apply(a, void 0)).next());
		});
	}
	function wb(a) {
		V$1.call(this, a);
	}
	M(wb, V$1);
	function xb(a, b) {
		for (; S$1(b);) switch (b.i) {
			case 8:
				var c = b.g.i();
				X$1(a, 1, c);
				break;
			case 21:
				c = T(b);
				X$1(a, 2, c);
				break;
			case 26:
				c = Va(b);
				X$1(a, 3, c);
				break;
			case 34:
				c = Va(b);
				X$1(a, 4, c);
				break;
			default: if (!sb(a, b)) return a;
		}
		return a;
	}
	function yb(a) {
		V$1.call(this, a, -1, zb);
	}
	M(yb, V$1);
	yb.prototype.addClassification = function(a, b) {
		qb(this, a, wb, b);
		return this;
	};
	var zb = [1];
	function Ab(a) {
		V$1.call(this, a);
	}
	M(Ab, V$1);
	function Bb(a, b) {
		for (; S$1(b);) switch (b.i) {
			case 13:
				var c = T(b);
				X$1(a, 1, c);
				break;
			case 21:
				c = T(b);
				X$1(a, 2, c);
				break;
			case 29:
				c = T(b);
				X$1(a, 3, c);
				break;
			case 37:
				c = T(b);
				X$1(a, 4, c);
				break;
			case 45:
				c = T(b);
				X$1(a, 5, c);
				break;
			default: if (!sb(a, b)) return a;
		}
		return a;
	}
	function Cb(a) {
		V$1.call(this, a, -1, Db);
	}
	M(Cb, V$1);
	function Eb(a) {
		a: {
			var b = new Cb();
			for (a = new Sa(a); S$1(a);) switch (a.i) {
				case 10:
					var c = Ua(a, new Ab(), Bb);
					qb(b, c, Ab, void 0);
					break;
				default: if (!sb(b, a)) break a;
			}
		}
		return b;
	}
	var Db = [1];
	function Fb(a) {
		V$1.call(this, a);
	}
	M(Fb, V$1);
	function Gb(a) {
		V$1.call(this, a, -1, Hb);
	}
	M(Gb, V$1);
	Gb.prototype.getVertexType = function() {
		return lb(this, 1, 0);
	};
	Gb.prototype.getPrimitiveType = function() {
		return lb(this, 2, 0);
	};
	Gb.prototype.getVertexBufferList = function() {
		return kb(this);
	};
	Gb.prototype.getIndexBufferList = function() {
		return jb(this, 4);
	};
	function Ib(a, b) {
		for (; S$1(b);) switch (b.i) {
			case 8:
				var c = Oa(b.g);
				X$1(a, 1, c);
				break;
			case 16:
				c = Oa(b.g);
				X$1(a, 2, c);
				break;
			case 29:
			case 26:
				Xa(b, a.getVertexBufferList());
				break;
			case 32:
			case 34:
				c = b;
				var d = a.getIndexBufferList();
				2 == c.h ? Wa(c, Ma.prototype.i, d) : d.push(c.g.i());
				break;
			default: if (!sb(a, b)) return a;
		}
		return a;
	}
	var Hb = [3, 4];
	function Jb(a) {
		V$1.call(this, a);
	}
	M(Jb, V$1);
	Jb.prototype.getMesh = function() {
		return mb(this, Gb, 1);
	};
	Jb.prototype.getPoseTransformMatrix = function() {
		return mb(this, tb, 2);
	};
	function Kb(a) {
		a: {
			var b = new Jb();
			for (a = new Sa(a); S$1(a);) switch (a.i) {
				case 10:
					var c = Ua(a, new Gb(), Ib);
					ob(b, 1, c);
					break;
				case 18:
					c = Ua(a, new tb(), vb);
					ob(b, 2, c);
					break;
				default: if (!sb(b, a)) break a;
			}
		}
		return b;
	}
	function Lb(a, b, c) {
		c = a.createShader(0 === c ? a.VERTEX_SHADER : a.FRAGMENT_SHADER);
		a.shaderSource(c, b);
		a.compileShader(c);
		if (!a.getShaderParameter(c, a.COMPILE_STATUS)) throw Error("Could not compile WebGL shader.\n\n" + a.getShaderInfoLog(c));
		return c;
	}
	function Mb(a) {
		return nb(a, wb).map(function(b) {
			return {
				index: lb(b, 1, 0),
				Y: Y$1(b, 2),
				label: null != W$1(b, 3) ? lb(b, 3, "") : void 0,
				displayName: null != W$1(b, 4) ? lb(b, 4, "") : void 0
			};
		});
	}
	function Nb(a) {
		return {
			x: Y$1(a, 1),
			y: Y$1(a, 2),
			z: Y$1(a, 3),
			visibility: null != W$1(a, 4) ? Y$1(a, 4) : void 0
		};
	}
	function Ob(a, b) {
		this.h = a;
		this.g = b;
		this.l = 0;
	}
	function Pb(a, b, c) {
		Qb(a, b);
		if ("function" === typeof a.g.canvas.transferToImageBitmap) return Promise.resolve(a.g.canvas.transferToImageBitmap());
		if (c) return Promise.resolve(a.g.canvas);
		if ("function" === typeof createImageBitmap) return createImageBitmap(a.g.canvas);
		void 0 === a.i && (a.i = document.createElement("canvas"));
		return new Promise(function(d) {
			a.i.height = a.g.canvas.height;
			a.i.width = a.g.canvas.width;
			a.i.getContext("2d", {}).drawImage(a.g.canvas, 0, 0, a.g.canvas.width, a.g.canvas.height);
			d(a.i);
		});
	}
	function Qb(a, b) {
		var c = a.g;
		if (void 0 === a.m) {
			var d = Lb(c, "\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }", 0), e = Lb(c, "\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }", 1), g = c.createProgram();
			c.attachShader(g, d);
			c.attachShader(g, e);
			c.linkProgram(g);
			if (!c.getProgramParameter(g, c.LINK_STATUS)) throw Error("Could not compile WebGL program.\n\n" + c.getProgramInfoLog(g));
			d = a.m = g;
			c.useProgram(d);
			e = c.getUniformLocation(d, "sampler0");
			a.j = {
				I: c.getAttribLocation(d, "aVertex"),
				H: c.getAttribLocation(d, "aTex"),
				da: e
			};
			a.s = c.createBuffer();
			c.bindBuffer(c.ARRAY_BUFFER, a.s);
			c.enableVertexAttribArray(a.j.I);
			c.vertexAttribPointer(a.j.I, 2, c.FLOAT, !1, 0, 0);
			c.bufferData(c.ARRAY_BUFFER, new Float32Array([
				-1,
				-1,
				-1,
				1,
				1,
				1,
				1,
				-1
			]), c.STATIC_DRAW);
			c.bindBuffer(c.ARRAY_BUFFER, null);
			a.o = c.createBuffer();
			c.bindBuffer(c.ARRAY_BUFFER, a.o);
			c.enableVertexAttribArray(a.j.H);
			c.vertexAttribPointer(a.j.H, 2, c.FLOAT, !1, 0, 0);
			c.bufferData(c.ARRAY_BUFFER, new Float32Array([
				0,
				1,
				0,
				0,
				1,
				0,
				1,
				1
			]), c.STATIC_DRAW);
			c.bindBuffer(c.ARRAY_BUFFER, null);
			c.uniform1i(e, 0);
		}
		d = a.j;
		c.useProgram(a.m);
		c.canvas.width = b.width;
		c.canvas.height = b.height;
		c.viewport(0, 0, b.width, b.height);
		c.activeTexture(c.TEXTURE0);
		a.h.bindTexture2d(b.glName);
		c.enableVertexAttribArray(d.I);
		c.bindBuffer(c.ARRAY_BUFFER, a.s);
		c.vertexAttribPointer(d.I, 2, c.FLOAT, !1, 0, 0);
		c.enableVertexAttribArray(d.H);
		c.bindBuffer(c.ARRAY_BUFFER, a.o);
		c.vertexAttribPointer(d.H, 2, c.FLOAT, !1, 0, 0);
		c.bindFramebuffer(c.DRAW_FRAMEBUFFER ? c.DRAW_FRAMEBUFFER : c.FRAMEBUFFER, null);
		c.clearColor(0, 0, 0, 0);
		c.clear(c.COLOR_BUFFER_BIT);
		c.colorMask(!0, !0, !0, !0);
		c.drawArrays(c.TRIANGLE_FAN, 0, 4);
		c.disableVertexAttribArray(d.I);
		c.disableVertexAttribArray(d.H);
		c.bindBuffer(c.ARRAY_BUFFER, null);
		a.h.bindTexture2d(0);
	}
	function Rb(a) {
		this.g = a;
	}
	var Sb = new Uint8Array([
		0,
		97,
		115,
		109,
		1,
		0,
		0,
		0,
		1,
		4,
		1,
		96,
		0,
		0,
		3,
		2,
		1,
		0,
		10,
		9,
		1,
		7,
		0,
		65,
		0,
		253,
		15,
		26,
		11
	]);
	function Tb(a, b) {
		return b + a;
	}
	function Ub(a, b) {
		window[a] = b;
	}
	function Vb(a) {
		var b = document.createElement("script");
		b.setAttribute("src", a);
		b.setAttribute("crossorigin", "anonymous");
		return new Promise(function(c) {
			b.addEventListener("load", function() {
				c();
			}, !1);
			b.addEventListener("error", function() {
				c();
			}, !1);
			document.body.appendChild(b);
		});
	}
	function Wb() {
		return Z$1(this, function b() {
			return O$1(b, function(c) {
				switch (c.g) {
					case 1: return c.m = 2, N$1(c, WebAssembly.instantiate(Sb), 4);
					case 4:
						c.g = 3;
						c.m = 0;
						break;
					case 2: return c.m = 0, c.j = null, c.return(!1);
					case 3: return c.return(!0);
				}
			});
		});
	}
	function Xb(a) {
		this.g = a;
		this.listeners = {};
		this.j = {};
		this.F = {};
		this.m = {};
		this.s = {};
		this.G = this.o = this.R = !0;
		this.C = Promise.resolve();
		this.P = "";
		this.B = {};
		this.locateFile = a && a.locateFile || Tb;
		if ("object" === typeof window) var b = window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf("/")) + "/";
		else if ("undefined" !== typeof location) b = location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf("/")) + "/";
		else throw Error("solutions can only be loaded on a web page or in a web worker");
		this.S = b;
		if (a.options) {
			b = K$1(Object.keys(a.options));
			for (var c = b.next(); !c.done; c = b.next()) {
				c = c.value;
				var d = a.options[c].default;
				void 0 !== d && (this.j[c] = "function" === typeof d ? d() : d);
			}
		}
	}
	v = Xb.prototype;
	v.close = function() {
		this.i && this.i.delete();
		return Promise.resolve();
	};
	function Yb(a, b) {
		return void 0 === a.g.files ? [] : "function" === typeof a.g.files ? a.g.files(b) : a.g.files;
	}
	function Zb(a) {
		return Z$1(a, function c() {
			var d = this, e, g, f, h, k$1, l, n, u, w, r, y;
			return O$1(c, function(m) {
				switch (m.g) {
					case 1:
						e = d;
						if (!d.R) return m.return();
						g = Yb(d, d.j);
						return N$1(m, Wb(), 2);
					case 2:
						f = m.h;
						if ("object" === typeof window) return Ub("createMediapipeSolutionsWasm", { locateFile: d.locateFile }), Ub("createMediapipeSolutionsPackedAssets", { locateFile: d.locateFile }), l = g.filter(function(t) {
							return void 0 !== t.data;
						}), n = g.filter(function(t) {
							return void 0 === t.data;
						}), u = Promise.all(l.map(function(t) {
							var x = $b(e, t.url);
							if (void 0 !== t.path) {
								var z$1 = t.path;
								x = x.then(function(E$1) {
									e.overrideFile(z$1, E$1);
									return Promise.resolve(E$1);
								});
							}
							return x;
						})), w = Promise.all(n.map(function(t) {
							return void 0 === t.simd || t.simd && f || !t.simd && !f ? Vb(e.locateFile(t.url, e.S)) : Promise.resolve();
						})).then(function() {
							return Z$1(e, function x() {
								var z$1, E$1, F$1 = this;
								return O$1(x, function(I$1) {
									if (1 == I$1.g) return z$1 = window.createMediapipeSolutionsWasm, E$1 = window.createMediapipeSolutionsPackedAssets, N$1(I$1, z$1(E$1), 2);
									F$1.h = I$1.h;
									I$1.g = 0;
								});
							});
						}), r = function() {
							return Z$1(e, function x() {
								var z$1 = this;
								return O$1(x, function(E$1) {
									z$1.g.graph && z$1.g.graph.url ? E$1 = N$1(E$1, $b(z$1, z$1.g.graph.url), 0) : (E$1.g = 0, E$1 = void 0);
									return E$1;
								});
							});
						}(), N$1(m, Promise.all([
							w,
							u,
							r
						]), 7);
						if ("function" !== typeof importScripts) throw Error("solutions can only be loaded on a web page or in a web worker");
						h = g.filter(function(t) {
							return void 0 === t.simd || t.simd && f || !t.simd && !f;
						}).map(function(t) {
							return e.locateFile(t.url, e.S);
						});
						importScripts.apply(null, L$1(h));
						return N$1(m, createMediapipeSolutionsWasm(Module), 6);
					case 6:
						d.h = m.h;
						d.l = new OffscreenCanvas(1, 1);
						d.h.canvas = d.l;
						k$1 = d.h.GL.createContext(d.l, {
							antialias: !1,
							alpha: !1,
							ba: "undefined" !== typeof WebGL2RenderingContext ? 2 : 1
						});
						d.h.GL.makeContextCurrent(k$1);
						m.g = 4;
						break;
					case 7:
						d.l = document.createElement("canvas");
						y = d.l.getContext("webgl2", {});
						if (!y && (y = d.l.getContext("webgl", {}), !y)) return alert("Failed to create WebGL canvas context when passing video frame."), m.return();
						d.D = y;
						d.h.canvas = d.l;
						d.h.createContext(d.l, !0, !0, {});
					case 4: d.i = new d.h.SolutionWasm(), d.R = !1, m.g = 0;
				}
			});
		});
	}
	function ac(a) {
		return Z$1(a, function c() {
			var d = this, e, g, f, h, k$1, l, n, u;
			return O$1(c, function(w) {
				if (1 == w.g) {
					if (d.g.graph && d.g.graph.url && d.P === d.g.graph.url) return w.return();
					d.o = !0;
					if (!d.g.graph || !d.g.graph.url) {
						w.g = 2;
						return;
					}
					d.P = d.g.graph.url;
					return N$1(w, $b(d, d.g.graph.url), 3);
				}
				2 != w.g && (e = w.h, d.i.loadGraph(e));
				g = K$1(Object.keys(d.B));
				for (f = g.next(); !f.done; f = g.next()) h = f.value, d.i.overrideFile(h, d.B[h]);
				d.B = {};
				if (d.g.listeners) for (k$1 = K$1(d.g.listeners), l = k$1.next(); !l.done; l = k$1.next()) n = l.value, bc(d, n);
				u = d.j;
				d.j = {};
				d.setOptions(u);
				w.g = 0;
			});
		});
	}
	v.reset = function() {
		return Z$1(this, function b() {
			var c = this;
			return O$1(b, function(d) {
				c.i && (c.i.reset(), c.m = {}, c.s = {});
				d.g = 0;
			});
		});
	};
	v.setOptions = function(a, b) {
		var c = this;
		if (b = b || this.g.options) {
			for (var d = [], e = [], g = {}, f = K$1(Object.keys(a)), h = f.next(); !h.done; g = {
				K: g.K,
				L: g.L
			}, h = f.next()) {
				var k$1 = h.value;
				k$1 in this.j && this.j[k$1] === a[k$1] || (this.j[k$1] = a[k$1], h = b[k$1], void 0 !== h && (h.onChange && (g.K = h.onChange, g.L = a[k$1], d.push(function(l) {
					return function() {
						return Z$1(c, function u() {
							var w, r = this;
							return O$1(u, function(y) {
								if (1 == y.g) return N$1(y, l.K(l.L), 2);
								w = y.h;
								!0 === w && (r.o = !0);
								y.g = 0;
							});
						});
					};
				}(g))), h.graphOptionXref && (k$1 = {
					valueNumber: 1 === h.type ? a[k$1] : 0,
					valueBoolean: 0 === h.type ? a[k$1] : !1,
					valueString: 2 === h.type ? a[k$1] : ""
				}, h = Object.assign(Object.assign(Object.assign({}, {
					calculatorName: "",
					calculatorIndex: 0
				}), h.graphOptionXref), k$1), e.push(h))));
			}
			if (0 !== d.length || 0 !== e.length) this.o = !0, this.A = (void 0 === this.A ? [] : this.A).concat(e), this.u = (void 0 === this.u ? [] : this.u).concat(d);
		}
	};
	function cc(a) {
		return Z$1(a, function c() {
			var d = this, e, g, f, h, k$1, l, n;
			return O$1(c, function(u) {
				switch (u.g) {
					case 1:
						if (!d.o) return u.return();
						if (!d.u) {
							u.g = 2;
							break;
						}
						e = K$1(d.u);
						g = e.next();
					case 3:
						if (g.done) {
							u.g = 5;
							break;
						}
						f = g.value;
						return N$1(u, f(), 4);
					case 4:
						g = e.next();
						u.g = 3;
						break;
					case 5: d.u = void 0;
					case 2:
						if (d.A) {
							h = new d.h.GraphOptionChangeRequestList();
							k$1 = K$1(d.A);
							for (l = k$1.next(); !l.done; l = k$1.next()) n = l.value, h.push_back(n);
							d.i.changeOptions(h);
							h.delete();
							d.A = void 0;
						}
						d.o = !1;
						u.g = 0;
				}
			});
		});
	}
	v.initialize = function() {
		return Z$1(this, function b() {
			var c = this;
			return O$1(b, function(d) {
				return 1 == d.g ? N$1(d, Zb(c), 2) : 3 != d.g ? N$1(d, ac(c), 3) : N$1(d, cc(c), 0);
			});
		});
	};
	function $b(a, b) {
		return Z$1(a, function d() {
			var e = this, g, f;
			return O$1(d, function(h) {
				if (b in e.F) return h.return(e.F[b]);
				g = e.locateFile(b, "");
				f = fetch(g).then(function(k$1) {
					return k$1.arrayBuffer();
				});
				e.F[b] = f;
				return h.return(f);
			});
		});
	}
	v.overrideFile = function(a, b) {
		this.i ? this.i.overrideFile(a, b) : this.B[a] = b;
	};
	v.clearOverriddenFiles = function() {
		this.B = {};
		this.i && this.i.clearOverriddenFiles();
	};
	v.send = function(a, b) {
		return Z$1(this, function d() {
			var e = this, g, f, h, k$1, l, n, u, w, r;
			return O$1(d, function(y) {
				switch (y.g) {
					case 1:
						if (!e.g.inputs) return y.return();
						g = 1e3 * (void 0 === b || null === b ? performance.now() : b);
						return N$1(y, e.C, 2);
					case 2: return N$1(y, e.initialize(), 3);
					case 3:
						f = new e.h.PacketDataList();
						h = K$1(Object.keys(a));
						for (k$1 = h.next(); !k$1.done; k$1 = h.next()) if (l = k$1.value, n = e.g.inputs[l]) {
							a: {
								var m = e;
								var t = a[l];
								switch (n.type) {
									case "video":
										var x = m.m[n.stream];
										x || (x = new Ob(m.h, m.D), m.m[n.stream] = x);
										m = x;
										0 === m.l && (m.l = m.h.createTexture());
										if ("undefined" !== typeof HTMLVideoElement && t instanceof HTMLVideoElement) {
											var z$1 = t.videoWidth;
											x = t.videoHeight;
										} else "undefined" !== typeof HTMLImageElement && t instanceof HTMLImageElement ? (z$1 = t.naturalWidth, x = t.naturalHeight) : (z$1 = t.width, x = t.height);
										x = {
											glName: m.l,
											width: z$1,
											height: x
										};
										z$1 = m.g;
										z$1.canvas.width = x.width;
										z$1.canvas.height = x.height;
										z$1.activeTexture(z$1.TEXTURE0);
										m.h.bindTexture2d(m.l);
										z$1.texImage2D(z$1.TEXTURE_2D, 0, z$1.RGBA, z$1.RGBA, z$1.UNSIGNED_BYTE, t);
										m.h.bindTexture2d(0);
										m = x;
										break a;
									case "detections":
										x = m.m[n.stream];
										x || (x = new Rb(m.h), m.m[n.stream] = x);
										m = x;
										m.data || (m.data = new m.g.DetectionListData());
										m.data.reset(t.length);
										for (x = 0; x < t.length; ++x) {
											z$1 = t[x];
											var E$1 = m.data, F$1 = E$1.setBoundingBox, I$1 = x;
											var H$1 = z$1.T;
											var p = new Fb();
											X$1(p, 1, H$1.Z);
											X$1(p, 2, H$1.$);
											X$1(p, 3, H$1.height);
											X$1(p, 4, H$1.width);
											X$1(p, 5, H$1.rotation);
											X$1(p, 6, H$1.X);
											var A = H$1 = new Ya();
											U$1(A, 1, W$1(p, 1));
											U$1(A, 2, W$1(p, 2));
											U$1(A, 3, W$1(p, 3));
											U$1(A, 4, W$1(p, 4));
											U$1(A, 5, W$1(p, 5));
											var C$1 = W$1(p, 6);
											if (null != C$1 && null != C$1) {
												Ra(A.g, 48);
												var q$1 = A.g, B$1 = C$1;
												C$1 = 0 > B$1;
												B$1 = Math.abs(B$1);
												var D$1 = B$1 >>> 0;
												B$1 = Math.floor((B$1 - D$1) / 4294967296);
												B$1 >>>= 0;
												C$1 && (B$1 = ~B$1 >>> 0, D$1 = (~D$1 >>> 0) + 1, 4294967295 < D$1 && (D$1 = 0, B$1++, 4294967295 < B$1 && (B$1 = 0)));
												Q$1 = D$1;
												R$1 = B$1;
												C$1 = Q$1;
												for (D$1 = R$1; 0 < D$1 || 127 < C$1;) q$1.push(C$1 & 127 | 128), C$1 = (C$1 >>> 7 | D$1 << 25) >>> 0, D$1 >>>= 7;
												q$1.push(C$1);
											}
											rb(p, A);
											H$1 = $a(H$1);
											F$1.call(E$1, I$1, H$1);
											if (z$1.O) for (E$1 = 0; E$1 < z$1.O.length; ++E$1) p = z$1.O[E$1], A = p.visibility ? !0 : !1, F$1 = m.data, I$1 = F$1.addNormalizedLandmark, H$1 = x, p = Object.assign(Object.assign({}, p), { visibility: A ? p.visibility : 0 }), A = new Ab(), X$1(A, 1, p.x), X$1(A, 2, p.y), X$1(A, 3, p.z), p.visibility && X$1(A, 4, p.visibility), q$1 = p = new Ya(), U$1(q$1, 1, W$1(A, 1)), U$1(q$1, 2, W$1(A, 2)), U$1(q$1, 3, W$1(A, 3)), U$1(q$1, 4, W$1(A, 4)), U$1(q$1, 5, W$1(A, 5)), rb(A, q$1), p = $a(p), I$1.call(F$1, H$1, p);
											if (z$1.M) for (E$1 = 0; E$1 < z$1.M.length; ++E$1) {
												F$1 = m.data;
												I$1 = F$1.addClassification;
												H$1 = x;
												p = z$1.M[E$1];
												A = new wb();
												X$1(A, 2, p.Y);
												p.index && X$1(A, 1, p.index);
												p.label && X$1(A, 3, p.label);
												p.displayName && X$1(A, 4, p.displayName);
												q$1 = p = new Ya();
												D$1 = W$1(A, 1);
												if (null != D$1 && null != D$1) if (Ra(q$1.g, 8), C$1 = q$1.g, 0 <= D$1) Ra(C$1, D$1);
												else {
													for (B$1 = 0; 9 > B$1; B$1++) C$1.push(D$1 & 127 | 128), D$1 >>= 7;
													C$1.push(1);
												}
												U$1(q$1, 2, W$1(A, 2));
												C$1 = W$1(A, 3);
												null != C$1 && (C$1 = Ca(C$1), Ra(q$1.g, 26), Ra(q$1.g, C$1.length), Za(q$1, q$1.g.end()), Za(q$1, C$1));
												C$1 = W$1(A, 4);
												null != C$1 && (C$1 = Ca(C$1), Ra(q$1.g, 34), Ra(q$1.g, C$1.length), Za(q$1, q$1.g.end()), Za(q$1, C$1));
												rb(A, q$1);
												p = $a(p);
												I$1.call(F$1, H$1, p);
											}
										}
										m = m.data;
										break a;
									default: m = {};
								}
							}
							u = m;
							w = n.stream;
							switch (n.type) {
								case "video":
									f.pushTexture2d(Object.assign(Object.assign({}, u), {
										stream: w,
										timestamp: g
									}));
									break;
								case "detections":
									r = u;
									r.stream = w;
									r.timestamp = g;
									f.pushDetectionList(r);
									break;
								default: throw Error("Unknown input config type: '" + n.type + "'");
							}
						}
						e.i.send(f);
						return N$1(y, e.C, 4);
					case 4: f.delete(), y.g = 0;
				}
			});
		});
	};
	function dc(a, b, c) {
		return Z$1(a, function e() {
			var g, f, h, k$1, l, n, u = this, w, r, y, m, t, x, z$1, E$1;
			return O$1(e, function(F$1) {
				switch (F$1.g) {
					case 1:
						if (!c) return F$1.return(b);
						g = {};
						f = 0;
						h = K$1(Object.keys(c));
						for (k$1 = h.next(); !k$1.done; k$1 = h.next()) l = k$1.value, n = c[l], "string" !== typeof n && "texture" === n.type && void 0 !== b[n.stream] && ++f;
						1 < f && (u.G = !1);
						w = K$1(Object.keys(c));
						k$1 = w.next();
					case 2:
						if (k$1.done) {
							F$1.g = 4;
							break;
						}
						r = k$1.value;
						y = c[r];
						if ("string" === typeof y) return z$1 = g, E$1 = r, N$1(F$1, ec(u, r, b[y]), 14);
						m = b[y.stream];
						if ("detection_list" === y.type) {
							if (m) {
								var I$1 = m.getRectList();
								for (var H$1 = m.getLandmarksList(), p = m.getClassificationsList(), A = [], C$1 = 0; C$1 < I$1.size(); ++C$1) {
									var q$1 = I$1.get(C$1);
									a: {
										var B$1 = new Fb();
										for (q$1 = new Sa(q$1); S$1(q$1);) switch (q$1.i) {
											case 13:
												var D$1 = T(q$1);
												X$1(B$1, 1, D$1);
												break;
											case 21:
												D$1 = T(q$1);
												X$1(B$1, 2, D$1);
												break;
											case 29:
												D$1 = T(q$1);
												X$1(B$1, 3, D$1);
												break;
											case 37:
												D$1 = T(q$1);
												X$1(B$1, 4, D$1);
												break;
											case 45:
												D$1 = T(q$1);
												X$1(B$1, 5, D$1);
												break;
											case 48:
												D$1 = Oa(q$1.g);
												X$1(B$1, 6, D$1);
												break;
											default: if (!sb(B$1, q$1)) break a;
										}
									}
									B$1 = {
										Z: Y$1(B$1, 1),
										$: Y$1(B$1, 2),
										height: Y$1(B$1, 3),
										width: Y$1(B$1, 4),
										rotation: Y$1(B$1, 5, 0),
										X: lb(B$1, 6, 0)
									};
									q$1 = nb(Eb(H$1.get(C$1)), Ab).map(Nb);
									var la = p.get(C$1);
									a: for (D$1 = new yb(), la = new Sa(la); S$1(la);) switch (la.i) {
										case 10:
											D$1.addClassification(Ua(la, new wb(), xb));
											break;
										default: if (!sb(D$1, la)) break a;
									}
									B$1 = {
										T: B$1,
										O: q$1,
										M: Mb(D$1)
									};
									A.push(B$1);
								}
								I$1 = A;
							} else I$1 = [];
							g[r] = I$1;
							F$1.g = 7;
							break;
						}
						if ("proto_list" === y.type) {
							if (m) {
								I$1 = Array(m.size());
								for (H$1 = 0; H$1 < m.size(); H$1++) I$1[H$1] = m.get(H$1);
								m.delete();
							} else I$1 = [];
							g[r] = I$1;
							F$1.g = 7;
							break;
						}
						if (void 0 === m) {
							F$1.g = 3;
							break;
						}
						if ("float_list" === y.type) {
							g[r] = m;
							F$1.g = 7;
							break;
						}
						if ("proto" === y.type) {
							g[r] = m;
							F$1.g = 7;
							break;
						}
						if ("texture" !== y.type) throw Error("Unknown output config type: '" + y.type + "'");
						t = u.s[r];
						t || (t = new Ob(u.h, u.D), u.s[r] = t);
						return N$1(F$1, Pb(t, m, u.G), 13);
					case 13: x = F$1.h, g[r] = x;
					case 7:
						y.transform && g[r] && (g[r] = y.transform(g[r]));
						F$1.g = 3;
						break;
					case 14: z$1[E$1] = F$1.h;
					case 3:
						k$1 = w.next();
						F$1.g = 2;
						break;
					case 4: return F$1.return(g);
				}
			});
		});
	}
	function ec(a, b, c) {
		return Z$1(a, function e() {
			var g = this, f;
			return O$1(e, function(h) {
				return "number" === typeof c || c instanceof Uint8Array || c instanceof g.h.Uint8BlobList ? h.return(c) : c instanceof g.h.Texture2dDataOut ? (f = g.s[b], f || (f = new Ob(g.h, g.D), g.s[b] = f), h.return(Pb(f, c, g.G))) : h.return(void 0);
			});
		});
	}
	function bc(a, b) {
		for (var c = b.name || "$", d = [].concat(L$1(b.wants)), e = new a.h.StringList(), g = K$1(b.wants), f = g.next(); !f.done; f = g.next()) e.push_back(f.value);
		g = a.h.PacketListener.implement({ onResults: function(h) {
			for (var k$1 = {}, l = 0; l < b.wants.length; ++l) k$1[d[l]] = h.get(l);
			var n = a.listeners[c];
			n && (a.C = dc(a, k$1, b.outs).then(function(u) {
				u = n(u);
				for (var w = 0; w < b.wants.length; ++w) {
					var r = k$1[d[w]];
					"object" === typeof r && r.hasOwnProperty && r.hasOwnProperty("delete") && r.delete();
				}
				u && (a.C = u);
			}));
		} });
		a.i.attachMultiListener(e, g);
		e.delete();
	}
	v.onResults = function(a, b) {
		this.listeners[b || "$"] = a;
	};
	P$1("Solution", Xb);
	P$1("OptionType", {
		BOOL: 0,
		NUMBER: 1,
		aa: 2,
		0: "BOOL",
		1: "NUMBER",
		2: "STRING"
	});
	function fc(a) {
		a = Kb(a);
		var b = a.getMesh();
		if (!b) return a;
		var c = new Float32Array(b.getVertexBufferList());
		b.getVertexBufferList = function() {
			return c;
		};
		var d = new Uint32Array(b.getIndexBufferList());
		b.getIndexBufferList = function() {
			return d;
		};
		return a;
	}
	var gc = {
		files: [
			{ url: "face_mesh_solution_packed_assets_loader.js" },
			{
				simd: !0,
				url: "face_mesh_solution_simd_wasm_bin.js"
			},
			{
				simd: !1,
				url: "face_mesh_solution_wasm_bin.js"
			}
		],
		graph: { url: "face_mesh.binarypb" },
		listeners: [{
			wants: [
				"multi_face_geometry",
				"image_transformed",
				"multi_face_landmarks"
			],
			outs: {
				image: "image_transformed",
				multiFaceGeometry: {
					type: "proto_list",
					stream: "multi_face_geometry",
					transform: function(a) {
						return a.map(fc);
					}
				},
				multiFaceLandmarks: {
					type: "proto_list",
					stream: "multi_face_landmarks",
					transform: function(a) {
						return a.map(function(b) {
							return nb(Eb(b), Ab).map(Nb);
						});
					}
				}
			}
		}],
		inputs: { image: {
			type: "video",
			stream: "input_frames_gpu"
		} },
		options: {
			useCpuInference: {
				type: 0,
				graphOptionXref: {
					calculatorType: "InferenceCalculator",
					fieldName: "use_cpu_inference"
				},
				default: "iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document
			},
			enableFaceGeometry: {
				type: 0,
				graphOptionXref: {
					calculatorName: "EnableFaceGeometryConstant",
					calculatorType: "ConstantSidePacketCalculator",
					fieldName: "bool_value"
				}
			},
			selfieMode: {
				type: 0,
				graphOptionXref: {
					calculatorType: "GlScalerCalculator",
					calculatorIndex: 1,
					fieldName: "flip_horizontal"
				}
			},
			maxNumFaces: {
				type: 1,
				graphOptionXref: {
					calculatorType: "ConstantSidePacketCalculator",
					calculatorName: "ConstantSidePacketCalculatorNumFaces",
					fieldName: "int_value"
				}
			},
			refineLandmarks: {
				type: 0,
				graphOptionXref: {
					calculatorType: "ConstantSidePacketCalculator",
					calculatorName: "ConstantSidePacketCalculatorRefineLandmarks",
					fieldName: "bool_value"
				}
			},
			minDetectionConfidence: {
				type: 1,
				graphOptionXref: {
					calculatorType: "TensorsToDetectionsCalculator",
					calculatorName: "facelandmarkfrontgpu__facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",
					fieldName: "min_score_thresh"
				}
			},
			minTrackingConfidence: {
				type: 1,
				graphOptionXref: {
					calculatorType: "ThresholdingCalculator",
					calculatorName: "facelandmarkfrontgpu__facelandmarkgpu__ThresholdingCalculator",
					fieldName: "threshold"
				}
			},
			cameraNear: {
				type: 1,
				graphOptionXref: {
					calculatorType: "FaceGeometryEnvGeneratorCalculator",
					fieldName: "near"
				}
			},
			cameraFar: {
				type: 1,
				graphOptionXref: {
					calculatorType: "FaceGeometryEnvGeneratorCalculator",
					fieldName: "far"
				}
			},
			cameraVerticalFovDegrees: {
				type: 1,
				graphOptionXref: {
					calculatorType: "FaceGeometryEnvGeneratorCalculator",
					fieldName: "vertical_fov_degrees"
				}
			}
		}
	};
	var hc = [
		[61, 146],
		[146, 91],
		[91, 181],
		[181, 84],
		[84, 17],
		[17, 314],
		[314, 405],
		[405, 321],
		[321, 375],
		[375, 291],
		[61, 185],
		[185, 40],
		[40, 39],
		[39, 37],
		[37, 0],
		[0, 267],
		[267, 269],
		[269, 270],
		[270, 409],
		[409, 291],
		[78, 95],
		[95, 88],
		[88, 178],
		[178, 87],
		[87, 14],
		[14, 317],
		[317, 402],
		[402, 318],
		[318, 324],
		[324, 308],
		[78, 191],
		[191, 80],
		[80, 81],
		[81, 82],
		[82, 13],
		[13, 312],
		[312, 311],
		[311, 310],
		[310, 415],
		[415, 308]
	], ic = [
		[263, 249],
		[249, 390],
		[390, 373],
		[373, 374],
		[374, 380],
		[380, 381],
		[381, 382],
		[382, 362],
		[263, 466],
		[466, 388],
		[388, 387],
		[387, 386],
		[386, 385],
		[385, 384],
		[384, 398],
		[398, 362]
	], jc = [
		[276, 283],
		[283, 282],
		[282, 295],
		[295, 285],
		[300, 293],
		[293, 334],
		[334, 296],
		[296, 336]
	], kc = [
		[33, 7],
		[7, 163],
		[163, 144],
		[144, 145],
		[145, 153],
		[153, 154],
		[154, 155],
		[155, 133],
		[33, 246],
		[246, 161],
		[161, 160],
		[160, 159],
		[159, 158],
		[158, 157],
		[157, 173],
		[173, 133]
	], lc = [
		[46, 53],
		[53, 52],
		[52, 65],
		[65, 55],
		[70, 63],
		[63, 105],
		[105, 66],
		[66, 107]
	], mc = [
		[10, 338],
		[338, 297],
		[297, 332],
		[332, 284],
		[284, 251],
		[251, 389],
		[389, 356],
		[356, 454],
		[454, 323],
		[323, 361],
		[361, 288],
		[288, 397],
		[397, 365],
		[365, 379],
		[379, 378],
		[378, 400],
		[400, 377],
		[377, 152],
		[152, 148],
		[148, 176],
		[176, 149],
		[149, 150],
		[150, 136],
		[136, 172],
		[172, 58],
		[58, 132],
		[132, 93],
		[93, 234],
		[234, 127],
		[127, 162],
		[162, 21],
		[21, 54],
		[54, 103],
		[103, 67],
		[67, 109],
		[109, 10]
	], nc = [].concat(L$1(hc), L$1(ic), L$1(jc), L$1(kc), L$1(lc), L$1(mc));
	function oc(a) {
		a = a || {};
		a = Object.assign(Object.assign({}, gc), a);
		this.g = new Xb(a);
	}
	v = oc.prototype;
	v.close = function() {
		this.g.close();
		return Promise.resolve();
	};
	v.onResults = function(a) {
		this.g.onResults(a);
	};
	v.initialize = function() {
		return Z$1(this, function b() {
			var c = this;
			return O$1(b, function(d) {
				return N$1(d, c.g.initialize(), 0);
			});
		});
	};
	v.reset = function() {
		this.g.reset();
	};
	v.send = function(a) {
		return Z$1(this, function c() {
			var d = this;
			return O$1(c, function(e) {
				return N$1(e, d.g.send(a), 0);
			});
		});
	};
	v.setOptions = function(a) {
		this.g.setOptions(a);
	};
	P$1("FACE_GEOMETRY", {
		Layout: {
			COLUMN_MAJOR: 0,
			ROW_MAJOR: 1,
			0: "COLUMN_MAJOR",
			1: "ROW_MAJOR"
		},
		PrimitiveType: {
			TRIANGLE: 0,
			0: "TRIANGLE"
		},
		VertexType: {
			VERTEX_PT: 0,
			0: "VERTEX_PT"
		},
		DEFAULT_CAMERA_PARAMS: {
			verticalFovDegrees: 63,
			near: 1,
			far: 1e4
		}
	});
	P$1("FaceMesh", oc);
	P$1("FACEMESH_LIPS", hc);
	P$1("FACEMESH_LEFT_EYE", ic);
	P$1("FACEMESH_LEFT_EYEBROW", jc);
	P$1("FACEMESH_LEFT_IRIS", [
		[474, 475],
		[475, 476],
		[476, 477],
		[477, 474]
	]);
	P$1("FACEMESH_RIGHT_EYE", kc);
	P$1("FACEMESH_RIGHT_EYEBROW", lc);
	P$1("FACEMESH_RIGHT_IRIS", [
		[469, 470],
		[470, 471],
		[471, 472],
		[472, 469]
	]);
	P$1("FACEMESH_FACE_OVAL", mc);
	P$1("FACEMESH_CONTOURS", nc);
	P$1("FACEMESH_TESSELATION", [
		[127, 34],
		[34, 139],
		[139, 127],
		[11, 0],
		[0, 37],
		[37, 11],
		[232, 231],
		[231, 120],
		[120, 232],
		[72, 37],
		[37, 39],
		[39, 72],
		[128, 121],
		[121, 47],
		[47, 128],
		[232, 121],
		[121, 128],
		[128, 232],
		[104, 69],
		[69, 67],
		[67, 104],
		[175, 171],
		[171, 148],
		[148, 175],
		[118, 50],
		[50, 101],
		[101, 118],
		[73, 39],
		[39, 40],
		[40, 73],
		[9, 151],
		[151, 108],
		[108, 9],
		[48, 115],
		[115, 131],
		[131, 48],
		[194, 204],
		[204, 211],
		[211, 194],
		[74, 40],
		[40, 185],
		[185, 74],
		[80, 42],
		[42, 183],
		[183, 80],
		[40, 92],
		[92, 186],
		[186, 40],
		[230, 229],
		[229, 118],
		[118, 230],
		[202, 212],
		[212, 214],
		[214, 202],
		[83, 18],
		[18, 17],
		[17, 83],
		[76, 61],
		[61, 146],
		[146, 76],
		[160, 29],
		[29, 30],
		[30, 160],
		[56, 157],
		[157, 173],
		[173, 56],
		[106, 204],
		[204, 194],
		[194, 106],
		[135, 214],
		[214, 192],
		[192, 135],
		[203, 165],
		[165, 98],
		[98, 203],
		[21, 71],
		[71, 68],
		[68, 21],
		[51, 45],
		[45, 4],
		[4, 51],
		[144, 24],
		[24, 23],
		[23, 144],
		[77, 146],
		[146, 91],
		[91, 77],
		[205, 50],
		[50, 187],
		[187, 205],
		[201, 200],
		[200, 18],
		[18, 201],
		[91, 106],
		[106, 182],
		[182, 91],
		[90, 91],
		[91, 181],
		[181, 90],
		[85, 84],
		[84, 17],
		[17, 85],
		[206, 203],
		[203, 36],
		[36, 206],
		[148, 171],
		[171, 140],
		[140, 148],
		[92, 40],
		[40, 39],
		[39, 92],
		[193, 189],
		[189, 244],
		[244, 193],
		[159, 158],
		[158, 28],
		[28, 159],
		[247, 246],
		[246, 161],
		[161, 247],
		[236, 3],
		[3, 196],
		[196, 236],
		[54, 68],
		[68, 104],
		[104, 54],
		[193, 168],
		[168, 8],
		[8, 193],
		[117, 228],
		[228, 31],
		[31, 117],
		[189, 193],
		[193, 55],
		[55, 189],
		[98, 97],
		[97, 99],
		[99, 98],
		[126, 47],
		[47, 100],
		[100, 126],
		[166, 79],
		[79, 218],
		[218, 166],
		[155, 154],
		[154, 26],
		[26, 155],
		[209, 49],
		[49, 131],
		[131, 209],
		[135, 136],
		[136, 150],
		[150, 135],
		[47, 126],
		[126, 217],
		[217, 47],
		[223, 52],
		[52, 53],
		[53, 223],
		[45, 51],
		[51, 134],
		[134, 45],
		[211, 170],
		[170, 140],
		[140, 211],
		[67, 69],
		[69, 108],
		[108, 67],
		[43, 106],
		[106, 91],
		[91, 43],
		[230, 119],
		[119, 120],
		[120, 230],
		[226, 130],
		[130, 247],
		[247, 226],
		[63, 53],
		[53, 52],
		[52, 63],
		[238, 20],
		[20, 242],
		[242, 238],
		[46, 70],
		[70, 156],
		[156, 46],
		[78, 62],
		[62, 96],
		[96, 78],
		[46, 53],
		[53, 63],
		[63, 46],
		[143, 34],
		[34, 227],
		[227, 143],
		[123, 117],
		[117, 111],
		[111, 123],
		[44, 125],
		[125, 19],
		[19, 44],
		[236, 134],
		[134, 51],
		[51, 236],
		[216, 206],
		[206, 205],
		[205, 216],
		[154, 153],
		[153, 22],
		[22, 154],
		[39, 37],
		[37, 167],
		[167, 39],
		[200, 201],
		[201, 208],
		[208, 200],
		[36, 142],
		[142, 100],
		[100, 36],
		[57, 212],
		[212, 202],
		[202, 57],
		[20, 60],
		[60, 99],
		[99, 20],
		[28, 158],
		[158, 157],
		[157, 28],
		[35, 226],
		[226, 113],
		[113, 35],
		[160, 159],
		[159, 27],
		[27, 160],
		[204, 202],
		[202, 210],
		[210, 204],
		[113, 225],
		[225, 46],
		[46, 113],
		[43, 202],
		[202, 204],
		[204, 43],
		[62, 76],
		[76, 77],
		[77, 62],
		[137, 123],
		[123, 116],
		[116, 137],
		[41, 38],
		[38, 72],
		[72, 41],
		[203, 129],
		[129, 142],
		[142, 203],
		[64, 98],
		[98, 240],
		[240, 64],
		[49, 102],
		[102, 64],
		[64, 49],
		[41, 73],
		[73, 74],
		[74, 41],
		[212, 216],
		[216, 207],
		[207, 212],
		[42, 74],
		[74, 184],
		[184, 42],
		[169, 170],
		[170, 211],
		[211, 169],
		[170, 149],
		[149, 176],
		[176, 170],
		[105, 66],
		[66, 69],
		[69, 105],
		[122, 6],
		[6, 168],
		[168, 122],
		[123, 147],
		[147, 187],
		[187, 123],
		[96, 77],
		[77, 90],
		[90, 96],
		[65, 55],
		[55, 107],
		[107, 65],
		[89, 90],
		[90, 180],
		[180, 89],
		[101, 100],
		[100, 120],
		[120, 101],
		[63, 105],
		[105, 104],
		[104, 63],
		[93, 137],
		[137, 227],
		[227, 93],
		[15, 86],
		[86, 85],
		[85, 15],
		[129, 102],
		[102, 49],
		[49, 129],
		[14, 87],
		[87, 86],
		[86, 14],
		[55, 8],
		[8, 9],
		[9, 55],
		[100, 47],
		[47, 121],
		[121, 100],
		[145, 23],
		[23, 22],
		[22, 145],
		[88, 89],
		[89, 179],
		[179, 88],
		[6, 122],
		[122, 196],
		[196, 6],
		[88, 95],
		[95, 96],
		[96, 88],
		[138, 172],
		[172, 136],
		[136, 138],
		[215, 58],
		[58, 172],
		[172, 215],
		[115, 48],
		[48, 219],
		[219, 115],
		[42, 80],
		[80, 81],
		[81, 42],
		[195, 3],
		[3, 51],
		[51, 195],
		[43, 146],
		[146, 61],
		[61, 43],
		[171, 175],
		[175, 199],
		[199, 171],
		[81, 82],
		[82, 38],
		[38, 81],
		[53, 46],
		[46, 225],
		[225, 53],
		[144, 163],
		[163, 110],
		[110, 144],
		[52, 65],
		[65, 66],
		[66, 52],
		[229, 228],
		[228, 117],
		[117, 229],
		[34, 127],
		[127, 234],
		[234, 34],
		[107, 108],
		[108, 69],
		[69, 107],
		[109, 108],
		[108, 151],
		[151, 109],
		[48, 64],
		[64, 235],
		[235, 48],
		[62, 78],
		[78, 191],
		[191, 62],
		[129, 209],
		[209, 126],
		[126, 129],
		[111, 35],
		[35, 143],
		[143, 111],
		[117, 123],
		[123, 50],
		[50, 117],
		[222, 65],
		[65, 52],
		[52, 222],
		[19, 125],
		[125, 141],
		[141, 19],
		[221, 55],
		[55, 65],
		[65, 221],
		[3, 195],
		[195, 197],
		[197, 3],
		[25, 7],
		[7, 33],
		[33, 25],
		[220, 237],
		[237, 44],
		[44, 220],
		[70, 71],
		[71, 139],
		[139, 70],
		[122, 193],
		[193, 245],
		[245, 122],
		[247, 130],
		[130, 33],
		[33, 247],
		[71, 21],
		[21, 162],
		[162, 71],
		[170, 169],
		[169, 150],
		[150, 170],
		[188, 174],
		[174, 196],
		[196, 188],
		[216, 186],
		[186, 92],
		[92, 216],
		[2, 97],
		[97, 167],
		[167, 2],
		[141, 125],
		[125, 241],
		[241, 141],
		[164, 167],
		[167, 37],
		[37, 164],
		[72, 38],
		[38, 12],
		[12, 72],
		[38, 82],
		[82, 13],
		[13, 38],
		[63, 68],
		[68, 71],
		[71, 63],
		[226, 35],
		[35, 111],
		[111, 226],
		[101, 50],
		[50, 205],
		[205, 101],
		[206, 92],
		[92, 165],
		[165, 206],
		[209, 198],
		[198, 217],
		[217, 209],
		[165, 167],
		[167, 97],
		[97, 165],
		[220, 115],
		[115, 218],
		[218, 220],
		[133, 112],
		[112, 243],
		[243, 133],
		[239, 238],
		[238, 241],
		[241, 239],
		[214, 135],
		[135, 169],
		[169, 214],
		[190, 173],
		[173, 133],
		[133, 190],
		[171, 208],
		[208, 32],
		[32, 171],
		[125, 44],
		[44, 237],
		[237, 125],
		[86, 87],
		[87, 178],
		[178, 86],
		[85, 86],
		[86, 179],
		[179, 85],
		[84, 85],
		[85, 180],
		[180, 84],
		[83, 84],
		[84, 181],
		[181, 83],
		[201, 83],
		[83, 182],
		[182, 201],
		[137, 93],
		[93, 132],
		[132, 137],
		[76, 62],
		[62, 183],
		[183, 76],
		[61, 76],
		[76, 184],
		[184, 61],
		[57, 61],
		[61, 185],
		[185, 57],
		[212, 57],
		[57, 186],
		[186, 212],
		[214, 207],
		[207, 187],
		[187, 214],
		[34, 143],
		[143, 156],
		[156, 34],
		[79, 239],
		[239, 237],
		[237, 79],
		[123, 137],
		[137, 177],
		[177, 123],
		[44, 1],
		[1, 4],
		[4, 44],
		[201, 194],
		[194, 32],
		[32, 201],
		[64, 102],
		[102, 129],
		[129, 64],
		[213, 215],
		[215, 138],
		[138, 213],
		[59, 166],
		[166, 219],
		[219, 59],
		[242, 99],
		[99, 97],
		[97, 242],
		[2, 94],
		[94, 141],
		[141, 2],
		[75, 59],
		[59, 235],
		[235, 75],
		[24, 110],
		[110, 228],
		[228, 24],
		[25, 130],
		[130, 226],
		[226, 25],
		[23, 24],
		[24, 229],
		[229, 23],
		[22, 23],
		[23, 230],
		[230, 22],
		[26, 22],
		[22, 231],
		[231, 26],
		[112, 26],
		[26, 232],
		[232, 112],
		[189, 190],
		[190, 243],
		[243, 189],
		[221, 56],
		[56, 190],
		[190, 221],
		[28, 56],
		[56, 221],
		[221, 28],
		[27, 28],
		[28, 222],
		[222, 27],
		[29, 27],
		[27, 223],
		[223, 29],
		[30, 29],
		[29, 224],
		[224, 30],
		[247, 30],
		[30, 225],
		[225, 247],
		[238, 79],
		[79, 20],
		[20, 238],
		[166, 59],
		[59, 75],
		[75, 166],
		[60, 75],
		[75, 240],
		[240, 60],
		[147, 177],
		[177, 215],
		[215, 147],
		[20, 79],
		[79, 166],
		[166, 20],
		[187, 147],
		[147, 213],
		[213, 187],
		[112, 233],
		[233, 244],
		[244, 112],
		[233, 128],
		[128, 245],
		[245, 233],
		[128, 114],
		[114, 188],
		[188, 128],
		[114, 217],
		[217, 174],
		[174, 114],
		[131, 115],
		[115, 220],
		[220, 131],
		[217, 198],
		[198, 236],
		[236, 217],
		[198, 131],
		[131, 134],
		[134, 198],
		[177, 132],
		[132, 58],
		[58, 177],
		[143, 35],
		[35, 124],
		[124, 143],
		[110, 163],
		[163, 7],
		[7, 110],
		[228, 110],
		[110, 25],
		[25, 228],
		[356, 389],
		[389, 368],
		[368, 356],
		[11, 302],
		[302, 267],
		[267, 11],
		[452, 350],
		[350, 349],
		[349, 452],
		[302, 303],
		[303, 269],
		[269, 302],
		[357, 343],
		[343, 277],
		[277, 357],
		[452, 453],
		[453, 357],
		[357, 452],
		[333, 332],
		[332, 297],
		[297, 333],
		[175, 152],
		[152, 377],
		[377, 175],
		[347, 348],
		[348, 330],
		[330, 347],
		[303, 304],
		[304, 270],
		[270, 303],
		[9, 336],
		[336, 337],
		[337, 9],
		[278, 279],
		[279, 360],
		[360, 278],
		[418, 262],
		[262, 431],
		[431, 418],
		[304, 408],
		[408, 409],
		[409, 304],
		[310, 415],
		[415, 407],
		[407, 310],
		[270, 409],
		[409, 410],
		[410, 270],
		[450, 348],
		[348, 347],
		[347, 450],
		[422, 430],
		[430, 434],
		[434, 422],
		[313, 314],
		[314, 17],
		[17, 313],
		[306, 307],
		[307, 375],
		[375, 306],
		[387, 388],
		[388, 260],
		[260, 387],
		[286, 414],
		[414, 398],
		[398, 286],
		[335, 406],
		[406, 418],
		[418, 335],
		[364, 367],
		[367, 416],
		[416, 364],
		[423, 358],
		[358, 327],
		[327, 423],
		[251, 284],
		[284, 298],
		[298, 251],
		[281, 5],
		[5, 4],
		[4, 281],
		[373, 374],
		[374, 253],
		[253, 373],
		[307, 320],
		[320, 321],
		[321, 307],
		[425, 427],
		[427, 411],
		[411, 425],
		[421, 313],
		[313, 18],
		[18, 421],
		[321, 405],
		[405, 406],
		[406, 321],
		[320, 404],
		[404, 405],
		[405, 320],
		[315, 16],
		[16, 17],
		[17, 315],
		[426, 425],
		[425, 266],
		[266, 426],
		[377, 400],
		[400, 369],
		[369, 377],
		[322, 391],
		[391, 269],
		[269, 322],
		[417, 465],
		[465, 464],
		[464, 417],
		[386, 257],
		[257, 258],
		[258, 386],
		[466, 260],
		[260, 388],
		[388, 466],
		[456, 399],
		[399, 419],
		[419, 456],
		[284, 332],
		[332, 333],
		[333, 284],
		[417, 285],
		[285, 8],
		[8, 417],
		[346, 340],
		[340, 261],
		[261, 346],
		[413, 441],
		[441, 285],
		[285, 413],
		[327, 460],
		[460, 328],
		[328, 327],
		[355, 371],
		[371, 329],
		[329, 355],
		[392, 439],
		[439, 438],
		[438, 392],
		[382, 341],
		[341, 256],
		[256, 382],
		[429, 420],
		[420, 360],
		[360, 429],
		[364, 394],
		[394, 379],
		[379, 364],
		[277, 343],
		[343, 437],
		[437, 277],
		[443, 444],
		[444, 283],
		[283, 443],
		[275, 440],
		[440, 363],
		[363, 275],
		[431, 262],
		[262, 369],
		[369, 431],
		[297, 338],
		[338, 337],
		[337, 297],
		[273, 375],
		[375, 321],
		[321, 273],
		[450, 451],
		[451, 349],
		[349, 450],
		[446, 342],
		[342, 467],
		[467, 446],
		[293, 334],
		[334, 282],
		[282, 293],
		[458, 461],
		[461, 462],
		[462, 458],
		[276, 353],
		[353, 383],
		[383, 276],
		[308, 324],
		[324, 325],
		[325, 308],
		[276, 300],
		[300, 293],
		[293, 276],
		[372, 345],
		[345, 447],
		[447, 372],
		[352, 345],
		[345, 340],
		[340, 352],
		[274, 1],
		[1, 19],
		[19, 274],
		[456, 248],
		[248, 281],
		[281, 456],
		[436, 427],
		[427, 425],
		[425, 436],
		[381, 256],
		[256, 252],
		[252, 381],
		[269, 391],
		[391, 393],
		[393, 269],
		[200, 199],
		[199, 428],
		[428, 200],
		[266, 330],
		[330, 329],
		[329, 266],
		[287, 273],
		[273, 422],
		[422, 287],
		[250, 462],
		[462, 328],
		[328, 250],
		[258, 286],
		[286, 384],
		[384, 258],
		[265, 353],
		[353, 342],
		[342, 265],
		[387, 259],
		[259, 257],
		[257, 387],
		[424, 431],
		[431, 430],
		[430, 424],
		[342, 353],
		[353, 276],
		[276, 342],
		[273, 335],
		[335, 424],
		[424, 273],
		[292, 325],
		[325, 307],
		[307, 292],
		[366, 447],
		[447, 345],
		[345, 366],
		[271, 303],
		[303, 302],
		[302, 271],
		[423, 266],
		[266, 371],
		[371, 423],
		[294, 455],
		[455, 460],
		[460, 294],
		[279, 278],
		[278, 294],
		[294, 279],
		[271, 272],
		[272, 304],
		[304, 271],
		[432, 434],
		[434, 427],
		[427, 432],
		[272, 407],
		[407, 408],
		[408, 272],
		[394, 430],
		[430, 431],
		[431, 394],
		[395, 369],
		[369, 400],
		[400, 395],
		[334, 333],
		[333, 299],
		[299, 334],
		[351, 417],
		[417, 168],
		[168, 351],
		[352, 280],
		[280, 411],
		[411, 352],
		[325, 319],
		[319, 320],
		[320, 325],
		[295, 296],
		[296, 336],
		[336, 295],
		[319, 403],
		[403, 404],
		[404, 319],
		[330, 348],
		[348, 349],
		[349, 330],
		[293, 298],
		[298, 333],
		[333, 293],
		[323, 454],
		[454, 447],
		[447, 323],
		[15, 16],
		[16, 315],
		[315, 15],
		[358, 429],
		[429, 279],
		[279, 358],
		[14, 15],
		[15, 316],
		[316, 14],
		[285, 336],
		[336, 9],
		[9, 285],
		[329, 349],
		[349, 350],
		[350, 329],
		[374, 380],
		[380, 252],
		[252, 374],
		[318, 402],
		[402, 403],
		[403, 318],
		[6, 197],
		[197, 419],
		[419, 6],
		[318, 319],
		[319, 325],
		[325, 318],
		[367, 364],
		[364, 365],
		[365, 367],
		[435, 367],
		[367, 397],
		[397, 435],
		[344, 438],
		[438, 439],
		[439, 344],
		[272, 271],
		[271, 311],
		[311, 272],
		[195, 5],
		[5, 281],
		[281, 195],
		[273, 287],
		[287, 291],
		[291, 273],
		[396, 428],
		[428, 199],
		[199, 396],
		[311, 271],
		[271, 268],
		[268, 311],
		[283, 444],
		[444, 445],
		[445, 283],
		[373, 254],
		[254, 339],
		[339, 373],
		[282, 334],
		[334, 296],
		[296, 282],
		[449, 347],
		[347, 346],
		[346, 449],
		[264, 447],
		[447, 454],
		[454, 264],
		[336, 296],
		[296, 299],
		[299, 336],
		[338, 10],
		[10, 151],
		[151, 338],
		[278, 439],
		[439, 455],
		[455, 278],
		[292, 407],
		[407, 415],
		[415, 292],
		[358, 371],
		[371, 355],
		[355, 358],
		[340, 345],
		[345, 372],
		[372, 340],
		[346, 347],
		[347, 280],
		[280, 346],
		[442, 443],
		[443, 282],
		[282, 442],
		[19, 94],
		[94, 370],
		[370, 19],
		[441, 442],
		[442, 295],
		[295, 441],
		[248, 419],
		[419, 197],
		[197, 248],
		[263, 255],
		[255, 359],
		[359, 263],
		[440, 275],
		[275, 274],
		[274, 440],
		[300, 383],
		[383, 368],
		[368, 300],
		[351, 412],
		[412, 465],
		[465, 351],
		[263, 467],
		[467, 466],
		[466, 263],
		[301, 368],
		[368, 389],
		[389, 301],
		[395, 378],
		[378, 379],
		[379, 395],
		[412, 351],
		[351, 419],
		[419, 412],
		[436, 426],
		[426, 322],
		[322, 436],
		[2, 164],
		[164, 393],
		[393, 2],
		[370, 462],
		[462, 461],
		[461, 370],
		[164, 0],
		[0, 267],
		[267, 164],
		[302, 11],
		[11, 12],
		[12, 302],
		[268, 12],
		[12, 13],
		[13, 268],
		[293, 300],
		[300, 301],
		[301, 293],
		[446, 261],
		[261, 340],
		[340, 446],
		[330, 266],
		[266, 425],
		[425, 330],
		[426, 423],
		[423, 391],
		[391, 426],
		[429, 355],
		[355, 437],
		[437, 429],
		[391, 327],
		[327, 326],
		[326, 391],
		[440, 457],
		[457, 438],
		[438, 440],
		[341, 382],
		[382, 362],
		[362, 341],
		[459, 457],
		[457, 461],
		[461, 459],
		[434, 430],
		[430, 394],
		[394, 434],
		[414, 463],
		[463, 362],
		[362, 414],
		[396, 369],
		[369, 262],
		[262, 396],
		[354, 461],
		[461, 457],
		[457, 354],
		[316, 403],
		[403, 402],
		[402, 316],
		[315, 404],
		[404, 403],
		[403, 315],
		[314, 405],
		[405, 404],
		[404, 314],
		[313, 406],
		[406, 405],
		[405, 313],
		[421, 418],
		[418, 406],
		[406, 421],
		[366, 401],
		[401, 361],
		[361, 366],
		[306, 408],
		[408, 407],
		[407, 306],
		[291, 409],
		[409, 408],
		[408, 291],
		[287, 410],
		[410, 409],
		[409, 287],
		[432, 436],
		[436, 410],
		[410, 432],
		[434, 416],
		[416, 411],
		[411, 434],
		[264, 368],
		[368, 383],
		[383, 264],
		[309, 438],
		[438, 457],
		[457, 309],
		[352, 376],
		[376, 401],
		[401, 352],
		[274, 275],
		[275, 4],
		[4, 274],
		[421, 428],
		[428, 262],
		[262, 421],
		[294, 327],
		[327, 358],
		[358, 294],
		[433, 416],
		[416, 367],
		[367, 433],
		[289, 455],
		[455, 439],
		[439, 289],
		[462, 370],
		[370, 326],
		[326, 462],
		[2, 326],
		[326, 370],
		[370, 2],
		[305, 460],
		[460, 455],
		[455, 305],
		[254, 449],
		[449, 448],
		[448, 254],
		[255, 261],
		[261, 446],
		[446, 255],
		[253, 450],
		[450, 449],
		[449, 253],
		[252, 451],
		[451, 450],
		[450, 252],
		[256, 452],
		[452, 451],
		[451, 256],
		[341, 453],
		[453, 452],
		[452, 341],
		[413, 464],
		[464, 463],
		[463, 413],
		[441, 413],
		[413, 414],
		[414, 441],
		[258, 442],
		[442, 441],
		[441, 258],
		[257, 443],
		[443, 442],
		[442, 257],
		[259, 444],
		[444, 443],
		[443, 259],
		[260, 445],
		[445, 444],
		[444, 260],
		[467, 342],
		[342, 445],
		[445, 467],
		[459, 458],
		[458, 250],
		[250, 459],
		[289, 392],
		[392, 290],
		[290, 289],
		[290, 328],
		[328, 460],
		[460, 290],
		[376, 433],
		[433, 435],
		[435, 376],
		[250, 290],
		[290, 392],
		[392, 250],
		[411, 416],
		[416, 433],
		[433, 411],
		[341, 463],
		[463, 464],
		[464, 341],
		[453, 464],
		[464, 465],
		[465, 453],
		[357, 465],
		[465, 412],
		[412, 357],
		[343, 412],
		[412, 399],
		[399, 343],
		[360, 363],
		[363, 440],
		[440, 360],
		[437, 399],
		[399, 456],
		[456, 437],
		[420, 456],
		[456, 363],
		[363, 420],
		[401, 435],
		[435, 288],
		[288, 401],
		[372, 383],
		[383, 353],
		[353, 372],
		[339, 255],
		[255, 249],
		[249, 339],
		[448, 261],
		[261, 255],
		[255, 448],
		[133, 243],
		[243, 190],
		[190, 133],
		[133, 155],
		[155, 112],
		[112, 133],
		[33, 246],
		[246, 247],
		[247, 33],
		[33, 130],
		[130, 25],
		[25, 33],
		[398, 384],
		[384, 286],
		[286, 398],
		[362, 398],
		[398, 414],
		[414, 362],
		[362, 463],
		[463, 341],
		[341, 362],
		[263, 359],
		[359, 467],
		[467, 263],
		[263, 249],
		[249, 255],
		[255, 263],
		[466, 467],
		[467, 260],
		[260, 466],
		[75, 60],
		[60, 166],
		[166, 75],
		[238, 239],
		[239, 79],
		[79, 238],
		[162, 127],
		[127, 139],
		[139, 162],
		[72, 11],
		[11, 37],
		[37, 72],
		[121, 232],
		[232, 120],
		[120, 121],
		[73, 72],
		[72, 39],
		[39, 73],
		[114, 128],
		[128, 47],
		[47, 114],
		[233, 232],
		[232, 128],
		[128, 233],
		[103, 104],
		[104, 67],
		[67, 103],
		[152, 175],
		[175, 148],
		[148, 152],
		[119, 118],
		[118, 101],
		[101, 119],
		[74, 73],
		[73, 40],
		[40, 74],
		[107, 9],
		[9, 108],
		[108, 107],
		[49, 48],
		[48, 131],
		[131, 49],
		[32, 194],
		[194, 211],
		[211, 32],
		[184, 74],
		[74, 185],
		[185, 184],
		[191, 80],
		[80, 183],
		[183, 191],
		[185, 40],
		[40, 186],
		[186, 185],
		[119, 230],
		[230, 118],
		[118, 119],
		[210, 202],
		[202, 214],
		[214, 210],
		[84, 83],
		[83, 17],
		[17, 84],
		[77, 76],
		[76, 146],
		[146, 77],
		[161, 160],
		[160, 30],
		[30, 161],
		[190, 56],
		[56, 173],
		[173, 190],
		[182, 106],
		[106, 194],
		[194, 182],
		[138, 135],
		[135, 192],
		[192, 138],
		[129, 203],
		[203, 98],
		[98, 129],
		[54, 21],
		[21, 68],
		[68, 54],
		[5, 51],
		[51, 4],
		[4, 5],
		[145, 144],
		[144, 23],
		[23, 145],
		[90, 77],
		[77, 91],
		[91, 90],
		[207, 205],
		[205, 187],
		[187, 207],
		[83, 201],
		[201, 18],
		[18, 83],
		[181, 91],
		[91, 182],
		[182, 181],
		[180, 90],
		[90, 181],
		[181, 180],
		[16, 85],
		[85, 17],
		[17, 16],
		[205, 206],
		[206, 36],
		[36, 205],
		[176, 148],
		[148, 140],
		[140, 176],
		[165, 92],
		[92, 39],
		[39, 165],
		[245, 193],
		[193, 244],
		[244, 245],
		[27, 159],
		[159, 28],
		[28, 27],
		[30, 247],
		[247, 161],
		[161, 30],
		[174, 236],
		[236, 196],
		[196, 174],
		[103, 54],
		[54, 104],
		[104, 103],
		[55, 193],
		[193, 8],
		[8, 55],
		[111, 117],
		[117, 31],
		[31, 111],
		[221, 189],
		[189, 55],
		[55, 221],
		[240, 98],
		[98, 99],
		[99, 240],
		[142, 126],
		[126, 100],
		[100, 142],
		[219, 166],
		[166, 218],
		[218, 219],
		[112, 155],
		[155, 26],
		[26, 112],
		[198, 209],
		[209, 131],
		[131, 198],
		[169, 135],
		[135, 150],
		[150, 169],
		[114, 47],
		[47, 217],
		[217, 114],
		[224, 223],
		[223, 53],
		[53, 224],
		[220, 45],
		[45, 134],
		[134, 220],
		[32, 211],
		[211, 140],
		[140, 32],
		[109, 67],
		[67, 108],
		[108, 109],
		[146, 43],
		[43, 91],
		[91, 146],
		[231, 230],
		[230, 120],
		[120, 231],
		[113, 226],
		[226, 247],
		[247, 113],
		[105, 63],
		[63, 52],
		[52, 105],
		[241, 238],
		[238, 242],
		[242, 241],
		[124, 46],
		[46, 156],
		[156, 124],
		[95, 78],
		[78, 96],
		[96, 95],
		[70, 46],
		[46, 63],
		[63, 70],
		[116, 143],
		[143, 227],
		[227, 116],
		[116, 123],
		[123, 111],
		[111, 116],
		[1, 44],
		[44, 19],
		[19, 1],
		[3, 236],
		[236, 51],
		[51, 3],
		[207, 216],
		[216, 205],
		[205, 207],
		[26, 154],
		[154, 22],
		[22, 26],
		[165, 39],
		[39, 167],
		[167, 165],
		[199, 200],
		[200, 208],
		[208, 199],
		[101, 36],
		[36, 100],
		[100, 101],
		[43, 57],
		[57, 202],
		[202, 43],
		[242, 20],
		[20, 99],
		[99, 242],
		[56, 28],
		[28, 157],
		[157, 56],
		[124, 35],
		[35, 113],
		[113, 124],
		[29, 160],
		[160, 27],
		[27, 29],
		[211, 204],
		[204, 210],
		[210, 211],
		[124, 113],
		[113, 46],
		[46, 124],
		[106, 43],
		[43, 204],
		[204, 106],
		[96, 62],
		[62, 77],
		[77, 96],
		[227, 137],
		[137, 116],
		[116, 227],
		[73, 41],
		[41, 72],
		[72, 73],
		[36, 203],
		[203, 142],
		[142, 36],
		[235, 64],
		[64, 240],
		[240, 235],
		[48, 49],
		[49, 64],
		[64, 48],
		[42, 41],
		[41, 74],
		[74, 42],
		[214, 212],
		[212, 207],
		[207, 214],
		[183, 42],
		[42, 184],
		[184, 183],
		[210, 169],
		[169, 211],
		[211, 210],
		[140, 170],
		[170, 176],
		[176, 140],
		[104, 105],
		[105, 69],
		[69, 104],
		[193, 122],
		[122, 168],
		[168, 193],
		[50, 123],
		[123, 187],
		[187, 50],
		[89, 96],
		[96, 90],
		[90, 89],
		[66, 65],
		[65, 107],
		[107, 66],
		[179, 89],
		[89, 180],
		[180, 179],
		[119, 101],
		[101, 120],
		[120, 119],
		[68, 63],
		[63, 104],
		[104, 68],
		[234, 93],
		[93, 227],
		[227, 234],
		[16, 15],
		[15, 85],
		[85, 16],
		[209, 129],
		[129, 49],
		[49, 209],
		[15, 14],
		[14, 86],
		[86, 15],
		[107, 55],
		[55, 9],
		[9, 107],
		[120, 100],
		[100, 121],
		[121, 120],
		[153, 145],
		[145, 22],
		[22, 153],
		[178, 88],
		[88, 179],
		[179, 178],
		[197, 6],
		[6, 196],
		[196, 197],
		[89, 88],
		[88, 96],
		[96, 89],
		[135, 138],
		[138, 136],
		[136, 135],
		[138, 215],
		[215, 172],
		[172, 138],
		[218, 115],
		[115, 219],
		[219, 218],
		[41, 42],
		[42, 81],
		[81, 41],
		[5, 195],
		[195, 51],
		[51, 5],
		[57, 43],
		[43, 61],
		[61, 57],
		[208, 171],
		[171, 199],
		[199, 208],
		[41, 81],
		[81, 38],
		[38, 41],
		[224, 53],
		[53, 225],
		[225, 224],
		[24, 144],
		[144, 110],
		[110, 24],
		[105, 52],
		[52, 66],
		[66, 105],
		[118, 229],
		[229, 117],
		[117, 118],
		[227, 34],
		[34, 234],
		[234, 227],
		[66, 107],
		[107, 69],
		[69, 66],
		[10, 109],
		[109, 151],
		[151, 10],
		[219, 48],
		[48, 235],
		[235, 219],
		[183, 62],
		[62, 191],
		[191, 183],
		[142, 129],
		[129, 126],
		[126, 142],
		[116, 111],
		[111, 143],
		[143, 116],
		[118, 117],
		[117, 50],
		[50, 118],
		[223, 222],
		[222, 52],
		[52, 223],
		[94, 19],
		[19, 141],
		[141, 94],
		[222, 221],
		[221, 65],
		[65, 222],
		[196, 3],
		[3, 197],
		[197, 196],
		[45, 220],
		[220, 44],
		[44, 45],
		[156, 70],
		[70, 139],
		[139, 156],
		[188, 122],
		[122, 245],
		[245, 188],
		[139, 71],
		[71, 162],
		[162, 139],
		[149, 170],
		[170, 150],
		[150, 149],
		[122, 188],
		[188, 196],
		[196, 122],
		[206, 216],
		[216, 92],
		[92, 206],
		[164, 2],
		[2, 167],
		[167, 164],
		[242, 141],
		[141, 241],
		[241, 242],
		[0, 164],
		[164, 37],
		[37, 0],
		[11, 72],
		[72, 12],
		[12, 11],
		[12, 38],
		[38, 13],
		[13, 12],
		[70, 63],
		[63, 71],
		[71, 70],
		[31, 226],
		[226, 111],
		[111, 31],
		[36, 101],
		[101, 205],
		[205, 36],
		[203, 206],
		[206, 165],
		[165, 203],
		[126, 209],
		[209, 217],
		[217, 126],
		[98, 165],
		[165, 97],
		[97, 98],
		[237, 220],
		[220, 218],
		[218, 237],
		[237, 239],
		[239, 241],
		[241, 237],
		[210, 214],
		[214, 169],
		[169, 210],
		[140, 171],
		[171, 32],
		[32, 140],
		[241, 125],
		[125, 237],
		[237, 241],
		[179, 86],
		[86, 178],
		[178, 179],
		[180, 85],
		[85, 179],
		[179, 180],
		[181, 84],
		[84, 180],
		[180, 181],
		[182, 83],
		[83, 181],
		[181, 182],
		[194, 201],
		[201, 182],
		[182, 194],
		[177, 137],
		[137, 132],
		[132, 177],
		[184, 76],
		[76, 183],
		[183, 184],
		[185, 61],
		[61, 184],
		[184, 185],
		[186, 57],
		[57, 185],
		[185, 186],
		[216, 212],
		[212, 186],
		[186, 216],
		[192, 214],
		[214, 187],
		[187, 192],
		[139, 34],
		[34, 156],
		[156, 139],
		[218, 79],
		[79, 237],
		[237, 218],
		[147, 123],
		[123, 177],
		[177, 147],
		[45, 44],
		[44, 4],
		[4, 45],
		[208, 201],
		[201, 32],
		[32, 208],
		[98, 64],
		[64, 129],
		[129, 98],
		[192, 213],
		[213, 138],
		[138, 192],
		[235, 59],
		[59, 219],
		[219, 235],
		[141, 242],
		[242, 97],
		[97, 141],
		[97, 2],
		[2, 141],
		[141, 97],
		[240, 75],
		[75, 235],
		[235, 240],
		[229, 24],
		[24, 228],
		[228, 229],
		[31, 25],
		[25, 226],
		[226, 31],
		[230, 23],
		[23, 229],
		[229, 230],
		[231, 22],
		[22, 230],
		[230, 231],
		[232, 26],
		[26, 231],
		[231, 232],
		[233, 112],
		[112, 232],
		[232, 233],
		[244, 189],
		[189, 243],
		[243, 244],
		[189, 221],
		[221, 190],
		[190, 189],
		[222, 28],
		[28, 221],
		[221, 222],
		[223, 27],
		[27, 222],
		[222, 223],
		[224, 29],
		[29, 223],
		[223, 224],
		[225, 30],
		[30, 224],
		[224, 225],
		[113, 247],
		[247, 225],
		[225, 113],
		[99, 60],
		[60, 240],
		[240, 99],
		[213, 147],
		[147, 215],
		[215, 213],
		[60, 20],
		[20, 166],
		[166, 60],
		[192, 187],
		[187, 213],
		[213, 192],
		[243, 112],
		[112, 244],
		[244, 243],
		[244, 233],
		[233, 245],
		[245, 244],
		[245, 128],
		[128, 188],
		[188, 245],
		[188, 114],
		[114, 174],
		[174, 188],
		[134, 131],
		[131, 220],
		[220, 134],
		[174, 217],
		[217, 236],
		[236, 174],
		[236, 198],
		[198, 134],
		[134, 236],
		[215, 177],
		[177, 58],
		[58, 215],
		[156, 143],
		[143, 124],
		[124, 156],
		[25, 110],
		[110, 7],
		[7, 25],
		[31, 228],
		[228, 25],
		[25, 31],
		[264, 356],
		[356, 368],
		[368, 264],
		[0, 11],
		[11, 267],
		[267, 0],
		[451, 452],
		[452, 349],
		[349, 451],
		[267, 302],
		[302, 269],
		[269, 267],
		[350, 357],
		[357, 277],
		[277, 350],
		[350, 452],
		[452, 357],
		[357, 350],
		[299, 333],
		[333, 297],
		[297, 299],
		[396, 175],
		[175, 377],
		[377, 396],
		[280, 347],
		[347, 330],
		[330, 280],
		[269, 303],
		[303, 270],
		[270, 269],
		[151, 9],
		[9, 337],
		[337, 151],
		[344, 278],
		[278, 360],
		[360, 344],
		[424, 418],
		[418, 431],
		[431, 424],
		[270, 304],
		[304, 409],
		[409, 270],
		[272, 310],
		[310, 407],
		[407, 272],
		[322, 270],
		[270, 410],
		[410, 322],
		[449, 450],
		[450, 347],
		[347, 449],
		[432, 422],
		[422, 434],
		[434, 432],
		[18, 313],
		[313, 17],
		[17, 18],
		[291, 306],
		[306, 375],
		[375, 291],
		[259, 387],
		[387, 260],
		[260, 259],
		[424, 335],
		[335, 418],
		[418, 424],
		[434, 364],
		[364, 416],
		[416, 434],
		[391, 423],
		[423, 327],
		[327, 391],
		[301, 251],
		[251, 298],
		[298, 301],
		[275, 281],
		[281, 4],
		[4, 275],
		[254, 373],
		[373, 253],
		[253, 254],
		[375, 307],
		[307, 321],
		[321, 375],
		[280, 425],
		[425, 411],
		[411, 280],
		[200, 421],
		[421, 18],
		[18, 200],
		[335, 321],
		[321, 406],
		[406, 335],
		[321, 320],
		[320, 405],
		[405, 321],
		[314, 315],
		[315, 17],
		[17, 314],
		[423, 426],
		[426, 266],
		[266, 423],
		[396, 377],
		[377, 369],
		[369, 396],
		[270, 322],
		[322, 269],
		[269, 270],
		[413, 417],
		[417, 464],
		[464, 413],
		[385, 386],
		[386, 258],
		[258, 385],
		[248, 456],
		[456, 419],
		[419, 248],
		[298, 284],
		[284, 333],
		[333, 298],
		[168, 417],
		[417, 8],
		[8, 168],
		[448, 346],
		[346, 261],
		[261, 448],
		[417, 413],
		[413, 285],
		[285, 417],
		[326, 327],
		[327, 328],
		[328, 326],
		[277, 355],
		[355, 329],
		[329, 277],
		[309, 392],
		[392, 438],
		[438, 309],
		[381, 382],
		[382, 256],
		[256, 381],
		[279, 429],
		[429, 360],
		[360, 279],
		[365, 364],
		[364, 379],
		[379, 365],
		[355, 277],
		[277, 437],
		[437, 355],
		[282, 443],
		[443, 283],
		[283, 282],
		[281, 275],
		[275, 363],
		[363, 281],
		[395, 431],
		[431, 369],
		[369, 395],
		[299, 297],
		[297, 337],
		[337, 299],
		[335, 273],
		[273, 321],
		[321, 335],
		[348, 450],
		[450, 349],
		[349, 348],
		[359, 446],
		[446, 467],
		[467, 359],
		[283, 293],
		[293, 282],
		[282, 283],
		[250, 458],
		[458, 462],
		[462, 250],
		[300, 276],
		[276, 383],
		[383, 300],
		[292, 308],
		[308, 325],
		[325, 292],
		[283, 276],
		[276, 293],
		[293, 283],
		[264, 372],
		[372, 447],
		[447, 264],
		[346, 352],
		[352, 340],
		[340, 346],
		[354, 274],
		[274, 19],
		[19, 354],
		[363, 456],
		[456, 281],
		[281, 363],
		[426, 436],
		[436, 425],
		[425, 426],
		[380, 381],
		[381, 252],
		[252, 380],
		[267, 269],
		[269, 393],
		[393, 267],
		[421, 200],
		[200, 428],
		[428, 421],
		[371, 266],
		[266, 329],
		[329, 371],
		[432, 287],
		[287, 422],
		[422, 432],
		[290, 250],
		[250, 328],
		[328, 290],
		[385, 258],
		[258, 384],
		[384, 385],
		[446, 265],
		[265, 342],
		[342, 446],
		[386, 387],
		[387, 257],
		[257, 386],
		[422, 424],
		[424, 430],
		[430, 422],
		[445, 342],
		[342, 276],
		[276, 445],
		[422, 273],
		[273, 424],
		[424, 422],
		[306, 292],
		[292, 307],
		[307, 306],
		[352, 366],
		[366, 345],
		[345, 352],
		[268, 271],
		[271, 302],
		[302, 268],
		[358, 423],
		[423, 371],
		[371, 358],
		[327, 294],
		[294, 460],
		[460, 327],
		[331, 279],
		[279, 294],
		[294, 331],
		[303, 271],
		[271, 304],
		[304, 303],
		[436, 432],
		[432, 427],
		[427, 436],
		[304, 272],
		[272, 408],
		[408, 304],
		[395, 394],
		[394, 431],
		[431, 395],
		[378, 395],
		[395, 400],
		[400, 378],
		[296, 334],
		[334, 299],
		[299, 296],
		[6, 351],
		[351, 168],
		[168, 6],
		[376, 352],
		[352, 411],
		[411, 376],
		[307, 325],
		[325, 320],
		[320, 307],
		[285, 295],
		[295, 336],
		[336, 285],
		[320, 319],
		[319, 404],
		[404, 320],
		[329, 330],
		[330, 349],
		[349, 329],
		[334, 293],
		[293, 333],
		[333, 334],
		[366, 323],
		[323, 447],
		[447, 366],
		[316, 15],
		[15, 315],
		[315, 316],
		[331, 358],
		[358, 279],
		[279, 331],
		[317, 14],
		[14, 316],
		[316, 317],
		[8, 285],
		[285, 9],
		[9, 8],
		[277, 329],
		[329, 350],
		[350, 277],
		[253, 374],
		[374, 252],
		[252, 253],
		[319, 318],
		[318, 403],
		[403, 319],
		[351, 6],
		[6, 419],
		[419, 351],
		[324, 318],
		[318, 325],
		[325, 324],
		[397, 367],
		[367, 365],
		[365, 397],
		[288, 435],
		[435, 397],
		[397, 288],
		[278, 344],
		[344, 439],
		[439, 278],
		[310, 272],
		[272, 311],
		[311, 310],
		[248, 195],
		[195, 281],
		[281, 248],
		[375, 273],
		[273, 291],
		[291, 375],
		[175, 396],
		[396, 199],
		[199, 175],
		[312, 311],
		[311, 268],
		[268, 312],
		[276, 283],
		[283, 445],
		[445, 276],
		[390, 373],
		[373, 339],
		[339, 390],
		[295, 282],
		[282, 296],
		[296, 295],
		[448, 449],
		[449, 346],
		[346, 448],
		[356, 264],
		[264, 454],
		[454, 356],
		[337, 336],
		[336, 299],
		[299, 337],
		[337, 338],
		[338, 151],
		[151, 337],
		[294, 278],
		[278, 455],
		[455, 294],
		[308, 292],
		[292, 415],
		[415, 308],
		[429, 358],
		[358, 355],
		[355, 429],
		[265, 340],
		[340, 372],
		[372, 265],
		[352, 346],
		[346, 280],
		[280, 352],
		[295, 442],
		[442, 282],
		[282, 295],
		[354, 19],
		[19, 370],
		[370, 354],
		[285, 441],
		[441, 295],
		[295, 285],
		[195, 248],
		[248, 197],
		[197, 195],
		[457, 440],
		[440, 274],
		[274, 457],
		[301, 300],
		[300, 368],
		[368, 301],
		[417, 351],
		[351, 465],
		[465, 417],
		[251, 301],
		[301, 389],
		[389, 251],
		[394, 395],
		[395, 379],
		[379, 394],
		[399, 412],
		[412, 419],
		[419, 399],
		[410, 436],
		[436, 322],
		[322, 410],
		[326, 2],
		[2, 393],
		[393, 326],
		[354, 370],
		[370, 461],
		[461, 354],
		[393, 164],
		[164, 267],
		[267, 393],
		[268, 302],
		[302, 12],
		[12, 268],
		[312, 268],
		[268, 13],
		[13, 312],
		[298, 293],
		[293, 301],
		[301, 298],
		[265, 446],
		[446, 340],
		[340, 265],
		[280, 330],
		[330, 425],
		[425, 280],
		[322, 426],
		[426, 391],
		[391, 322],
		[420, 429],
		[429, 437],
		[437, 420],
		[393, 391],
		[391, 326],
		[326, 393],
		[344, 440],
		[440, 438],
		[438, 344],
		[458, 459],
		[459, 461],
		[461, 458],
		[364, 434],
		[434, 394],
		[394, 364],
		[428, 396],
		[396, 262],
		[262, 428],
		[274, 354],
		[354, 457],
		[457, 274],
		[317, 316],
		[316, 402],
		[402, 317],
		[316, 315],
		[315, 403],
		[403, 316],
		[315, 314],
		[314, 404],
		[404, 315],
		[314, 313],
		[313, 405],
		[405, 314],
		[313, 421],
		[421, 406],
		[406, 313],
		[323, 366],
		[366, 361],
		[361, 323],
		[292, 306],
		[306, 407],
		[407, 292],
		[306, 291],
		[291, 408],
		[408, 306],
		[291, 287],
		[287, 409],
		[409, 291],
		[287, 432],
		[432, 410],
		[410, 287],
		[427, 434],
		[434, 411],
		[411, 427],
		[372, 264],
		[264, 383],
		[383, 372],
		[459, 309],
		[309, 457],
		[457, 459],
		[366, 352],
		[352, 401],
		[401, 366],
		[1, 274],
		[274, 4],
		[4, 1],
		[418, 421],
		[421, 262],
		[262, 418],
		[331, 294],
		[294, 358],
		[358, 331],
		[435, 433],
		[433, 367],
		[367, 435],
		[392, 289],
		[289, 439],
		[439, 392],
		[328, 462],
		[462, 326],
		[326, 328],
		[94, 2],
		[2, 370],
		[370, 94],
		[289, 305],
		[305, 455],
		[455, 289],
		[339, 254],
		[254, 448],
		[448, 339],
		[359, 255],
		[255, 446],
		[446, 359],
		[254, 253],
		[253, 449],
		[449, 254],
		[253, 252],
		[252, 450],
		[450, 253],
		[252, 256],
		[256, 451],
		[451, 252],
		[256, 341],
		[341, 452],
		[452, 256],
		[414, 413],
		[413, 463],
		[463, 414],
		[286, 441],
		[441, 414],
		[414, 286],
		[286, 258],
		[258, 441],
		[441, 286],
		[258, 257],
		[257, 442],
		[442, 258],
		[257, 259],
		[259, 443],
		[443, 257],
		[259, 260],
		[260, 444],
		[444, 259],
		[260, 467],
		[467, 445],
		[445, 260],
		[309, 459],
		[459, 250],
		[250, 309],
		[305, 289],
		[289, 290],
		[290, 305],
		[305, 290],
		[290, 460],
		[460, 305],
		[401, 376],
		[376, 435],
		[435, 401],
		[309, 250],
		[250, 392],
		[392, 309],
		[376, 411],
		[411, 433],
		[433, 376],
		[453, 341],
		[341, 464],
		[464, 453],
		[357, 453],
		[453, 465],
		[465, 357],
		[343, 357],
		[357, 412],
		[412, 343],
		[437, 343],
		[343, 399],
		[399, 437],
		[344, 360],
		[360, 440],
		[440, 344],
		[420, 437],
		[437, 456],
		[456, 420],
		[360, 420],
		[420, 363],
		[363, 360],
		[361, 401],
		[401, 288],
		[288, 361],
		[265, 372],
		[372, 353],
		[353, 265],
		[390, 339],
		[339, 249],
		[249, 390],
		[339, 448],
		[448, 255],
		[255, 339]
	]);
	P$1("matrixDataToMatrix", function(a) {
		for (var b = a.getCols(), c = a.getRows(), d = a.getPackedDataList(), e = [], g = 0; g < c; g++) e.push(Array(b));
		for (g = 0; g < c; g++) for (var f = 0; f < b; f++) {
			var h = 1 === a.getLayout() ? g * b + f : f * c + g;
			e[g][f] = d[h];
		}
		return e;
	});
	P$1("VERSION", "0.4.1633559619");
}).call(void 0);

//#endregion
//#region ../../node_modules/.pnpm/@tensorflow-models+face-landmarks-detection@1.0.6_@mediapipe+face_mesh@0.4.1633559619_@_e54f8b504e49e5f97dfc77840a066483/node_modules/@tensorflow-models/face-landmarks-detection/dist/face-landmarks-detection.esm.js
var E = function() {
	return E = Object.assign || function(t) {
		for (var e, n = 1, r = arguments.length; n < r; n++) for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
		return t;
	}, E.apply(this, arguments);
};
function S(t, e, n, r) {
	return new (n || (n = Promise))((function(i, o) {
		function a(t$1) {
			try {
				s(r.next(t$1));
			} catch (t$2) {
				o(t$2);
			}
		}
		function u(t$1) {
			try {
				s(r.throw(t$1));
			} catch (t$2) {
				o(t$2);
			}
		}
		function s(t$1) {
			var e$1;
			t$1.done ? i(t$1.value) : (e$1 = t$1.value, e$1 instanceof n ? e$1 : new n((function(t$2) {
				t$2(e$1);
			}))).then(a, u);
		}
		s((r = r.apply(t, e || [])).next());
	}));
}
function F(t, e) {
	var n, r, i, o, a = {
		label: 0,
		sent: function() {
			if (1 & i[0]) throw i[1];
			return i[1];
		},
		trys: [],
		ops: []
	};
	return o = {
		next: u(0),
		throw: u(1),
		return: u(2)
	}, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
		return this;
	}), o;
	function u(o$1) {
		return function(u$1) {
			return function(o$2) {
				if (n) throw new TypeError("Generator is already executing.");
				for (; a;) try {
					if (n = 1, r && (i = 2 & o$2[0] ? r.return : o$2[0] ? r.throw || ((i = r.return) && i.call(r), 0) : r.next) && !(i = i.call(r, o$2[1])).done) return i;
					switch (r = 0, i && (o$2 = [2 & o$2[0], i.value]), o$2[0]) {
						case 0:
						case 1:
							i = o$2;
							break;
						case 4: return a.label++, {
							value: o$2[1],
							done: !1
						};
						case 5:
							a.label++, r = o$2[1], o$2 = [0];
							continue;
						case 7:
							o$2 = a.ops.pop(), a.trys.pop();
							continue;
						default:
							if (!(i = a.trys, (i = i.length > 0 && i[i.length - 1]) || 6 !== o$2[0] && 2 !== o$2[0])) {
								a = 0;
								continue;
							}
							if (3 === o$2[0] && (!i || o$2[1] > i[0] && o$2[1] < i[3])) {
								a.label = o$2[1];
								break;
							}
							if (6 === o$2[0] && a.label < i[1]) {
								a.label = i[1], i = o$2;
								break;
							}
							if (i && a.label < i[2]) {
								a.label = i[2], a.ops.push(o$2);
								break;
							}
							i[2] && a.ops.pop(), a.trys.pop();
							continue;
					}
					o$2 = e.call(t, a);
				} catch (t$1) {
					o$2 = [6, t$1], r = 0;
				} finally {
					n = i = 0;
				}
				if (5 & o$2[0]) throw o$2[1];
				return {
					value: o$2[0] ? o$2[1] : void 0,
					done: !0
				};
			}([o$1, u$1]);
		};
	}
}
function C(t) {
	var e = t.map((function(t$1) {
		return t$1[0];
	}));
	return e.push(t[t.length - 1][1]), e;
}
var O = {
	lips: C([
		[61, 146],
		[146, 91],
		[91, 181],
		[181, 84],
		[84, 17],
		[17, 314],
		[314, 405],
		[405, 321],
		[321, 375],
		[375, 291],
		[61, 185],
		[185, 40],
		[40, 39],
		[39, 37],
		[37, 0],
		[0, 267],
		[267, 269],
		[269, 270],
		[270, 409],
		[409, 291],
		[78, 95],
		[95, 88],
		[88, 178],
		[178, 87],
		[87, 14],
		[14, 317],
		[317, 402],
		[402, 318],
		[318, 324],
		[324, 308],
		[78, 191],
		[191, 80],
		[80, 81],
		[81, 82],
		[82, 13],
		[13, 312],
		[312, 311],
		[311, 310],
		[310, 415],
		[415, 308]
	]),
	leftEye: C([
		[263, 249],
		[249, 390],
		[390, 373],
		[373, 374],
		[374, 380],
		[380, 381],
		[381, 382],
		[382, 362],
		[263, 466],
		[466, 388],
		[388, 387],
		[387, 386],
		[386, 385],
		[385, 384],
		[384, 398],
		[398, 362]
	]),
	leftEyebrow: C([
		[276, 283],
		[283, 282],
		[282, 295],
		[295, 285],
		[300, 293],
		[293, 334],
		[334, 296],
		[296, 336]
	]),
	leftIris: C([
		[474, 475],
		[475, 476],
		[476, 477],
		[477, 474]
	]),
	rightEye: C([
		[33, 7],
		[7, 163],
		[163, 144],
		[144, 145],
		[145, 153],
		[153, 154],
		[154, 155],
		[155, 133],
		[33, 246],
		[246, 161],
		[161, 160],
		[160, 159],
		[159, 158],
		[158, 157],
		[157, 173],
		[173, 133]
	]),
	rightEyebrow: C([
		[46, 53],
		[53, 52],
		[52, 65],
		[65, 55],
		[70, 63],
		[63, 105],
		[105, 66],
		[66, 107]
	]),
	rightIris: C([
		[469, 470],
		[470, 471],
		[471, 472],
		[472, 469]
	]),
	faceOval: C([
		[10, 338],
		[338, 297],
		[297, 332],
		[332, 284],
		[284, 251],
		[251, 389],
		[389, 356],
		[356, 454],
		[454, 323],
		[323, 361],
		[361, 288],
		[288, 397],
		[397, 365],
		[365, 379],
		[379, 378],
		[378, 400],
		[400, 377],
		[377, 152],
		[152, 148],
		[148, 176],
		[176, 149],
		[149, 150],
		[150, 136],
		[136, 172],
		[172, 58],
		[58, 132],
		[132, 93],
		[93, 234],
		[234, 127],
		[127, 162],
		[162, 21],
		[21, 54],
		[54, 103],
		[103, 67],
		[67, 109],
		[109, 10]
	])
}, _ = [
	[127, 34],
	[34, 139],
	[139, 127],
	[11, 0],
	[0, 37],
	[37, 11],
	[232, 231],
	[231, 120],
	[120, 232],
	[72, 37],
	[37, 39],
	[39, 72],
	[128, 121],
	[121, 47],
	[47, 128],
	[232, 121],
	[121, 128],
	[128, 232],
	[104, 69],
	[69, 67],
	[67, 104],
	[175, 171],
	[171, 148],
	[148, 175],
	[118, 50],
	[50, 101],
	[101, 118],
	[73, 39],
	[39, 40],
	[40, 73],
	[9, 151],
	[151, 108],
	[108, 9],
	[48, 115],
	[115, 131],
	[131, 48],
	[194, 204],
	[204, 211],
	[211, 194],
	[74, 40],
	[40, 185],
	[185, 74],
	[80, 42],
	[42, 183],
	[183, 80],
	[40, 92],
	[92, 186],
	[186, 40],
	[230, 229],
	[229, 118],
	[118, 230],
	[202, 212],
	[212, 214],
	[214, 202],
	[83, 18],
	[18, 17],
	[17, 83],
	[76, 61],
	[61, 146],
	[146, 76],
	[160, 29],
	[29, 30],
	[30, 160],
	[56, 157],
	[157, 173],
	[173, 56],
	[106, 204],
	[204, 194],
	[194, 106],
	[135, 214],
	[214, 192],
	[192, 135],
	[203, 165],
	[165, 98],
	[98, 203],
	[21, 71],
	[71, 68],
	[68, 21],
	[51, 45],
	[45, 4],
	[4, 51],
	[144, 24],
	[24, 23],
	[23, 144],
	[77, 146],
	[146, 91],
	[91, 77],
	[205, 50],
	[50, 187],
	[187, 205],
	[201, 200],
	[200, 18],
	[18, 201],
	[91, 106],
	[106, 182],
	[182, 91],
	[90, 91],
	[91, 181],
	[181, 90],
	[85, 84],
	[84, 17],
	[17, 85],
	[206, 203],
	[203, 36],
	[36, 206],
	[148, 171],
	[171, 140],
	[140, 148],
	[92, 40],
	[40, 39],
	[39, 92],
	[193, 189],
	[189, 244],
	[244, 193],
	[159, 158],
	[158, 28],
	[28, 159],
	[247, 246],
	[246, 161],
	[161, 247],
	[236, 3],
	[3, 196],
	[196, 236],
	[54, 68],
	[68, 104],
	[104, 54],
	[193, 168],
	[168, 8],
	[8, 193],
	[117, 228],
	[228, 31],
	[31, 117],
	[189, 193],
	[193, 55],
	[55, 189],
	[98, 97],
	[97, 99],
	[99, 98],
	[126, 47],
	[47, 100],
	[100, 126],
	[166, 79],
	[79, 218],
	[218, 166],
	[155, 154],
	[154, 26],
	[26, 155],
	[209, 49],
	[49, 131],
	[131, 209],
	[135, 136],
	[136, 150],
	[150, 135],
	[47, 126],
	[126, 217],
	[217, 47],
	[223, 52],
	[52, 53],
	[53, 223],
	[45, 51],
	[51, 134],
	[134, 45],
	[211, 170],
	[170, 140],
	[140, 211],
	[67, 69],
	[69, 108],
	[108, 67],
	[43, 106],
	[106, 91],
	[91, 43],
	[230, 119],
	[119, 120],
	[120, 230],
	[226, 130],
	[130, 247],
	[247, 226],
	[63, 53],
	[53, 52],
	[52, 63],
	[238, 20],
	[20, 242],
	[242, 238],
	[46, 70],
	[70, 156],
	[156, 46],
	[78, 62],
	[62, 96],
	[96, 78],
	[46, 53],
	[53, 63],
	[63, 46],
	[143, 34],
	[34, 227],
	[227, 143],
	[123, 117],
	[117, 111],
	[111, 123],
	[44, 125],
	[125, 19],
	[19, 44],
	[236, 134],
	[134, 51],
	[51, 236],
	[216, 206],
	[206, 205],
	[205, 216],
	[154, 153],
	[153, 22],
	[22, 154],
	[39, 37],
	[37, 167],
	[167, 39],
	[200, 201],
	[201, 208],
	[208, 200],
	[36, 142],
	[142, 100],
	[100, 36],
	[57, 212],
	[212, 202],
	[202, 57],
	[20, 60],
	[60, 99],
	[99, 20],
	[28, 158],
	[158, 157],
	[157, 28],
	[35, 226],
	[226, 113],
	[113, 35],
	[160, 159],
	[159, 27],
	[27, 160],
	[204, 202],
	[202, 210],
	[210, 204],
	[113, 225],
	[225, 46],
	[46, 113],
	[43, 202],
	[202, 204],
	[204, 43],
	[62, 76],
	[76, 77],
	[77, 62],
	[137, 123],
	[123, 116],
	[116, 137],
	[41, 38],
	[38, 72],
	[72, 41],
	[203, 129],
	[129, 142],
	[142, 203],
	[64, 98],
	[98, 240],
	[240, 64],
	[49, 102],
	[102, 64],
	[64, 49],
	[41, 73],
	[73, 74],
	[74, 41],
	[212, 216],
	[216, 207],
	[207, 212],
	[42, 74],
	[74, 184],
	[184, 42],
	[169, 170],
	[170, 211],
	[211, 169],
	[170, 149],
	[149, 176],
	[176, 170],
	[105, 66],
	[66, 69],
	[69, 105],
	[122, 6],
	[6, 168],
	[168, 122],
	[123, 147],
	[147, 187],
	[187, 123],
	[96, 77],
	[77, 90],
	[90, 96],
	[65, 55],
	[55, 107],
	[107, 65],
	[89, 90],
	[90, 180],
	[180, 89],
	[101, 100],
	[100, 120],
	[120, 101],
	[63, 105],
	[105, 104],
	[104, 63],
	[93, 137],
	[137, 227],
	[227, 93],
	[15, 86],
	[86, 85],
	[85, 15],
	[129, 102],
	[102, 49],
	[49, 129],
	[14, 87],
	[87, 86],
	[86, 14],
	[55, 8],
	[8, 9],
	[9, 55],
	[100, 47],
	[47, 121],
	[121, 100],
	[145, 23],
	[23, 22],
	[22, 145],
	[88, 89],
	[89, 179],
	[179, 88],
	[6, 122],
	[122, 196],
	[196, 6],
	[88, 95],
	[95, 96],
	[96, 88],
	[138, 172],
	[172, 136],
	[136, 138],
	[215, 58],
	[58, 172],
	[172, 215],
	[115, 48],
	[48, 219],
	[219, 115],
	[42, 80],
	[80, 81],
	[81, 42],
	[195, 3],
	[3, 51],
	[51, 195],
	[43, 146],
	[146, 61],
	[61, 43],
	[171, 175],
	[175, 199],
	[199, 171],
	[81, 82],
	[82, 38],
	[38, 81],
	[53, 46],
	[46, 225],
	[225, 53],
	[144, 163],
	[163, 110],
	[110, 144],
	[52, 65],
	[65, 66],
	[66, 52],
	[229, 228],
	[228, 117],
	[117, 229],
	[34, 127],
	[127, 234],
	[234, 34],
	[107, 108],
	[108, 69],
	[69, 107],
	[109, 108],
	[108, 151],
	[151, 109],
	[48, 64],
	[64, 235],
	[235, 48],
	[62, 78],
	[78, 191],
	[191, 62],
	[129, 209],
	[209, 126],
	[126, 129],
	[111, 35],
	[35, 143],
	[143, 111],
	[117, 123],
	[123, 50],
	[50, 117],
	[222, 65],
	[65, 52],
	[52, 222],
	[19, 125],
	[125, 141],
	[141, 19],
	[221, 55],
	[55, 65],
	[65, 221],
	[3, 195],
	[195, 197],
	[197, 3],
	[25, 7],
	[7, 33],
	[33, 25],
	[220, 237],
	[237, 44],
	[44, 220],
	[70, 71],
	[71, 139],
	[139, 70],
	[122, 193],
	[193, 245],
	[245, 122],
	[247, 130],
	[130, 33],
	[33, 247],
	[71, 21],
	[21, 162],
	[162, 71],
	[170, 169],
	[169, 150],
	[150, 170],
	[188, 174],
	[174, 196],
	[196, 188],
	[216, 186],
	[186, 92],
	[92, 216],
	[2, 97],
	[97, 167],
	[167, 2],
	[141, 125],
	[125, 241],
	[241, 141],
	[164, 167],
	[167, 37],
	[37, 164],
	[72, 38],
	[38, 12],
	[12, 72],
	[38, 82],
	[82, 13],
	[13, 38],
	[63, 68],
	[68, 71],
	[71, 63],
	[226, 35],
	[35, 111],
	[111, 226],
	[101, 50],
	[50, 205],
	[205, 101],
	[206, 92],
	[92, 165],
	[165, 206],
	[209, 198],
	[198, 217],
	[217, 209],
	[165, 167],
	[167, 97],
	[97, 165],
	[220, 115],
	[115, 218],
	[218, 220],
	[133, 112],
	[112, 243],
	[243, 133],
	[239, 238],
	[238, 241],
	[241, 239],
	[214, 135],
	[135, 169],
	[169, 214],
	[190, 173],
	[173, 133],
	[133, 190],
	[171, 208],
	[208, 32],
	[32, 171],
	[125, 44],
	[44, 237],
	[237, 125],
	[86, 87],
	[87, 178],
	[178, 86],
	[85, 86],
	[86, 179],
	[179, 85],
	[84, 85],
	[85, 180],
	[180, 84],
	[83, 84],
	[84, 181],
	[181, 83],
	[201, 83],
	[83, 182],
	[182, 201],
	[137, 93],
	[93, 132],
	[132, 137],
	[76, 62],
	[62, 183],
	[183, 76],
	[61, 76],
	[76, 184],
	[184, 61],
	[57, 61],
	[61, 185],
	[185, 57],
	[212, 57],
	[57, 186],
	[186, 212],
	[214, 207],
	[207, 187],
	[187, 214],
	[34, 143],
	[143, 156],
	[156, 34],
	[79, 239],
	[239, 237],
	[237, 79],
	[123, 137],
	[137, 177],
	[177, 123],
	[44, 1],
	[1, 4],
	[4, 44],
	[201, 194],
	[194, 32],
	[32, 201],
	[64, 102],
	[102, 129],
	[129, 64],
	[213, 215],
	[215, 138],
	[138, 213],
	[59, 166],
	[166, 219],
	[219, 59],
	[242, 99],
	[99, 97],
	[97, 242],
	[2, 94],
	[94, 141],
	[141, 2],
	[75, 59],
	[59, 235],
	[235, 75],
	[24, 110],
	[110, 228],
	[228, 24],
	[25, 130],
	[130, 226],
	[226, 25],
	[23, 24],
	[24, 229],
	[229, 23],
	[22, 23],
	[23, 230],
	[230, 22],
	[26, 22],
	[22, 231],
	[231, 26],
	[112, 26],
	[26, 232],
	[232, 112],
	[189, 190],
	[190, 243],
	[243, 189],
	[221, 56],
	[56, 190],
	[190, 221],
	[28, 56],
	[56, 221],
	[221, 28],
	[27, 28],
	[28, 222],
	[222, 27],
	[29, 27],
	[27, 223],
	[223, 29],
	[30, 29],
	[29, 224],
	[224, 30],
	[247, 30],
	[30, 225],
	[225, 247],
	[238, 79],
	[79, 20],
	[20, 238],
	[166, 59],
	[59, 75],
	[75, 166],
	[60, 75],
	[75, 240],
	[240, 60],
	[147, 177],
	[177, 215],
	[215, 147],
	[20, 79],
	[79, 166],
	[166, 20],
	[187, 147],
	[147, 213],
	[213, 187],
	[112, 233],
	[233, 244],
	[244, 112],
	[233, 128],
	[128, 245],
	[245, 233],
	[128, 114],
	[114, 188],
	[188, 128],
	[114, 217],
	[217, 174],
	[174, 114],
	[131, 115],
	[115, 220],
	[220, 131],
	[217, 198],
	[198, 236],
	[236, 217],
	[198, 131],
	[131, 134],
	[134, 198],
	[177, 132],
	[132, 58],
	[58, 177],
	[143, 35],
	[35, 124],
	[124, 143],
	[110, 163],
	[163, 7],
	[7, 110],
	[228, 110],
	[110, 25],
	[25, 228],
	[356, 389],
	[389, 368],
	[368, 356],
	[11, 302],
	[302, 267],
	[267, 11],
	[452, 350],
	[350, 349],
	[349, 452],
	[302, 303],
	[303, 269],
	[269, 302],
	[357, 343],
	[343, 277],
	[277, 357],
	[452, 453],
	[453, 357],
	[357, 452],
	[333, 332],
	[332, 297],
	[297, 333],
	[175, 152],
	[152, 377],
	[377, 175],
	[347, 348],
	[348, 330],
	[330, 347],
	[303, 304],
	[304, 270],
	[270, 303],
	[9, 336],
	[336, 337],
	[337, 9],
	[278, 279],
	[279, 360],
	[360, 278],
	[418, 262],
	[262, 431],
	[431, 418],
	[304, 408],
	[408, 409],
	[409, 304],
	[310, 415],
	[415, 407],
	[407, 310],
	[270, 409],
	[409, 410],
	[410, 270],
	[450, 348],
	[348, 347],
	[347, 450],
	[422, 430],
	[430, 434],
	[434, 422],
	[313, 314],
	[314, 17],
	[17, 313],
	[306, 307],
	[307, 375],
	[375, 306],
	[387, 388],
	[388, 260],
	[260, 387],
	[286, 414],
	[414, 398],
	[398, 286],
	[335, 406],
	[406, 418],
	[418, 335],
	[364, 367],
	[367, 416],
	[416, 364],
	[423, 358],
	[358, 327],
	[327, 423],
	[251, 284],
	[284, 298],
	[298, 251],
	[281, 5],
	[5, 4],
	[4, 281],
	[373, 374],
	[374, 253],
	[253, 373],
	[307, 320],
	[320, 321],
	[321, 307],
	[425, 427],
	[427, 411],
	[411, 425],
	[421, 313],
	[313, 18],
	[18, 421],
	[321, 405],
	[405, 406],
	[406, 321],
	[320, 404],
	[404, 405],
	[405, 320],
	[315, 16],
	[16, 17],
	[17, 315],
	[426, 425],
	[425, 266],
	[266, 426],
	[377, 400],
	[400, 369],
	[369, 377],
	[322, 391],
	[391, 269],
	[269, 322],
	[417, 465],
	[465, 464],
	[464, 417],
	[386, 257],
	[257, 258],
	[258, 386],
	[466, 260],
	[260, 388],
	[388, 466],
	[456, 399],
	[399, 419],
	[419, 456],
	[284, 332],
	[332, 333],
	[333, 284],
	[417, 285],
	[285, 8],
	[8, 417],
	[346, 340],
	[340, 261],
	[261, 346],
	[413, 441],
	[441, 285],
	[285, 413],
	[327, 460],
	[460, 328],
	[328, 327],
	[355, 371],
	[371, 329],
	[329, 355],
	[392, 439],
	[439, 438],
	[438, 392],
	[382, 341],
	[341, 256],
	[256, 382],
	[429, 420],
	[420, 360],
	[360, 429],
	[364, 394],
	[394, 379],
	[379, 364],
	[277, 343],
	[343, 437],
	[437, 277],
	[443, 444],
	[444, 283],
	[283, 443],
	[275, 440],
	[440, 363],
	[363, 275],
	[431, 262],
	[262, 369],
	[369, 431],
	[297, 338],
	[338, 337],
	[337, 297],
	[273, 375],
	[375, 321],
	[321, 273],
	[450, 451],
	[451, 349],
	[349, 450],
	[446, 342],
	[342, 467],
	[467, 446],
	[293, 334],
	[334, 282],
	[282, 293],
	[458, 461],
	[461, 462],
	[462, 458],
	[276, 353],
	[353, 383],
	[383, 276],
	[308, 324],
	[324, 325],
	[325, 308],
	[276, 300],
	[300, 293],
	[293, 276],
	[372, 345],
	[345, 447],
	[447, 372],
	[352, 345],
	[345, 340],
	[340, 352],
	[274, 1],
	[1, 19],
	[19, 274],
	[456, 248],
	[248, 281],
	[281, 456],
	[436, 427],
	[427, 425],
	[425, 436],
	[381, 256],
	[256, 252],
	[252, 381],
	[269, 391],
	[391, 393],
	[393, 269],
	[200, 199],
	[199, 428],
	[428, 200],
	[266, 330],
	[330, 329],
	[329, 266],
	[287, 273],
	[273, 422],
	[422, 287],
	[250, 462],
	[462, 328],
	[328, 250],
	[258, 286],
	[286, 384],
	[384, 258],
	[265, 353],
	[353, 342],
	[342, 265],
	[387, 259],
	[259, 257],
	[257, 387],
	[424, 431],
	[431, 430],
	[430, 424],
	[342, 353],
	[353, 276],
	[276, 342],
	[273, 335],
	[335, 424],
	[424, 273],
	[292, 325],
	[325, 307],
	[307, 292],
	[366, 447],
	[447, 345],
	[345, 366],
	[271, 303],
	[303, 302],
	[302, 271],
	[423, 266],
	[266, 371],
	[371, 423],
	[294, 455],
	[455, 460],
	[460, 294],
	[279, 278],
	[278, 294],
	[294, 279],
	[271, 272],
	[272, 304],
	[304, 271],
	[432, 434],
	[434, 427],
	[427, 432],
	[272, 407],
	[407, 408],
	[408, 272],
	[394, 430],
	[430, 431],
	[431, 394],
	[395, 369],
	[369, 400],
	[400, 395],
	[334, 333],
	[333, 299],
	[299, 334],
	[351, 417],
	[417, 168],
	[168, 351],
	[352, 280],
	[280, 411],
	[411, 352],
	[325, 319],
	[319, 320],
	[320, 325],
	[295, 296],
	[296, 336],
	[336, 295],
	[319, 403],
	[403, 404],
	[404, 319],
	[330, 348],
	[348, 349],
	[349, 330],
	[293, 298],
	[298, 333],
	[333, 293],
	[323, 454],
	[454, 447],
	[447, 323],
	[15, 16],
	[16, 315],
	[315, 15],
	[358, 429],
	[429, 279],
	[279, 358],
	[14, 15],
	[15, 316],
	[316, 14],
	[285, 336],
	[336, 9],
	[9, 285],
	[329, 349],
	[349, 350],
	[350, 329],
	[374, 380],
	[380, 252],
	[252, 374],
	[318, 402],
	[402, 403],
	[403, 318],
	[6, 197],
	[197, 419],
	[419, 6],
	[318, 319],
	[319, 325],
	[325, 318],
	[367, 364],
	[364, 365],
	[365, 367],
	[435, 367],
	[367, 397],
	[397, 435],
	[344, 438],
	[438, 439],
	[439, 344],
	[272, 271],
	[271, 311],
	[311, 272],
	[195, 5],
	[5, 281],
	[281, 195],
	[273, 287],
	[287, 291],
	[291, 273],
	[396, 428],
	[428, 199],
	[199, 396],
	[311, 271],
	[271, 268],
	[268, 311],
	[283, 444],
	[444, 445],
	[445, 283],
	[373, 254],
	[254, 339],
	[339, 373],
	[282, 334],
	[334, 296],
	[296, 282],
	[449, 347],
	[347, 346],
	[346, 449],
	[264, 447],
	[447, 454],
	[454, 264],
	[336, 296],
	[296, 299],
	[299, 336],
	[338, 10],
	[10, 151],
	[151, 338],
	[278, 439],
	[439, 455],
	[455, 278],
	[292, 407],
	[407, 415],
	[415, 292],
	[358, 371],
	[371, 355],
	[355, 358],
	[340, 345],
	[345, 372],
	[372, 340],
	[346, 347],
	[347, 280],
	[280, 346],
	[442, 443],
	[443, 282],
	[282, 442],
	[19, 94],
	[94, 370],
	[370, 19],
	[441, 442],
	[442, 295],
	[295, 441],
	[248, 419],
	[419, 197],
	[197, 248],
	[263, 255],
	[255, 359],
	[359, 263],
	[440, 275],
	[275, 274],
	[274, 440],
	[300, 383],
	[383, 368],
	[368, 300],
	[351, 412],
	[412, 465],
	[465, 351],
	[263, 467],
	[467, 466],
	[466, 263],
	[301, 368],
	[368, 389],
	[389, 301],
	[395, 378],
	[378, 379],
	[379, 395],
	[412, 351],
	[351, 419],
	[419, 412],
	[436, 426],
	[426, 322],
	[322, 436],
	[2, 164],
	[164, 393],
	[393, 2],
	[370, 462],
	[462, 461],
	[461, 370],
	[164, 0],
	[0, 267],
	[267, 164],
	[302, 11],
	[11, 12],
	[12, 302],
	[268, 12],
	[12, 13],
	[13, 268],
	[293, 300],
	[300, 301],
	[301, 293],
	[446, 261],
	[261, 340],
	[340, 446],
	[330, 266],
	[266, 425],
	[425, 330],
	[426, 423],
	[423, 391],
	[391, 426],
	[429, 355],
	[355, 437],
	[437, 429],
	[391, 327],
	[327, 326],
	[326, 391],
	[440, 457],
	[457, 438],
	[438, 440],
	[341, 382],
	[382, 362],
	[362, 341],
	[459, 457],
	[457, 461],
	[461, 459],
	[434, 430],
	[430, 394],
	[394, 434],
	[414, 463],
	[463, 362],
	[362, 414],
	[396, 369],
	[369, 262],
	[262, 396],
	[354, 461],
	[461, 457],
	[457, 354],
	[316, 403],
	[403, 402],
	[402, 316],
	[315, 404],
	[404, 403],
	[403, 315],
	[314, 405],
	[405, 404],
	[404, 314],
	[313, 406],
	[406, 405],
	[405, 313],
	[421, 418],
	[418, 406],
	[406, 421],
	[366, 401],
	[401, 361],
	[361, 366],
	[306, 408],
	[408, 407],
	[407, 306],
	[291, 409],
	[409, 408],
	[408, 291],
	[287, 410],
	[410, 409],
	[409, 287],
	[432, 436],
	[436, 410],
	[410, 432],
	[434, 416],
	[416, 411],
	[411, 434],
	[264, 368],
	[368, 383],
	[383, 264],
	[309, 438],
	[438, 457],
	[457, 309],
	[352, 376],
	[376, 401],
	[401, 352],
	[274, 275],
	[275, 4],
	[4, 274],
	[421, 428],
	[428, 262],
	[262, 421],
	[294, 327],
	[327, 358],
	[358, 294],
	[433, 416],
	[416, 367],
	[367, 433],
	[289, 455],
	[455, 439],
	[439, 289],
	[462, 370],
	[370, 326],
	[326, 462],
	[2, 326],
	[326, 370],
	[370, 2],
	[305, 460],
	[460, 455],
	[455, 305],
	[254, 449],
	[449, 448],
	[448, 254],
	[255, 261],
	[261, 446],
	[446, 255],
	[253, 450],
	[450, 449],
	[449, 253],
	[252, 451],
	[451, 450],
	[450, 252],
	[256, 452],
	[452, 451],
	[451, 256],
	[341, 453],
	[453, 452],
	[452, 341],
	[413, 464],
	[464, 463],
	[463, 413],
	[441, 413],
	[413, 414],
	[414, 441],
	[258, 442],
	[442, 441],
	[441, 258],
	[257, 443],
	[443, 442],
	[442, 257],
	[259, 444],
	[444, 443],
	[443, 259],
	[260, 445],
	[445, 444],
	[444, 260],
	[467, 342],
	[342, 445],
	[445, 467],
	[459, 458],
	[458, 250],
	[250, 459],
	[289, 392],
	[392, 290],
	[290, 289],
	[290, 328],
	[328, 460],
	[460, 290],
	[376, 433],
	[433, 435],
	[435, 376],
	[250, 290],
	[290, 392],
	[392, 250],
	[411, 416],
	[416, 433],
	[433, 411],
	[341, 463],
	[463, 464],
	[464, 341],
	[453, 464],
	[464, 465],
	[465, 453],
	[357, 465],
	[465, 412],
	[412, 357],
	[343, 412],
	[412, 399],
	[399, 343],
	[360, 363],
	[363, 440],
	[440, 360],
	[437, 399],
	[399, 456],
	[456, 437],
	[420, 456],
	[456, 363],
	[363, 420],
	[401, 435],
	[435, 288],
	[288, 401],
	[372, 383],
	[383, 353],
	[353, 372],
	[339, 255],
	[255, 249],
	[249, 339],
	[448, 261],
	[261, 255],
	[255, 448],
	[133, 243],
	[243, 190],
	[190, 133],
	[133, 155],
	[155, 112],
	[112, 133],
	[33, 246],
	[246, 247],
	[247, 33],
	[33, 130],
	[130, 25],
	[25, 33],
	[398, 384],
	[384, 286],
	[286, 398],
	[362, 398],
	[398, 414],
	[414, 362],
	[362, 463],
	[463, 341],
	[341, 362],
	[263, 359],
	[359, 467],
	[467, 263],
	[263, 249],
	[249, 255],
	[255, 263],
	[466, 467],
	[467, 260],
	[260, 466],
	[75, 60],
	[60, 166],
	[166, 75],
	[238, 239],
	[239, 79],
	[79, 238],
	[162, 127],
	[127, 139],
	[139, 162],
	[72, 11],
	[11, 37],
	[37, 72],
	[121, 232],
	[232, 120],
	[120, 121],
	[73, 72],
	[72, 39],
	[39, 73],
	[114, 128],
	[128, 47],
	[47, 114],
	[233, 232],
	[232, 128],
	[128, 233],
	[103, 104],
	[104, 67],
	[67, 103],
	[152, 175],
	[175, 148],
	[148, 152],
	[119, 118],
	[118, 101],
	[101, 119],
	[74, 73],
	[73, 40],
	[40, 74],
	[107, 9],
	[9, 108],
	[108, 107],
	[49, 48],
	[48, 131],
	[131, 49],
	[32, 194],
	[194, 211],
	[211, 32],
	[184, 74],
	[74, 185],
	[185, 184],
	[191, 80],
	[80, 183],
	[183, 191],
	[185, 40],
	[40, 186],
	[186, 185],
	[119, 230],
	[230, 118],
	[118, 119],
	[210, 202],
	[202, 214],
	[214, 210],
	[84, 83],
	[83, 17],
	[17, 84],
	[77, 76],
	[76, 146],
	[146, 77],
	[161, 160],
	[160, 30],
	[30, 161],
	[190, 56],
	[56, 173],
	[173, 190],
	[182, 106],
	[106, 194],
	[194, 182],
	[138, 135],
	[135, 192],
	[192, 138],
	[129, 203],
	[203, 98],
	[98, 129],
	[54, 21],
	[21, 68],
	[68, 54],
	[5, 51],
	[51, 4],
	[4, 5],
	[145, 144],
	[144, 23],
	[23, 145],
	[90, 77],
	[77, 91],
	[91, 90],
	[207, 205],
	[205, 187],
	[187, 207],
	[83, 201],
	[201, 18],
	[18, 83],
	[181, 91],
	[91, 182],
	[182, 181],
	[180, 90],
	[90, 181],
	[181, 180],
	[16, 85],
	[85, 17],
	[17, 16],
	[205, 206],
	[206, 36],
	[36, 205],
	[176, 148],
	[148, 140],
	[140, 176],
	[165, 92],
	[92, 39],
	[39, 165],
	[245, 193],
	[193, 244],
	[244, 245],
	[27, 159],
	[159, 28],
	[28, 27],
	[30, 247],
	[247, 161],
	[161, 30],
	[174, 236],
	[236, 196],
	[196, 174],
	[103, 54],
	[54, 104],
	[104, 103],
	[55, 193],
	[193, 8],
	[8, 55],
	[111, 117],
	[117, 31],
	[31, 111],
	[221, 189],
	[189, 55],
	[55, 221],
	[240, 98],
	[98, 99],
	[99, 240],
	[142, 126],
	[126, 100],
	[100, 142],
	[219, 166],
	[166, 218],
	[218, 219],
	[112, 155],
	[155, 26],
	[26, 112],
	[198, 209],
	[209, 131],
	[131, 198],
	[169, 135],
	[135, 150],
	[150, 169],
	[114, 47],
	[47, 217],
	[217, 114],
	[224, 223],
	[223, 53],
	[53, 224],
	[220, 45],
	[45, 134],
	[134, 220],
	[32, 211],
	[211, 140],
	[140, 32],
	[109, 67],
	[67, 108],
	[108, 109],
	[146, 43],
	[43, 91],
	[91, 146],
	[231, 230],
	[230, 120],
	[120, 231],
	[113, 226],
	[226, 247],
	[247, 113],
	[105, 63],
	[63, 52],
	[52, 105],
	[241, 238],
	[238, 242],
	[242, 241],
	[124, 46],
	[46, 156],
	[156, 124],
	[95, 78],
	[78, 96],
	[96, 95],
	[70, 46],
	[46, 63],
	[63, 70],
	[116, 143],
	[143, 227],
	[227, 116],
	[116, 123],
	[123, 111],
	[111, 116],
	[1, 44],
	[44, 19],
	[19, 1],
	[3, 236],
	[236, 51],
	[51, 3],
	[207, 216],
	[216, 205],
	[205, 207],
	[26, 154],
	[154, 22],
	[22, 26],
	[165, 39],
	[39, 167],
	[167, 165],
	[199, 200],
	[200, 208],
	[208, 199],
	[101, 36],
	[36, 100],
	[100, 101],
	[43, 57],
	[57, 202],
	[202, 43],
	[242, 20],
	[20, 99],
	[99, 242],
	[56, 28],
	[28, 157],
	[157, 56],
	[124, 35],
	[35, 113],
	[113, 124],
	[29, 160],
	[160, 27],
	[27, 29],
	[211, 204],
	[204, 210],
	[210, 211],
	[124, 113],
	[113, 46],
	[46, 124],
	[106, 43],
	[43, 204],
	[204, 106],
	[96, 62],
	[62, 77],
	[77, 96],
	[227, 137],
	[137, 116],
	[116, 227],
	[73, 41],
	[41, 72],
	[72, 73],
	[36, 203],
	[203, 142],
	[142, 36],
	[235, 64],
	[64, 240],
	[240, 235],
	[48, 49],
	[49, 64],
	[64, 48],
	[42, 41],
	[41, 74],
	[74, 42],
	[214, 212],
	[212, 207],
	[207, 214],
	[183, 42],
	[42, 184],
	[184, 183],
	[210, 169],
	[169, 211],
	[211, 210],
	[140, 170],
	[170, 176],
	[176, 140],
	[104, 105],
	[105, 69],
	[69, 104],
	[193, 122],
	[122, 168],
	[168, 193],
	[50, 123],
	[123, 187],
	[187, 50],
	[89, 96],
	[96, 90],
	[90, 89],
	[66, 65],
	[65, 107],
	[107, 66],
	[179, 89],
	[89, 180],
	[180, 179],
	[119, 101],
	[101, 120],
	[120, 119],
	[68, 63],
	[63, 104],
	[104, 68],
	[234, 93],
	[93, 227],
	[227, 234],
	[16, 15],
	[15, 85],
	[85, 16],
	[209, 129],
	[129, 49],
	[49, 209],
	[15, 14],
	[14, 86],
	[86, 15],
	[107, 55],
	[55, 9],
	[9, 107],
	[120, 100],
	[100, 121],
	[121, 120],
	[153, 145],
	[145, 22],
	[22, 153],
	[178, 88],
	[88, 179],
	[179, 178],
	[197, 6],
	[6, 196],
	[196, 197],
	[89, 88],
	[88, 96],
	[96, 89],
	[135, 138],
	[138, 136],
	[136, 135],
	[138, 215],
	[215, 172],
	[172, 138],
	[218, 115],
	[115, 219],
	[219, 218],
	[41, 42],
	[42, 81],
	[81, 41],
	[5, 195],
	[195, 51],
	[51, 5],
	[57, 43],
	[43, 61],
	[61, 57],
	[208, 171],
	[171, 199],
	[199, 208],
	[41, 81],
	[81, 38],
	[38, 41],
	[224, 53],
	[53, 225],
	[225, 224],
	[24, 144],
	[144, 110],
	[110, 24],
	[105, 52],
	[52, 66],
	[66, 105],
	[118, 229],
	[229, 117],
	[117, 118],
	[227, 34],
	[34, 234],
	[234, 227],
	[66, 107],
	[107, 69],
	[69, 66],
	[10, 109],
	[109, 151],
	[151, 10],
	[219, 48],
	[48, 235],
	[235, 219],
	[183, 62],
	[62, 191],
	[191, 183],
	[142, 129],
	[129, 126],
	[126, 142],
	[116, 111],
	[111, 143],
	[143, 116],
	[118, 117],
	[117, 50],
	[50, 118],
	[223, 222],
	[222, 52],
	[52, 223],
	[94, 19],
	[19, 141],
	[141, 94],
	[222, 221],
	[221, 65],
	[65, 222],
	[196, 3],
	[3, 197],
	[197, 196],
	[45, 220],
	[220, 44],
	[44, 45],
	[156, 70],
	[70, 139],
	[139, 156],
	[188, 122],
	[122, 245],
	[245, 188],
	[139, 71],
	[71, 162],
	[162, 139],
	[149, 170],
	[170, 150],
	[150, 149],
	[122, 188],
	[188, 196],
	[196, 122],
	[206, 216],
	[216, 92],
	[92, 206],
	[164, 2],
	[2, 167],
	[167, 164],
	[242, 141],
	[141, 241],
	[241, 242],
	[0, 164],
	[164, 37],
	[37, 0],
	[11, 72],
	[72, 12],
	[12, 11],
	[12, 38],
	[38, 13],
	[13, 12],
	[70, 63],
	[63, 71],
	[71, 70],
	[31, 226],
	[226, 111],
	[111, 31],
	[36, 101],
	[101, 205],
	[205, 36],
	[203, 206],
	[206, 165],
	[165, 203],
	[126, 209],
	[209, 217],
	[217, 126],
	[98, 165],
	[165, 97],
	[97, 98],
	[237, 220],
	[220, 218],
	[218, 237],
	[237, 239],
	[239, 241],
	[241, 237],
	[210, 214],
	[214, 169],
	[169, 210],
	[140, 171],
	[171, 32],
	[32, 140],
	[241, 125],
	[125, 237],
	[237, 241],
	[179, 86],
	[86, 178],
	[178, 179],
	[180, 85],
	[85, 179],
	[179, 180],
	[181, 84],
	[84, 180],
	[180, 181],
	[182, 83],
	[83, 181],
	[181, 182],
	[194, 201],
	[201, 182],
	[182, 194],
	[177, 137],
	[137, 132],
	[132, 177],
	[184, 76],
	[76, 183],
	[183, 184],
	[185, 61],
	[61, 184],
	[184, 185],
	[186, 57],
	[57, 185],
	[185, 186],
	[216, 212],
	[212, 186],
	[186, 216],
	[192, 214],
	[214, 187],
	[187, 192],
	[139, 34],
	[34, 156],
	[156, 139],
	[218, 79],
	[79, 237],
	[237, 218],
	[147, 123],
	[123, 177],
	[177, 147],
	[45, 44],
	[44, 4],
	[4, 45],
	[208, 201],
	[201, 32],
	[32, 208],
	[98, 64],
	[64, 129],
	[129, 98],
	[192, 213],
	[213, 138],
	[138, 192],
	[235, 59],
	[59, 219],
	[219, 235],
	[141, 242],
	[242, 97],
	[97, 141],
	[97, 2],
	[2, 141],
	[141, 97],
	[240, 75],
	[75, 235],
	[235, 240],
	[229, 24],
	[24, 228],
	[228, 229],
	[31, 25],
	[25, 226],
	[226, 31],
	[230, 23],
	[23, 229],
	[229, 230],
	[231, 22],
	[22, 230],
	[230, 231],
	[232, 26],
	[26, 231],
	[231, 232],
	[233, 112],
	[112, 232],
	[232, 233],
	[244, 189],
	[189, 243],
	[243, 244],
	[189, 221],
	[221, 190],
	[190, 189],
	[222, 28],
	[28, 221],
	[221, 222],
	[223, 27],
	[27, 222],
	[222, 223],
	[224, 29],
	[29, 223],
	[223, 224],
	[225, 30],
	[30, 224],
	[224, 225],
	[113, 247],
	[247, 225],
	[225, 113],
	[99, 60],
	[60, 240],
	[240, 99],
	[213, 147],
	[147, 215],
	[215, 213],
	[60, 20],
	[20, 166],
	[166, 60],
	[192, 187],
	[187, 213],
	[213, 192],
	[243, 112],
	[112, 244],
	[244, 243],
	[244, 233],
	[233, 245],
	[245, 244],
	[245, 128],
	[128, 188],
	[188, 245],
	[188, 114],
	[114, 174],
	[174, 188],
	[134, 131],
	[131, 220],
	[220, 134],
	[174, 217],
	[217, 236],
	[236, 174],
	[236, 198],
	[198, 134],
	[134, 236],
	[215, 177],
	[177, 58],
	[58, 215],
	[156, 143],
	[143, 124],
	[124, 156],
	[25, 110],
	[110, 7],
	[7, 25],
	[31, 228],
	[228, 25],
	[25, 31],
	[264, 356],
	[356, 368],
	[368, 264],
	[0, 11],
	[11, 267],
	[267, 0],
	[451, 452],
	[452, 349],
	[349, 451],
	[267, 302],
	[302, 269],
	[269, 267],
	[350, 357],
	[357, 277],
	[277, 350],
	[350, 452],
	[452, 357],
	[357, 350],
	[299, 333],
	[333, 297],
	[297, 299],
	[396, 175],
	[175, 377],
	[377, 396],
	[280, 347],
	[347, 330],
	[330, 280],
	[269, 303],
	[303, 270],
	[270, 269],
	[151, 9],
	[9, 337],
	[337, 151],
	[344, 278],
	[278, 360],
	[360, 344],
	[424, 418],
	[418, 431],
	[431, 424],
	[270, 304],
	[304, 409],
	[409, 270],
	[272, 310],
	[310, 407],
	[407, 272],
	[322, 270],
	[270, 410],
	[410, 322],
	[449, 450],
	[450, 347],
	[347, 449],
	[432, 422],
	[422, 434],
	[434, 432],
	[18, 313],
	[313, 17],
	[17, 18],
	[291, 306],
	[306, 375],
	[375, 291],
	[259, 387],
	[387, 260],
	[260, 259],
	[424, 335],
	[335, 418],
	[418, 424],
	[434, 364],
	[364, 416],
	[416, 434],
	[391, 423],
	[423, 327],
	[327, 391],
	[301, 251],
	[251, 298],
	[298, 301],
	[275, 281],
	[281, 4],
	[4, 275],
	[254, 373],
	[373, 253],
	[253, 254],
	[375, 307],
	[307, 321],
	[321, 375],
	[280, 425],
	[425, 411],
	[411, 280],
	[200, 421],
	[421, 18],
	[18, 200],
	[335, 321],
	[321, 406],
	[406, 335],
	[321, 320],
	[320, 405],
	[405, 321],
	[314, 315],
	[315, 17],
	[17, 314],
	[423, 426],
	[426, 266],
	[266, 423],
	[396, 377],
	[377, 369],
	[369, 396],
	[270, 322],
	[322, 269],
	[269, 270],
	[413, 417],
	[417, 464],
	[464, 413],
	[385, 386],
	[386, 258],
	[258, 385],
	[248, 456],
	[456, 419],
	[419, 248],
	[298, 284],
	[284, 333],
	[333, 298],
	[168, 417],
	[417, 8],
	[8, 168],
	[448, 346],
	[346, 261],
	[261, 448],
	[417, 413],
	[413, 285],
	[285, 417],
	[326, 327],
	[327, 328],
	[328, 326],
	[277, 355],
	[355, 329],
	[329, 277],
	[309, 392],
	[392, 438],
	[438, 309],
	[381, 382],
	[382, 256],
	[256, 381],
	[279, 429],
	[429, 360],
	[360, 279],
	[365, 364],
	[364, 379],
	[379, 365],
	[355, 277],
	[277, 437],
	[437, 355],
	[282, 443],
	[443, 283],
	[283, 282],
	[281, 275],
	[275, 363],
	[363, 281],
	[395, 431],
	[431, 369],
	[369, 395],
	[299, 297],
	[297, 337],
	[337, 299],
	[335, 273],
	[273, 321],
	[321, 335],
	[348, 450],
	[450, 349],
	[349, 348],
	[359, 446],
	[446, 467],
	[467, 359],
	[283, 293],
	[293, 282],
	[282, 283],
	[250, 458],
	[458, 462],
	[462, 250],
	[300, 276],
	[276, 383],
	[383, 300],
	[292, 308],
	[308, 325],
	[325, 292],
	[283, 276],
	[276, 293],
	[293, 283],
	[264, 372],
	[372, 447],
	[447, 264],
	[346, 352],
	[352, 340],
	[340, 346],
	[354, 274],
	[274, 19],
	[19, 354],
	[363, 456],
	[456, 281],
	[281, 363],
	[426, 436],
	[436, 425],
	[425, 426],
	[380, 381],
	[381, 252],
	[252, 380],
	[267, 269],
	[269, 393],
	[393, 267],
	[421, 200],
	[200, 428],
	[428, 421],
	[371, 266],
	[266, 329],
	[329, 371],
	[432, 287],
	[287, 422],
	[422, 432],
	[290, 250],
	[250, 328],
	[328, 290],
	[385, 258],
	[258, 384],
	[384, 385],
	[446, 265],
	[265, 342],
	[342, 446],
	[386, 387],
	[387, 257],
	[257, 386],
	[422, 424],
	[424, 430],
	[430, 422],
	[445, 342],
	[342, 276],
	[276, 445],
	[422, 273],
	[273, 424],
	[424, 422],
	[306, 292],
	[292, 307],
	[307, 306],
	[352, 366],
	[366, 345],
	[345, 352],
	[268, 271],
	[271, 302],
	[302, 268],
	[358, 423],
	[423, 371],
	[371, 358],
	[327, 294],
	[294, 460],
	[460, 327],
	[331, 279],
	[279, 294],
	[294, 331],
	[303, 271],
	[271, 304],
	[304, 303],
	[436, 432],
	[432, 427],
	[427, 436],
	[304, 272],
	[272, 408],
	[408, 304],
	[395, 394],
	[394, 431],
	[431, 395],
	[378, 395],
	[395, 400],
	[400, 378],
	[296, 334],
	[334, 299],
	[299, 296],
	[6, 351],
	[351, 168],
	[168, 6],
	[376, 352],
	[352, 411],
	[411, 376],
	[307, 325],
	[325, 320],
	[320, 307],
	[285, 295],
	[295, 336],
	[336, 285],
	[320, 319],
	[319, 404],
	[404, 320],
	[329, 330],
	[330, 349],
	[349, 329],
	[334, 293],
	[293, 333],
	[333, 334],
	[366, 323],
	[323, 447],
	[447, 366],
	[316, 15],
	[15, 315],
	[315, 316],
	[331, 358],
	[358, 279],
	[279, 331],
	[317, 14],
	[14, 316],
	[316, 317],
	[8, 285],
	[285, 9],
	[9, 8],
	[277, 329],
	[329, 350],
	[350, 277],
	[253, 374],
	[374, 252],
	[252, 253],
	[319, 318],
	[318, 403],
	[403, 319],
	[351, 6],
	[6, 419],
	[419, 351],
	[324, 318],
	[318, 325],
	[325, 324],
	[397, 367],
	[367, 365],
	[365, 397],
	[288, 435],
	[435, 397],
	[397, 288],
	[278, 344],
	[344, 439],
	[439, 278],
	[310, 272],
	[272, 311],
	[311, 310],
	[248, 195],
	[195, 281],
	[281, 248],
	[375, 273],
	[273, 291],
	[291, 375],
	[175, 396],
	[396, 199],
	[199, 175],
	[312, 311],
	[311, 268],
	[268, 312],
	[276, 283],
	[283, 445],
	[445, 276],
	[390, 373],
	[373, 339],
	[339, 390],
	[295, 282],
	[282, 296],
	[296, 295],
	[448, 449],
	[449, 346],
	[346, 448],
	[356, 264],
	[264, 454],
	[454, 356],
	[337, 336],
	[336, 299],
	[299, 337],
	[337, 338],
	[338, 151],
	[151, 337],
	[294, 278],
	[278, 455],
	[455, 294],
	[308, 292],
	[292, 415],
	[415, 308],
	[429, 358],
	[358, 355],
	[355, 429],
	[265, 340],
	[340, 372],
	[372, 265],
	[352, 346],
	[346, 280],
	[280, 352],
	[295, 442],
	[442, 282],
	[282, 295],
	[354, 19],
	[19, 370],
	[370, 354],
	[285, 441],
	[441, 295],
	[295, 285],
	[195, 248],
	[248, 197],
	[197, 195],
	[457, 440],
	[440, 274],
	[274, 457],
	[301, 300],
	[300, 368],
	[368, 301],
	[417, 351],
	[351, 465],
	[465, 417],
	[251, 301],
	[301, 389],
	[389, 251],
	[394, 395],
	[395, 379],
	[379, 394],
	[399, 412],
	[412, 419],
	[419, 399],
	[410, 436],
	[436, 322],
	[322, 410],
	[326, 2],
	[2, 393],
	[393, 326],
	[354, 370],
	[370, 461],
	[461, 354],
	[393, 164],
	[164, 267],
	[267, 393],
	[268, 302],
	[302, 12],
	[12, 268],
	[312, 268],
	[268, 13],
	[13, 312],
	[298, 293],
	[293, 301],
	[301, 298],
	[265, 446],
	[446, 340],
	[340, 265],
	[280, 330],
	[330, 425],
	[425, 280],
	[322, 426],
	[426, 391],
	[391, 322],
	[420, 429],
	[429, 437],
	[437, 420],
	[393, 391],
	[391, 326],
	[326, 393],
	[344, 440],
	[440, 438],
	[438, 344],
	[458, 459],
	[459, 461],
	[461, 458],
	[364, 434],
	[434, 394],
	[394, 364],
	[428, 396],
	[396, 262],
	[262, 428],
	[274, 354],
	[354, 457],
	[457, 274],
	[317, 316],
	[316, 402],
	[402, 317],
	[316, 315],
	[315, 403],
	[403, 316],
	[315, 314],
	[314, 404],
	[404, 315],
	[314, 313],
	[313, 405],
	[405, 314],
	[313, 421],
	[421, 406],
	[406, 313],
	[323, 366],
	[366, 361],
	[361, 323],
	[292, 306],
	[306, 407],
	[407, 292],
	[306, 291],
	[291, 408],
	[408, 306],
	[291, 287],
	[287, 409],
	[409, 291],
	[287, 432],
	[432, 410],
	[410, 287],
	[427, 434],
	[434, 411],
	[411, 427],
	[372, 264],
	[264, 383],
	[383, 372],
	[459, 309],
	[309, 457],
	[457, 459],
	[366, 352],
	[352, 401],
	[401, 366],
	[1, 274],
	[274, 4],
	[4, 1],
	[418, 421],
	[421, 262],
	[262, 418],
	[331, 294],
	[294, 358],
	[358, 331],
	[435, 433],
	[433, 367],
	[367, 435],
	[392, 289],
	[289, 439],
	[439, 392],
	[328, 462],
	[462, 326],
	[326, 328],
	[94, 2],
	[2, 370],
	[370, 94],
	[289, 305],
	[305, 455],
	[455, 289],
	[339, 254],
	[254, 448],
	[448, 339],
	[359, 255],
	[255, 446],
	[446, 359],
	[254, 253],
	[253, 449],
	[449, 254],
	[253, 252],
	[252, 450],
	[450, 253],
	[252, 256],
	[256, 451],
	[451, 252],
	[256, 341],
	[341, 452],
	[452, 256],
	[414, 413],
	[413, 463],
	[463, 414],
	[286, 441],
	[441, 414],
	[414, 286],
	[286, 258],
	[258, 441],
	[441, 286],
	[258, 257],
	[257, 442],
	[442, 258],
	[257, 259],
	[259, 443],
	[443, 257],
	[259, 260],
	[260, 444],
	[444, 259],
	[260, 467],
	[467, 445],
	[445, 260],
	[309, 459],
	[459, 250],
	[250, 309],
	[305, 289],
	[289, 290],
	[290, 305],
	[305, 290],
	[290, 460],
	[460, 305],
	[401, 376],
	[376, 435],
	[435, 401],
	[309, 250],
	[250, 392],
	[392, 309],
	[376, 411],
	[411, 433],
	[433, 376],
	[453, 341],
	[341, 464],
	[464, 453],
	[357, 453],
	[453, 465],
	[465, 357],
	[343, 357],
	[357, 412],
	[412, 343],
	[437, 343],
	[343, 399],
	[399, 437],
	[344, 360],
	[360, 440],
	[440, 344],
	[420, 437],
	[437, 456],
	[456, 420],
	[360, 420],
	[420, 363],
	[363, 360],
	[361, 401],
	[401, 288],
	[288, 361],
	[265, 372],
	[372, 353],
	[353, 265],
	[390, 339],
	[339, 249],
	[249, 390],
	[339, 448],
	[448, 255],
	[255, 339]
], j = Object.entries(O).map((function(t) {
	var e = t[0];
	return t[1].map((function(t$1) {
		return [t$1, e];
	}));
})).flat(), k = new Map(j);
function R(t) {
	for (var e = { locationData: { relativeKeypoints: [] } }, n = Number.MAX_SAFE_INTEGER, r = Number.MIN_SAFE_INTEGER, i = Number.MAX_SAFE_INTEGER, o = Number.MIN_SAFE_INTEGER, a = 0; a < t.length; ++a) {
		var u = t[a];
		n = Math.min(n, u.x), r = Math.max(r, u.x), i = Math.min(i, u.y), o = Math.max(o, u.y), e.locationData.relativeKeypoints.push({
			x: u.x,
			y: u.y
		});
	}
	return e.locationData.relativeBoundingBox = {
		xMin: n,
		yMin: i,
		xMax: r,
		yMax: o,
		width: r - n,
		height: o - i
	}, e;
}
var I = {
	runtime: "mediapipe",
	maxFaces: 1,
	refineLandmarks: !1
};
var L = function() {
	function n(e) {
		var n$1 = this;
		this.width = 0, this.height = 0, this.selfieMode = !1, this.faceMeshSolution = new (void 0)({ locateFile: function(t, n$2) {
			return e.solutionPath ? e.solutionPath.replace(/\/+$/, "") + "/" + t : n$2 + "/" + t;
		} }), this.faceMeshSolution.setOptions({
			refineLandmarks: e.refineLandmarks,
			selfieMode: this.selfieMode,
			maxNumFaces: e.maxFaces
		}), this.faceMeshSolution.onResults((function(t) {
			if (n$1.height = t.image.height, n$1.width = t.image.width, n$1.faces = [], null !== t.multiFaceLandmarks) for (var e$1 = t.multiFaceLandmarks, r = 0; r < e$1.length; r++) {
				var i = n$1.translateOutput(e$1[r]);
				n$1.faces.push({
					keypoints: i,
					box: R(i).locationData.relativeBoundingBox
				});
			}
		}));
	}
	return n.prototype.translateOutput = function(t) {
		var e = this;
		return t.map((function(t$1, n$1) {
			var r = {
				x: t$1.x * e.width,
				y: t$1.y * e.height,
				z: t$1.z * e.width
			}, i = k.get(n$1);
			return null != i && (r.name = i), r;
		}));
	}, n.prototype.estimateFaces = function(t, n$1) {
		return S(this, void 0, void 0, (function() {
			var r, i;
			return F(this, (function(o) {
				switch (o.label) {
					case 0: return n$1 && n$1.flipHorizontal && n$1.flipHorizontal !== this.selfieMode && (this.selfieMode = n$1.flipHorizontal, this.faceMeshSolution.setOptions({ selfieMode: this.selfieMode })), t instanceof Tensor ? (i = ImageData.bind, [4, toPixels(t)]) : [3, 2];
					case 1: return r = new (i.apply(ImageData, [
						void 0,
						o.sent(),
						t.shape[1],
						t.shape[0]
					]))(), [3, 3];
					case 2: r = t, o.label = 3;
					case 3: return t = r, [4, this.faceMeshSolution.send({ image: t })];
					case 4: return o.sent(), [2, this.faces];
				}
			}));
		}));
	}, n.prototype.dispose = function() {
		this.faceMeshSolution.close();
	}, n.prototype.reset = function() {
		this.faceMeshSolution.reset(), this.width = 0, this.height = 0, this.faces = null, this.selfieMode = !1;
	}, n.prototype.initialize = function() {
		return this.faceMeshSolution.initialize();
	}, n;
}();
function B(t) {
	return S(this, void 0, void 0, (function() {
		var e, n;
		return F(this, (function(r) {
			switch (r.label) {
				case 0: return e = function(t$1) {
					if (null == t$1) return E({}, I);
					var e$1 = E({}, t$1);
					return e$1.runtime = "mediapipe", e$1.maxFaces ??= I.maxFaces, e$1.refineLandmarks ??= I.refineLandmarks, e$1;
				}(t), [4, (n = new L(e)).initialize()];
				case 1: return r.sent(), [2, n];
			}
		}));
	}));
}
var D = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {}, P = {};
(function() {
	var t;
	function e(t$1) {
		var e$1 = 0;
		return function() {
			return e$1 < t$1.length ? {
				done: !1,
				value: t$1[e$1++]
			} : { done: !0 };
		};
	}
	var n = "function" == typeof Object.defineProperties ? Object.defineProperty : function(t$1, e$1, n$1) {
		return t$1 == Array.prototype || t$1 == Object.prototype || (t$1[e$1] = n$1.value), t$1;
	};
	var r = function(t$1) {
		t$1 = [
			"object" == typeof globalThis && globalThis,
			t$1,
			"object" == typeof window && window,
			"object" == typeof self && self,
			"object" == typeof D && D
		];
		for (var e$1 = 0; e$1 < t$1.length; ++e$1) {
			var n$1 = t$1[e$1];
			if (n$1 && n$1.Math == Math) return n$1;
		}
		throw Error("Cannot find global object");
	}(this);
	function i(t$1, e$1) {
		if (e$1) t: {
			var i$1 = r;
			t$1 = t$1.split(".");
			for (var o$1 = 0; o$1 < t$1.length - 1; o$1++) {
				var a$1 = t$1[o$1];
				if (!(a$1 in i$1)) break t;
				i$1 = i$1[a$1];
			}
			(e$1 = e$1(o$1 = i$1[t$1 = t$1[t$1.length - 1]])) != o$1 && null != e$1 && n(i$1, t$1, {
				configurable: !0,
				writable: !0,
				value: e$1
			});
		}
	}
	function o(t$1) {
		return (t$1 = { next: t$1 })[Symbol.iterator] = function() {
			return this;
		}, t$1;
	}
	function a(t$1) {
		var n$1 = "undefined" != typeof Symbol && Symbol.iterator && t$1[Symbol.iterator];
		return n$1 ? n$1.call(t$1) : { next: e(t$1) };
	}
	function u(t$1) {
		if (!(t$1 instanceof Array)) {
			t$1 = a(t$1);
			for (var e$1, n$1 = []; !(e$1 = t$1.next()).done;) n$1.push(e$1.value);
			t$1 = n$1;
		}
		return t$1;
	}
	i("Symbol", (function(t$1) {
		function e$1(t$2, e$2) {
			this.g = t$2, n(this, "description", {
				configurable: !0,
				writable: !0,
				value: e$2
			});
		}
		if (t$1) return t$1;
		e$1.prototype.toString = function() {
			return this.g;
		};
		var r$1 = "jscomp_symbol_" + (1e9 * Math.random() >>> 0) + "_", i$1 = 0;
		return function t$2(n$1) {
			if (this instanceof t$2) throw new TypeError("Symbol is not a constructor");
			return new e$1(r$1 + (n$1 || "") + "_" + i$1++, n$1);
		};
	})), i("Symbol.iterator", (function(t$1) {
		if (t$1) return t$1;
		t$1 = Symbol("Symbol.iterator");
		for (var i$1 = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), a$1 = 0; a$1 < i$1.length; a$1++) {
			var u$1 = r[i$1[a$1]];
			"function" == typeof u$1 && "function" != typeof u$1.prototype[t$1] && n(u$1.prototype, t$1, {
				configurable: !0,
				writable: !0,
				value: function() {
					return o(e(this));
				}
			});
		}
		return t$1;
	}));
	var s, c = "function" == typeof Object.create ? Object.create : function(t$1) {
		function e$1() {}
		return e$1.prototype = t$1, new e$1();
	};
	if ("function" == typeof Object.setPrototypeOf) s = Object.setPrototypeOf;
	else {
		var h;
		t: {
			var l = {};
			try {
				l.__proto__ = { a: !0 }, h = l.a;
				break t;
			} catch (t$1) {}
			h = !1;
		}
		s = h ? function(t$1, e$1) {
			if (t$1.__proto__ = e$1, t$1.__proto__ !== e$1) throw new TypeError(t$1 + " is not extensible");
			return t$1;
		} : null;
	}
	var f = s;
	function d(t$1, e$1) {
		if (t$1.prototype = c(e$1.prototype), t$1.prototype.constructor = t$1, f) f(t$1, e$1);
		else for (var n$1 in e$1) if ("prototype" != n$1) if (Object.defineProperties) {
			var r$1 = Object.getOwnPropertyDescriptor(e$1, n$1);
			r$1 && Object.defineProperty(t$1, n$1, r$1);
		} else t$1[n$1] = e$1[n$1];
		t$1.na = e$1.prototype;
	}
	function p() {
		this.l = !1, this.i = null, this.h = void 0, this.g = 1, this.u = this.o = 0, this.j = null;
	}
	function g(t$1) {
		if (t$1.l) throw new TypeError("Generator is already running");
		t$1.l = !0;
	}
	function v(t$1, e$1) {
		t$1.j = {
			da: e$1,
			ea: !0
		}, t$1.g = t$1.o || t$1.u;
	}
	function m(t$1, e$1, n$1) {
		return t$1.g = n$1, { value: e$1 };
	}
	function y(t$1) {
		this.g = new p(), this.h = t$1;
	}
	function w(t$1, e$1, n$1, r$1) {
		try {
			var i$1 = e$1.call(t$1.g.i, n$1);
			if (!(i$1 instanceof Object)) throw new TypeError("Iterator result " + i$1 + " is not an object");
			if (!i$1.done) return t$1.g.l = !1, i$1;
			var o$1 = i$1.value;
		} catch (e$2) {
			return t$1.g.i = null, v(t$1.g, e$2), b(t$1);
		}
		return t$1.g.i = null, r$1.call(t$1.g, o$1), b(t$1);
	}
	function b(t$1) {
		for (; t$1.g.g;) try {
			var e$1 = t$1.h(t$1.g);
			if (e$1) return t$1.g.l = !1, {
				value: e$1.value,
				done: !1
			};
		} catch (e$2) {
			t$1.g.h = void 0, v(t$1.g, e$2);
		}
		if (t$1.g.l = !1, t$1.g.j) {
			if (e$1 = t$1.g.j, t$1.g.j = null, e$1.ea) throw e$1.da;
			return {
				value: e$1.return,
				done: !0
			};
		}
		return {
			value: void 0,
			done: !0
		};
	}
	function x(t$1) {
		this.next = function(e$1) {
			return g(t$1.g), t$1.g.i ? e$1 = w(t$1, t$1.g.i.next, e$1, t$1.g.s) : (t$1.g.s(e$1), e$1 = b(t$1)), e$1;
		}, this.throw = function(e$1) {
			return g(t$1.g), t$1.g.i ? e$1 = w(t$1, t$1.g.i.throw, e$1, t$1.g.s) : (v(t$1.g, e$1), e$1 = b(t$1)), e$1;
		}, this.return = function(e$1) {
			return function(t$2, e$2) {
				g(t$2.g);
				var n$1 = t$2.g.i;
				return n$1 ? w(t$2, "return" in n$1 ? n$1.return : function(t$3) {
					return {
						value: t$3,
						done: !0
					};
				}, e$2, t$2.g.return) : (t$2.g.return(e$2), b(t$2));
			}(t$1, e$1);
		}, this[Symbol.iterator] = function() {
			return this;
		};
	}
	function M(t$1) {
		return function(t$2) {
			function e$1(e$2) {
				return t$2.next(e$2);
			}
			function n$1(e$2) {
				return t$2.throw(e$2);
			}
			return new Promise((function(r$1, i$1) {
				(function t$3(o$1) {
					o$1.done ? r$1(o$1.value) : Promise.resolve(o$1.value).then(e$1, n$1).then(t$3, i$1);
				})(t$2.next());
			}));
		}(new x(new y(t$1)));
	}
	p.prototype.s = function(t$1) {
		this.h = t$1;
	}, p.prototype.return = function(t$1) {
		this.j = { return: t$1 }, this.g = this.u;
	}, i("Promise", (function(t$1) {
		function e$1(t$2) {
			this.h = 0, this.i = void 0, this.g = [], this.s = !1;
			var e$2 = this.j();
			try {
				t$2(e$2.resolve, e$2.reject);
			} catch (t$3) {
				e$2.reject(t$3);
			}
		}
		function n$1() {
			this.g = null;
		}
		function i$1(t$2) {
			return t$2 instanceof e$1 ? t$2 : new e$1((function(e$2) {
				e$2(t$2);
			}));
		}
		if (t$1) return t$1;
		n$1.prototype.h = function(t$2) {
			if (null == this.g) {
				this.g = [];
				var e$2 = this;
				this.i((function() {
					e$2.l();
				}));
			}
			this.g.push(t$2);
		};
		var o$1 = r.setTimeout;
		n$1.prototype.i = function(t$2) {
			o$1(t$2, 0);
		}, n$1.prototype.l = function() {
			for (; this.g && this.g.length;) {
				var t$2 = this.g;
				this.g = [];
				for (var e$2 = 0; e$2 < t$2.length; ++e$2) {
					var n$2 = t$2[e$2];
					t$2[e$2] = null;
					try {
						n$2();
					} catch (t$3) {
						this.j(t$3);
					}
				}
			}
			this.g = null;
		}, n$1.prototype.j = function(t$2) {
			this.i((function() {
				throw t$2;
			}));
		}, e$1.prototype.j = function() {
			function t$2(t$3) {
				return function(r$1) {
					n$2 || (n$2 = !0, t$3.call(e$2, r$1));
				};
			}
			var e$2 = this, n$2 = !1;
			return {
				resolve: t$2(this.D),
				reject: t$2(this.l)
			};
		}, e$1.prototype.D = function(t$2) {
			if (t$2 === this) this.l(/* @__PURE__ */ new TypeError("A Promise cannot resolve to itself"));
			else if (t$2 instanceof e$1) this.H(t$2);
			else {
				t: switch (typeof t$2) {
					case "object":
						var n$2 = null != t$2;
						break t;
					case "function":
						n$2 = !0;
						break t;
					default: n$2 = !1;
				}
				n$2 ? this.A(t$2) : this.o(t$2);
			}
		}, e$1.prototype.A = function(t$2) {
			var e$2 = void 0;
			try {
				e$2 = t$2.then;
			} catch (t$3) {
				this.l(t$3);
				return;
			}
			"function" == typeof e$2 ? this.I(e$2, t$2) : this.o(t$2);
		}, e$1.prototype.l = function(t$2) {
			this.u(2, t$2);
		}, e$1.prototype.o = function(t$2) {
			this.u(1, t$2);
		}, e$1.prototype.u = function(t$2, e$2) {
			if (0 != this.h) throw Error("Cannot settle(" + t$2 + ", " + e$2 + "): Promise already settled in state" + this.h);
			this.h = t$2, this.i = e$2, 2 === this.h && this.G(), this.B();
		}, e$1.prototype.G = function() {
			var t$2 = this;
			o$1((function() {
				if (t$2.C()) {
					var e$2 = r.console;
					void 0 !== e$2 && e$2.error(t$2.i);
				}
			}), 1);
		}, e$1.prototype.C = function() {
			if (this.s) return !1;
			var t$2 = r.CustomEvent, e$2 = r.Event, n$2 = r.dispatchEvent;
			return void 0 === n$2 || ("function" == typeof t$2 ? t$2 = new t$2("unhandledrejection", { cancelable: !0 }) : "function" == typeof e$2 ? t$2 = new e$2("unhandledrejection", { cancelable: !0 }) : (t$2 = r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection", !1, !0, t$2), t$2.promise = this, t$2.reason = this.i, n$2(t$2));
		}, e$1.prototype.B = function() {
			if (null != this.g) {
				for (var t$2 = 0; t$2 < this.g.length; ++t$2) u$1.h(this.g[t$2]);
				this.g = null;
			}
		};
		var u$1 = new n$1();
		return e$1.prototype.H = function(t$2) {
			var e$2 = this.j();
			t$2.M(e$2.resolve, e$2.reject);
		}, e$1.prototype.I = function(t$2, e$2) {
			var n$2 = this.j();
			try {
				t$2.call(e$2, n$2.resolve, n$2.reject);
			} catch (t$3) {
				n$2.reject(t$3);
			}
		}, e$1.prototype.then = function(t$2, n$2) {
			function r$1(t$3, e$2) {
				return "function" == typeof t$3 ? function(e$3) {
					try {
						i$2(t$3(e$3));
					} catch (t$4) {
						o$2(t$4);
					}
				} : e$2;
			}
			var i$2, o$2, a$1 = new e$1((function(t$3, e$2) {
				i$2 = t$3, o$2 = e$2;
			}));
			return this.M(r$1(t$2, i$2), r$1(n$2, o$2)), a$1;
		}, e$1.prototype.catch = function(t$2) {
			return this.then(void 0, t$2);
		}, e$1.prototype.M = function(t$2, e$2) {
			function n$2() {
				switch (r$1.h) {
					case 1:
						t$2(r$1.i);
						break;
					case 2:
						e$2(r$1.i);
						break;
					default: throw Error("Unexpected state: " + r$1.h);
				}
			}
			var r$1 = this;
			null == this.g ? u$1.h(n$2) : this.g.push(n$2), this.s = !0;
		}, e$1.resolve = i$1, e$1.reject = function(t$2) {
			return new e$1((function(e$2, n$2) {
				n$2(t$2);
			}));
		}, e$1.race = function(t$2) {
			return new e$1((function(e$2, n$2) {
				for (var r$1 = a(t$2), o$2 = r$1.next(); !o$2.done; o$2 = r$1.next()) i$1(o$2.value).M(e$2, n$2);
			}));
		}, e$1.all = function(t$2) {
			var n$2 = a(t$2), r$1 = n$2.next();
			return r$1.done ? i$1([]) : new e$1((function(t$3, e$2) {
				function o$2(e$3) {
					return function(n$3) {
						a$1[e$3] = n$3, 0 == --u$2 && t$3(a$1);
					};
				}
				var a$1 = [], u$2 = 0;
				do
					a$1.push(void 0), u$2++, i$1(r$1.value).M(o$2(a$1.length - 1), e$2), r$1 = n$2.next();
				while (!r$1.done);
			}));
		}, e$1;
	}));
	var A = "function" == typeof Object.assign ? Object.assign : function(t$1, e$1) {
		for (var n$1 = 1; n$1 < arguments.length; n$1++) {
			var r$1 = arguments[n$1];
			if (r$1) for (var i$1 in r$1) Object.prototype.hasOwnProperty.call(r$1, i$1) && (t$1[i$1] = r$1[i$1]);
		}
		return t$1;
	};
	i("Object.assign", (function(t$1) {
		return t$1 || A;
	})), i("Object.is", (function(t$1) {
		return t$1 || function(t$2, e$1) {
			return t$2 === e$1 ? 0 !== t$2 || 1 / t$2 == 1 / e$1 : t$2 != t$2 && e$1 != e$1;
		};
	})), i("Array.prototype.includes", (function(t$1) {
		return t$1 || function(t$2, e$1) {
			var n$1 = this;
			n$1 instanceof String && (n$1 = String(n$1));
			var r$1 = n$1.length;
			for (0 > (e$1 = e$1 || 0) && (e$1 = Math.max(e$1 + r$1, 0)); e$1 < r$1; e$1++) {
				var i$1 = n$1[e$1];
				if (i$1 === t$2 || Object.is(i$1, t$2)) return !0;
			}
			return !1;
		};
	})), i("String.prototype.includes", (function(t$1) {
		return t$1 || function(t$2, e$1) {
			if (null == this) throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");
			if (t$2 instanceof RegExp) throw new TypeError("First argument to String.prototype.includes must not be a regular expression");
			return -1 !== this.indexOf(t$2, e$1 || 0);
		};
	})), i("Array.prototype.keys", (function(t$1) {
		return t$1 || function() {
			return function(t$2, e$1) {
				t$2 instanceof String && (t$2 += "");
				var n$1 = 0, r$1 = !1, i$1 = { next: function() {
					if (!r$1 && n$1 < t$2.length) {
						var i$2 = n$1++;
						return {
							value: e$1(i$2, t$2[i$2]),
							done: !1
						};
					}
					return r$1 = !0, {
						done: !0,
						value: void 0
					};
				} };
				return i$1[Symbol.iterator] = function() {
					return i$1;
				}, i$1;
			}(this, (function(t$2) {
				return t$2;
			}));
		};
	}));
	var T = this || self;
	function E$1(t$1, e$1) {
		t$1 = t$1.split(".");
		var n$1, r$1 = T;
		t$1[0] in r$1 || void 0 === r$1.execScript || r$1.execScript("var " + t$1[0]);
		for (; t$1.length && (n$1 = t$1.shift());) t$1.length || void 0 === e$1 ? r$1 = r$1[n$1] && r$1[n$1] !== Object.prototype[n$1] ? r$1[n$1] : r$1[n$1] = {} : r$1[n$1] = e$1;
	}
	function S$1() {
		throw Error("Invalid UTF8");
	}
	function F$1(t$1, e$1) {
		return e$1 = String.fromCharCode.apply(null, e$1), null == t$1 ? e$1 : t$1 + e$1;
	}
	var C$1, O$1, _$1 = "undefined" != typeof TextDecoder, j$1 = "undefined" != typeof TextEncoder, k$1 = {}, R$1 = null;
	function I$1(t$1) {
		var e$1;
		void 0 === e$1 && (e$1 = 0), B$1(), e$1 = k$1[e$1];
		for (var n$1 = Array(Math.floor(t$1.length / 3)), r$1 = e$1[64] || "", i$1 = 0, o$1 = 0; i$1 < t$1.length - 2; i$1 += 3) {
			var a$1 = t$1[i$1], u$1 = t$1[i$1 + 1], s$1 = t$1[i$1 + 2], c$1 = e$1[a$1 >> 2];
			a$1 = e$1[(3 & a$1) << 4 | u$1 >> 4], u$1 = e$1[(15 & u$1) << 2 | s$1 >> 6], s$1 = e$1[63 & s$1], n$1[o$1++] = c$1 + a$1 + u$1 + s$1;
		}
		switch (c$1 = 0, s$1 = r$1, t$1.length - i$1) {
			case 2: s$1 = e$1[(15 & (c$1 = t$1[i$1 + 1])) << 2] || r$1;
			case 1: t$1 = t$1[i$1], n$1[o$1] = e$1[t$1 >> 2] + e$1[(3 & t$1) << 4 | c$1 >> 4] + s$1 + r$1;
		}
		return n$1.join("");
	}
	function L$1(t$1) {
		var e$1 = t$1.length, n$1 = 3 * e$1 / 4;
		n$1 % 3 ? n$1 = Math.floor(n$1) : -1 != "=.".indexOf(t$1[e$1 - 1]) && (n$1 = -1 != "=.".indexOf(t$1[e$1 - 2]) ? n$1 - 2 : n$1 - 1);
		var r$1 = new Uint8Array(n$1), i$1 = 0;
		return function(t$2, e$2) {
			function n$2(e$3) {
				for (; r$2 < t$2.length;) {
					var n$3 = t$2.charAt(r$2++), i$3 = R$1[n$3];
					if (null != i$3) return i$3;
					if (!/^[\s\xa0]*$/.test(n$3)) throw Error("Unknown base64 encoding at char: " + n$3);
				}
				return e$3;
			}
			B$1();
			for (var r$2 = 0;;) {
				var i$2 = n$2(-1), o$1 = n$2(0), a$1 = n$2(64), u$1 = n$2(64);
				if (64 === u$1 && -1 === i$2) break;
				e$2(i$2 << 2 | o$1 >> 4), 64 != a$1 && (e$2(o$1 << 4 & 240 | a$1 >> 2), 64 != u$1 && e$2(a$1 << 6 & 192 | u$1));
			}
		}(t$1, (function(t$2) {
			r$1[i$1++] = t$2;
		})), i$1 !== n$1 ? r$1.subarray(0, i$1) : r$1;
	}
	function B$1() {
		if (!R$1) {
			R$1 = {};
			for (var t$1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), e$1 = [
				"+/=",
				"+/",
				"-_=",
				"-_.",
				"-_"
			], n$1 = 0; 5 > n$1; n$1++) {
				var r$1 = t$1.concat(e$1[n$1].split(""));
				k$1[n$1] = r$1;
				for (var i$1 = 0; i$1 < r$1.length; i$1++) {
					var o$1 = r$1[i$1];
					void 0 === R$1[o$1] && (R$1[o$1] = i$1);
				}
			}
		}
	}
	var P$1, z$1 = "function" == typeof Uint8Array;
	function U$1(t$1) {
		return z$1 && null != t$1 && t$1 instanceof Uint8Array;
	}
	function N$1(t$1) {
		if (this.L = t$1, null !== t$1 && 0 === t$1.length) throw Error("ByteString should be constructed with non-empty values");
	}
	var V$1 = "function" == typeof Uint8Array.prototype.slice, H$1 = 0;
	function K$1(t$1, e$1) {
		return Error("Invalid wire type: " + t$1 + " (at position " + e$1 + ")");
	}
	function W$1() {
		return Error("Failed to read varint, encoding is invalid.");
	}
	function G$1(t$1, e$1) {
		e$1 = void 0 !== (e$1 = void 0 === e$1 ? {} : e$1).v && e$1.v, this.h = null, this.g = this.i = this.j = 0, this.v = e$1, t$1 && X$1(this, t$1);
	}
	function X$1(t$1, e$1) {
		t$1.h = function(t$2, e$2) {
			if (t$2.constructor === Uint8Array) return t$2;
			if (t$2.constructor === ArrayBuffer) return new Uint8Array(t$2);
			if (t$2.constructor === Array) return new Uint8Array(t$2);
			if (t$2.constructor === String) return L$1(t$2);
			if (t$2.constructor === N$1) return !e$2 && (e$2 = t$2.L) && e$2.constructor === Uint8Array ? e$2 : (e$2 = null == (e$2 = t$2.L) || U$1(e$2) ? e$2 : "string" == typeof e$2 ? L$1(e$2) : null, (t$2 = t$2.L = e$2) ? new Uint8Array(t$2) : P$1 || (P$1 = new Uint8Array(0)));
			if (t$2 instanceof Uint8Array) return new Uint8Array(t$2.buffer, t$2.byteOffset, t$2.byteLength);
			throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers");
		}(e$1, t$1.v), t$1.j = 0, t$1.i = t$1.h.length, t$1.g = t$1.j;
	}
	function Y$1(t$1) {
		if (t$1.g > t$1.i) throw Error("Tried to read past the end of the data " + t$1.g + " > " + t$1.i);
	}
	function J$1(t$1) {
		var e$1 = t$1.h, n$1 = e$1[t$1.g], r$1 = 127 & n$1;
		if (128 > n$1) return t$1.g += 1, Y$1(t$1), r$1;
		if (r$1 |= (127 & (n$1 = e$1[t$1.g + 1])) << 7, 128 > n$1) return t$1.g += 2, Y$1(t$1), r$1;
		if (r$1 |= (127 & (n$1 = e$1[t$1.g + 2])) << 14, 128 > n$1) return t$1.g += 3, Y$1(t$1), r$1;
		if (r$1 |= (127 & (n$1 = e$1[t$1.g + 3])) << 21, 128 > n$1) return t$1.g += 4, Y$1(t$1), r$1;
		if (n$1 = e$1[t$1.g + 4], t$1.g += 5, r$1 |= (15 & n$1) << 28, 128 > n$1) return Y$1(t$1), r$1;
		if (128 <= e$1[t$1.g++] && 128 <= e$1[t$1.g++] && 128 <= e$1[t$1.g++] && 128 <= e$1[t$1.g++] && 128 <= e$1[t$1.g++]) throw W$1();
		return Y$1(t$1), r$1;
	}
	G$1.prototype.reset = function() {
		this.g = this.j;
	};
	var q$1 = [];
	function $$1() {
		this.g = [];
	}
	function Z$1(t$1, e$1) {
		for (; 127 < e$1;) t$1.g.push(127 & e$1 | 128), e$1 >>>= 7;
		t$1.g.push(e$1);
	}
	function Q$1(t$1) {
		var e$1 = {}, n$1 = void 0 !== e$1.W && e$1.W;
		this.l = { v: void 0 !== e$1.v && e$1.v }, this.W = n$1, e$1 = this.l, q$1.length ? (n$1 = q$1.pop(), e$1 && (n$1.v = e$1.v), t$1 && X$1(n$1, t$1), t$1 = n$1) : t$1 = new G$1(t$1, e$1), this.g = t$1, this.j = this.g.g, this.h = this.i = -1;
	}
	function tt$1(t$1) {
		var e$1 = t$1.g;
		if (e$1.g == e$1.i) return !1;
		t$1.j = t$1.g.g;
		var n$1 = J$1(t$1.g) >>> 0;
		if (e$1 = n$1 >>> 3, !(0 <= (n$1 &= 7) && 5 >= n$1)) throw K$1(n$1, t$1.j);
		if (1 > e$1) throw Error("Invalid field number: " + e$1 + " (at position " + t$1.j + ")");
		return t$1.i = e$1, t$1.h = n$1, !0;
	}
	function et$1(t$1) {
		switch (t$1.h) {
			case 0:
				if (0 != t$1.h) et$1(t$1);
				else t: {
					for (var e$1 = (t$1 = t$1.g).g, n$1 = e$1 + 10; e$1 < n$1;) if (0 == (128 & t$1.h[e$1++])) {
						t$1.g = e$1, Y$1(t$1);
						break t;
					}
					throw W$1();
				}
				break;
			case 1:
				(t$1 = t$1.g).g += 8, Y$1(t$1);
				break;
			case 2:
				2 != t$1.h ? et$1(t$1) : (e$1 = J$1(t$1.g) >>> 0, (t$1 = t$1.g).g += e$1, Y$1(t$1));
				break;
			case 5:
				(t$1 = t$1.g).g += 4, Y$1(t$1);
				break;
			case 3:
				for (e$1 = t$1.i;;) {
					if (!tt$1(t$1)) throw Error("Unmatched start-group tag: stream EOF");
					if (4 == t$1.h) {
						if (t$1.i != e$1) throw Error("Unmatched end-group tag");
						break;
					}
					et$1(t$1);
				}
				break;
			default: throw K$1(t$1.h, t$1.j);
		}
	}
	$$1.prototype.length = function() {
		return this.g.length;
	}, $$1.prototype.end = function() {
		var t$1 = this.g;
		return this.g = [], t$1;
	}, Q$1.prototype.reset = function() {
		this.g.reset(), this.j = this.g.g, this.h = this.i = -1;
	};
	var nt$1 = [];
	function rt$1() {
		this.i = [], this.h = 0, this.g = new $$1();
	}
	function it$1(t$1, e$1) {
		0 !== e$1.length && (t$1.i.push(e$1), t$1.h += e$1.length);
	}
	var ot$1 = "function" == typeof Symbol && "symbol" == typeof Symbol() ? Symbol(void 0) : void 0;
	function at$1(t$1, e$1) {
		Object.isFrozen(t$1) || (ot$1 ? t$1[ot$1] |= e$1 : void 0 !== t$1.N ? t$1.N |= e$1 : Object.defineProperties(t$1, { N: {
			value: e$1,
			configurable: !0,
			writable: !0,
			enumerable: !1
		} }));
	}
	function ut$1(t$1) {
		var e$1;
		return null == (e$1 = ot$1 ? t$1[ot$1] : t$1.N) ? 0 : e$1;
	}
	function st$1(t$1) {
		return at$1(t$1, 1), t$1;
	}
	function ct$1(t$1) {
		return !!Array.isArray(t$1) && !!(2 & ut$1(t$1));
	}
	function ht$1(t$1) {
		if (!Array.isArray(t$1)) throw Error("cannot mark non-array as immutable");
		at$1(t$1, 2);
	}
	function lt$1(t$1) {
		return null !== t$1 && "object" == typeof t$1 && !Array.isArray(t$1) && t$1.constructor === Object;
	}
	var ft$1 = Object.freeze(st$1([]));
	function dt$1(t$1) {
		if (ct$1(t$1.m)) throw Error("Cannot mutate an immutable Message");
	}
	var pt$1, gt$1 = "undefined" != typeof Symbol && void 0 !== Symbol.hasInstance;
	function vt$1(t$1) {
		return {
			value: t$1,
			configurable: !1,
			writable: !1,
			enumerable: !1
		};
	}
	function mt$1(t$1, e$1, n$1) {
		return -1 === e$1 ? null : e$1 >= t$1.i ? t$1.g ? t$1.g[e$1] : void 0 : void 0 !== n$1 && n$1 && t$1.g && null != (n$1 = t$1.g[e$1]) ? n$1 : t$1.m[e$1 + t$1.h];
	}
	function yt$1(t$1, e$1, n$1, r$1) {
		r$1 = void 0 !== r$1 && r$1, dt$1(t$1), e$1 < t$1.i && !r$1 ? t$1.m[e$1 + t$1.h] = n$1 : (t$1.g || (t$1.g = t$1.m[t$1.i + t$1.h] = {}))[e$1] = n$1;
	}
	function wt$1(t$1, e$1, n$1, r$1) {
		n$1 = void 0 === n$1 || n$1;
		var i$1 = mt$1(t$1, e$1, r$1 = void 0 !== r$1 && r$1);
		return i$1 ??= ft$1, ct$1(t$1.m) ? n$1 && (ht$1(i$1), Object.freeze(i$1)) : (i$1 === ft$1 || ct$1(i$1)) && yt$1(t$1, e$1, i$1 = st$1(i$1.slice()), r$1), i$1;
	}
	function bt$1(t$1, e$1, n$1) {
		return null == (t$1 = null == (t$1 = mt$1(t$1, e$1)) ? t$1 : +t$1) ? void 0 === n$1 ? 0 : n$1 : t$1;
	}
	function xt$1(t$1, e$1, n$1, r$1) {
		t$1.j || (t$1.j = {});
		var i$1 = ct$1(t$1.m), o$1 = t$1.j[n$1];
		if (!o$1) {
			r$1 = wt$1(t$1, n$1, !0, void 0 !== r$1 && r$1), o$1 = [], i$1 = i$1 || ct$1(r$1);
			for (var a$1 = 0; a$1 < r$1.length; a$1++) o$1[a$1] = new e$1(r$1[a$1]), i$1 && ht$1(o$1[a$1].m);
			i$1 && (ht$1(o$1), Object.freeze(o$1)), t$1.j[n$1] = o$1;
		}
		return o$1;
	}
	function Mt$1(t$1, e$1, n$1, r$1, i$1) {
		var o$1 = void 0 !== o$1 && o$1;
		return dt$1(t$1), o$1 = xt$1(t$1, n$1, e$1, o$1), n$1 = r$1 || new n$1(), t$1 = wt$1(t$1, e$1), null != i$1 ? (o$1.splice(i$1, 0, n$1), t$1.splice(i$1, 0, n$1.m)) : (o$1.push(n$1), t$1.push(n$1.m)), n$1;
	}
	function At$1(t$1, e$1) {
		return null == (t$1 = mt$1(t$1, e$1)) ? 0 : t$1;
	}
	function Tt$1(t$1, e$1) {
		return null == (t$1 = mt$1(t$1, e$1)) ? "" : t$1;
	}
	function Et$1(t$1) {
		var e$1 = Ct$1;
		return Ft$1(t$1, e$1 = void 0 === e$1 ? Ot$1 : e$1);
	}
	function St$1(t$1, e$1) {
		if (null != t$1) {
			if (Array.isArray(t$1)) t$1 = Ft$1(t$1, e$1);
			else if (lt$1(t$1)) {
				var n$1, r$1 = {};
				for (n$1 in t$1) r$1[n$1] = St$1(t$1[n$1], e$1);
				t$1 = r$1;
			} else t$1 = e$1(t$1);
			return t$1;
		}
	}
	function Ft$1(t$1, e$1) {
		for (var n$1 = t$1.slice(), r$1 = 0; r$1 < n$1.length; r$1++) n$1[r$1] = St$1(n$1[r$1], e$1);
		return Array.isArray(t$1) && 1 & ut$1(t$1) && st$1(n$1), n$1;
	}
	function Ct$1(t$1) {
		return t$1 && "object" == typeof t$1 && t$1.toJSON ? t$1.toJSON() : (t$1 = function(t$2) {
			switch (typeof t$2) {
				case "number": return isFinite(t$2) ? t$2 : String(t$2);
				case "object": if (t$2 && !Array.isArray(t$2)) {
					if (U$1(t$2)) return I$1(t$2);
					if (t$2 instanceof N$1) {
						var e$1 = t$2.L;
						return e$1 = null == e$1 || "string" == typeof e$1 ? e$1 : z$1 && e$1 instanceof Uint8Array ? I$1(e$1) : null, (t$2.L = e$1) || "";
					}
				}
			}
			return t$2;
		}(t$1), Array.isArray(t$1) ? Et$1(t$1) : t$1);
	}
	function Ot$1(t$1) {
		return U$1(t$1) ? new Uint8Array(t$1) : t$1;
	}
	function _t$1(t$1, e$1, n$1) {
		t$1 || (t$1 = pt$1), pt$1 = null;
		var r$1 = this.constructor.h;
		if (t$1 || (t$1 = r$1 ? [r$1] : []), this.h = (r$1 ? 0 : -1) - (this.constructor.g || 0), this.j = void 0, this.m = t$1, t$1 = (r$1 = this.m.length) - 1, r$1 && lt$1(r$1 = this.m[t$1]) ? (this.i = t$1 - this.h, this.g = r$1) : void 0 !== e$1 && -1 < e$1 ? (this.i = Math.max(e$1, t$1 + 1 - this.h), this.g = void 0) : this.i = Number.MAX_VALUE, n$1) for (e$1 = 0; e$1 < n$1.length; e$1++) if ((t$1 = n$1[e$1]) < this.i) t$1 += this.h, (r$1 = this.m[t$1]) ? Array.isArray(r$1) && st$1(r$1) : this.m[t$1] = ft$1;
		else {
			var i$1 = (r$1 = this.g || (this.g = this.m[this.i + this.h] = {}))[t$1];
			i$1 ? Array.isArray(i$1) && st$1(i$1) : r$1[t$1] = ft$1;
		}
	}
	function jt$1() {
		_t$1.apply(this, arguments);
	}
	if (_t$1.prototype.toJSON = function() {
		return Et$1(this.m);
	}, _t$1.prototype.toString = function() {
		return this.m.toString();
	}, d(jt$1, _t$1), gt$1) {
		var kt$1 = {};
		Object.defineProperties(jt$1, (kt$1[Symbol.hasInstance] = vt$1((function() {
			throw Error("Cannot perform instanceof checks for MutableMessage");
		})), kt$1));
	}
	function Rt$1(t$1, e$1, n$1) {
		if (n$1) {
			var r$1, i$1 = {};
			for (r$1 in n$1) {
				var o$1 = n$1[r$1], a$1 = o$1.ha;
				a$1 || (i$1.F = o$1.la || o$1.fa.P, o$1.aa ? (i$1.U = Ut$1(o$1.aa), a$1 = function(t$2) {
					return function(e$2, n$2, r$2) {
						return t$2.F(e$2, n$2, r$2, t$2.U);
					};
				}(i$1)) : o$1.ca ? (i$1.T = Nt$1(o$1.X.g, o$1.ca), a$1 = function(t$2) {
					return function(e$2, n$2, r$2) {
						return t$2.F(e$2, n$2, r$2, t$2.T);
					};
				}(i$1)) : a$1 = i$1.F, o$1.ha = a$1), a$1(e$1, t$1, o$1.X), i$1 = {
					F: i$1.F,
					U: i$1.U,
					T: i$1.T
				};
			}
		}
		(function(t$2, e$2) {
			if (e$2 = e$2.ba) {
				it$1(t$2, t$2.g.end());
				for (var n$2 = 0; n$2 < e$2.length; n$2++) it$1(t$2, e$2[n$2]);
			}
		})(e$1, t$1);
	}
	var It$1 = Symbol();
	function Lt$1(t$1, e$1, n$1) {
		return t$1[It$1] || (t$1[It$1] = function(t$2, r$1) {
			return e$1(t$2, r$1, n$1);
		});
	}
	function Bt$1(t$1) {
		var e$1 = t$1[It$1];
		if (!e$1) {
			var n$1 = Qt(t$1);
			e$1 = function(t$2, e$2) {
				return te(t$2, e$2, n$1);
			}, t$1[It$1] = e$1;
		}
		return e$1;
	}
	function Dt$1(t$1) {
		var e$1 = function(t$2) {
			var e$2 = t$2.aa;
			return e$2 ? Bt$1(e$2) : (e$2 = t$2.ka) ? Lt$1(t$2.X.g, e$2, t$2.ca) : void 0;
		}(t$1), n$1 = t$1.X, r$1 = t$1.fa.O;
		return e$1 ? function(t$2, i$1) {
			return r$1(t$2, i$1, n$1, e$1);
		} : function(t$2, e$2) {
			return r$1(t$2, e$2, n$1);
		};
	}
	function Pt$1(t$1, e$1, n$1, r$1, i$1, o$1) {
		var a$1 = 0;
		for ((t$1 = t$1()).length && "number" != typeof t$1[0] && (n$1(e$1, t$1[0]), a$1++); a$1 < t$1.length;) {
			n$1 = t$1[a$1++];
			for (var u$1 = a$1 + 1; u$1 < t$1.length && "number" != typeof t$1[u$1];) u$1++;
			var s$1 = t$1[a$1++];
			switch (u$1 -= a$1) {
				case 0:
					r$1(e$1, n$1, s$1);
					break;
				case 1:
					r$1(e$1, n$1, s$1, t$1[a$1++]);
					break;
				case 2:
					i$1(e$1, n$1, s$1, t$1[a$1++], t$1[a$1++]);
					break;
				case 3:
					u$1 = t$1[a$1++];
					var c$1 = t$1[a$1++], h$1 = t$1[a$1++];
					Array.isArray(h$1) ? i$1(e$1, n$1, s$1, u$1, c$1, h$1) : o$1(e$1, n$1, s$1, u$1, c$1, h$1);
					break;
				case 4:
					o$1(e$1, n$1, s$1, t$1[a$1++], t$1[a$1++], t$1[a$1++], t$1[a$1++]);
					break;
				default: throw Error("unexpected number of binary field arguments: " + u$1);
			}
		}
		return e$1;
	}
	var zt$1 = Symbol();
	function Ut$1(t$1) {
		var e$1 = t$1[zt$1];
		if (!e$1) {
			var n$1 = Xt$1(t$1);
			e$1 = function(t$2, e$2) {
				return ne(t$2, e$2, n$1);
			}, t$1[zt$1] = e$1;
		}
		return e$1;
	}
	function Nt$1(t$1, e$1) {
		var n$1 = t$1[zt$1];
		return n$1 || (n$1 = function(t$2, n$2) {
			return Rt$1(t$2, n$2, e$1);
		}, t$1[zt$1] = n$1), n$1;
	}
	var Vt$1 = Symbol();
	function Ht$1(t$1, e$1) {
		t$1.push(e$1);
	}
	function Kt$1(t$1, e$1, n$1) {
		t$1.push(e$1, n$1.P);
	}
	function Wt$1(t$1, e$1, n$1, r$1, i$1) {
		var o$1 = Ut$1(i$1), a$1 = n$1.P;
		t$1.push(e$1, (function(t$2, e$2, n$2) {
			return a$1(t$2, e$2, n$2, r$1, o$1);
		}));
	}
	function Gt$1(t$1, e$1, n$1, r$1, i$1, o$1) {
		var a$1 = Nt$1(r$1, o$1), u$1 = n$1.P;
		t$1.push(e$1, (function(t$2, e$2, n$2) {
			return u$1(t$2, e$2, n$2, r$1, a$1);
		}));
	}
	function Xt$1(t$1) {
		return t$1[Vt$1] || Pt$1(t$1, t$1[Vt$1] = [], Ht$1, Kt$1, Wt$1, Gt$1);
	}
	var Yt$1 = Symbol();
	function Jt$1(t$1, e$1) {
		t$1[0] = e$1;
	}
	function qt$1(t$1, e$1, n$1, r$1) {
		var i$1 = n$1.O;
		t$1[e$1] = r$1 ? function(t$2, e$2, n$2) {
			return i$1(t$2, e$2, n$2, r$1);
		} : i$1;
	}
	function $t$1(t$1, e$1, n$1, r$1, i$1, o$1) {
		var a$1 = n$1.O, u$1 = Bt$1(i$1);
		t$1[e$1] = function(t$2, e$2, n$2) {
			return a$1(t$2, e$2, n$2, r$1, u$1, o$1);
		};
	}
	function Zt$1(t$1, e$1, n$1, r$1, i$1, o$1, a$1) {
		var u$1 = n$1.O, s$1 = Lt$1(r$1, i$1, o$1);
		t$1[e$1] = function(t$2, e$2, n$2) {
			return u$1(t$2, e$2, n$2, r$1, s$1, a$1);
		};
	}
	function Qt(t$1) {
		return t$1[Yt$1] || Pt$1(t$1, t$1[Yt$1] = {}, Jt$1, qt$1, $t$1, Zt$1);
	}
	function te(t$1, e$1, n$1) {
		for (; tt$1(e$1) && 4 != e$1.h;) {
			var r$1 = e$1.i, i$1 = n$1[r$1];
			if (!i$1) {
				var o$1 = n$1[0];
				o$1 && (o$1 = o$1[r$1]) && (i$1 = n$1[r$1] = Dt$1(o$1));
			}
			if (!(i$1 && i$1(e$1, t$1, r$1) || (i$1 = e$1, r$1 = t$1, o$1 = i$1.j, et$1(i$1), i$1.W))) {
				var a$1 = i$1.g.h;
				i$1 = o$1 === (i$1 = i$1.g.g) ? P$1 || (P$1 = new Uint8Array(0)) : V$1 ? a$1.slice(o$1, i$1) : new Uint8Array(a$1.subarray(o$1, i$1)), (o$1 = r$1.ba) ? o$1.push(i$1) : r$1.ba = [i$1];
			}
		}
		return t$1;
	}
	function ee(t$1, e$1, n$1) {
		if (nt$1.length) {
			var r$1 = nt$1.pop();
			t$1 && (X$1(r$1.g, t$1), r$1.i = -1, r$1.h = -1), t$1 = r$1;
		} else t$1 = new Q$1(t$1);
		try {
			return te(new e$1(), t$1, Qt(n$1));
		} finally {
			(e$1 = t$1.g).h = null, e$1.j = 0, e$1.i = 0, e$1.g = 0, e$1.v = !1, t$1.i = -1, t$1.h = -1, 100 > nt$1.length && nt$1.push(t$1);
		}
	}
	function ne(t$1, e$1, n$1) {
		for (var r$1 = n$1.length, i$1 = 1 == r$1 % 2, o$1 = i$1 ? 1 : 0; o$1 < r$1; o$1 += 2) (0, n$1[o$1 + 1])(e$1, t$1, n$1[o$1]);
		Rt$1(t$1, e$1, i$1 ? n$1[0] : void 0);
	}
	function re(t$1, e$1) {
		var n$1 = new rt$1();
		ne(t$1, n$1, Xt$1(e$1)), it$1(n$1, n$1.g.end()), t$1 = new Uint8Array(n$1.h);
		for (var r$1 = (e$1 = n$1.i).length, i$1 = 0, o$1 = 0; o$1 < r$1; o$1++) {
			var a$1 = e$1[o$1];
			t$1.set(a$1, i$1), i$1 += a$1.length;
		}
		return n$1.i = [t$1], t$1;
	}
	function ie(t$1, e$1) {
		return {
			O: t$1,
			P: e$1
		};
	}
	var oe = ie((function(t$1, e$1, n$1) {
		if (5 !== t$1.h) return !1;
		var r$1 = (t$1 = t$1.g).h[t$1.g], i$1 = t$1.h[t$1.g + 1], o$1 = t$1.h[t$1.g + 2], a$1 = t$1.h[t$1.g + 3];
		return t$1.g += 4, Y$1(t$1), t$1 = 2 * ((i$1 = (r$1 << 0 | i$1 << 8 | o$1 << 16 | a$1 << 24) >>> 0) >> 31) + 1, r$1 = i$1 >>> 23 & 255, i$1 &= 8388607, yt$1(e$1, n$1, 255 == r$1 ? i$1 ? NaN : Infinity * t$1 : 0 == r$1 ? t$1 * Math.pow(2, -149) * i$1 : t$1 * Math.pow(2, r$1 - 150) * (i$1 + Math.pow(2, 23))), !0;
	}), (function(t$1, e$1, n$1) {
		if (null != (e$1 = mt$1(e$1, n$1))) {
			Z$1(t$1.g, 8 * n$1 + 5), t$1 = t$1.g;
			var r$1 = e$1;
			0 === (r$1 = (n$1 = 0 > r$1 ? 1 : 0) ? -r$1 : r$1) ? 0 < 1 / r$1 ? H$1 = 0 : H$1 = 2147483648 : isNaN(r$1) ? H$1 = 2147483647 : 34028234663852886e22 < r$1 ? H$1 = (n$1 << 31 | 2139095040) >>> 0 : 11754943508222875e-54 > r$1 ? (r$1 = Math.round(r$1 / Math.pow(2, -149)), H$1 = (n$1 << 31 | r$1) >>> 0) : (e$1 = Math.floor(Math.log(r$1) / Math.LN2), r$1 *= Math.pow(2, -e$1), 16777216 <= (r$1 = Math.round(8388608 * r$1)) && ++e$1, H$1 = (n$1 << 31 | e$1 + 127 << 23 | 8388607 & r$1) >>> 0), n$1 = H$1, t$1.g.push(n$1 >>> 0 & 255), t$1.g.push(n$1 >>> 8 & 255), t$1.g.push(n$1 >>> 16 & 255), t$1.g.push(n$1 >>> 24 & 255);
		}
	})), ae = ie((function(t$1, e$1, n$1) {
		if (0 !== t$1.h) return !1;
		for (var r$1 = t$1.g, i$1 = 128, o$1 = 0, a$1 = t$1 = 0; 4 > a$1 && 128 <= i$1; a$1++) i$1 = r$1.h[r$1.g++], Y$1(r$1), o$1 |= (127 & i$1) << 7 * a$1;
		if (128 <= i$1 && (i$1 = r$1.h[r$1.g++], Y$1(r$1), o$1 |= (127 & i$1) << 28, t$1 |= (127 & i$1) >> 4), 128 <= i$1) for (a$1 = 0; 5 > a$1 && 128 <= i$1; a$1++) i$1 = r$1.h[r$1.g++], Y$1(r$1), t$1 |= (127 & i$1) << 7 * a$1 + 3;
		if (!(128 > i$1)) throw W$1();
		return r$1 = o$1 >>> 0, (t$1 = 2147483648 & (i$1 = t$1 >>> 0)) && (i$1 = ~i$1 >>> 0, 0 == (r$1 = 1 + ~r$1 >>> 0) && (i$1 = i$1 + 1 >>> 0)), r$1 = 4294967296 * i$1 + (r$1 >>> 0), yt$1(e$1, n$1, t$1 ? -r$1 : r$1), !0;
	}), (function(t$1, e$1, n$1) {
		if (null != (e$1 = mt$1(e$1, n$1)) && null != e$1) {
			Z$1(t$1.g, 8 * n$1), t$1 = t$1.g;
			var r$1 = e$1;
			for (n$1 = 0 > r$1, e$1 = (r$1 = Math.abs(r$1)) >>> 0, r$1 = Math.floor((r$1 - e$1) / 4294967296), r$1 >>>= 0, n$1 && (r$1 = ~r$1 >>> 0, 4294967295 < (e$1 = 1 + (~e$1 >>> 0)) && (e$1 = 0, 4294967295 < ++r$1 && (r$1 = 0))), n$1 = H$1 = e$1, e$1 = r$1; 0 < e$1 || 127 < n$1;) t$1.g.push(127 & n$1 | 128), n$1 = (n$1 >>> 7 | e$1 << 25) >>> 0, e$1 >>>= 7;
			t$1.g.push(n$1);
		}
	})), ue = ie((function(t$1, e$1, n$1) {
		return 0 === t$1.h && (yt$1(e$1, n$1, J$1(t$1.g)), !0);
	}), (function(t$1, e$1, n$1) {
		if (null != (e$1 = mt$1(e$1, n$1)) && null != e$1) if (Z$1(t$1.g, 8 * n$1), t$1 = t$1.g, 0 <= (n$1 = e$1)) Z$1(t$1, n$1);
		else {
			for (e$1 = 0; 9 > e$1; e$1++) t$1.g.push(127 & n$1 | 128), n$1 >>= 7;
			t$1.g.push(1);
		}
	})), se = ie((function(t$1, e$1, n$1) {
		if (2 !== t$1.h) return !1;
		var r$1, i$1 = J$1(t$1.g) >>> 0, o$1 = (t$1 = t$1.g).g;
		if (t$1.g += i$1, Y$1(t$1), t$1 = t$1.h, _$1) (r$1 = C$1) || (r$1 = C$1 = new TextDecoder("utf-8", { fatal: !0 })), r$1 = r$1.decode(t$1.subarray(o$1, o$1 + i$1));
		else {
			i$1 = o$1 + i$1;
			for (var a$1, u$1, s$1, c$1 = [], h$1 = null; o$1 < i$1;) 128 > (a$1 = t$1[o$1++]) ? c$1.push(a$1) : 224 > a$1 ? o$1 >= i$1 ? S$1() : (u$1 = t$1[o$1++], 194 > a$1 || 128 != (192 & u$1) ? (o$1--, S$1()) : c$1.push((31 & a$1) << 6 | 63 & u$1)) : 240 > a$1 ? o$1 >= i$1 - 1 ? S$1() : 128 != (192 & (u$1 = t$1[o$1++])) || 224 === a$1 && 160 > u$1 || 237 === a$1 && 160 <= u$1 || 128 != (192 & (r$1 = t$1[o$1++])) ? (o$1--, S$1()) : c$1.push((15 & a$1) << 12 | (63 & u$1) << 6 | 63 & r$1) : 244 >= a$1 ? o$1 >= i$1 - 2 ? S$1() : 128 != (192 & (u$1 = t$1[o$1++])) || 0 != u$1 - 144 + (a$1 << 28) >> 30 || 128 != (192 & (r$1 = t$1[o$1++])) || 128 != (192 & (s$1 = t$1[o$1++])) ? (o$1--, S$1()) : (a$1 = (7 & a$1) << 18 | (63 & u$1) << 12 | (63 & r$1) << 6 | 63 & s$1, a$1 -= 65536, c$1.push(55296 + (a$1 >> 10 & 1023), 56320 + (1023 & a$1))) : S$1(), 8192 <= c$1.length && (h$1 = F$1(h$1, c$1), c$1.length = 0);
			r$1 = F$1(h$1, c$1);
		}
		return yt$1(e$1, n$1, r$1), !0;
	}), (function(t$1, e$1, n$1) {
		if (null != (e$1 = mt$1(e$1, n$1))) {
			var r$1 = !1;
			if (r$1 = void 0 !== r$1 && r$1, j$1) {
				if (r$1 && /(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(e$1)) throw Error("Found an unpaired surrogate");
				e$1 = (O$1 || (O$1 = new TextEncoder())).encode(e$1);
			} else {
				for (var i$1 = 0, o$1 = new Uint8Array(3 * e$1.length), a$1 = 0; a$1 < e$1.length; a$1++) {
					var u$1 = e$1.charCodeAt(a$1);
					if (128 > u$1) o$1[i$1++] = u$1;
					else {
						if (2048 > u$1) o$1[i$1++] = u$1 >> 6 | 192;
						else {
							if (55296 <= u$1 && 57343 >= u$1) {
								if (56319 >= u$1 && a$1 < e$1.length) {
									var s$1 = e$1.charCodeAt(++a$1);
									if (56320 <= s$1 && 57343 >= s$1) {
										u$1 = 1024 * (u$1 - 55296) + s$1 - 56320 + 65536, o$1[i$1++] = u$1 >> 18 | 240, o$1[i$1++] = u$1 >> 12 & 63 | 128, o$1[i$1++] = u$1 >> 6 & 63 | 128, o$1[i$1++] = 63 & u$1 | 128;
										continue;
									}
									a$1--;
								}
								if (r$1) throw Error("Found an unpaired surrogate");
								u$1 = 65533;
							}
							o$1[i$1++] = u$1 >> 12 | 224, o$1[i$1++] = u$1 >> 6 & 63 | 128;
						}
						o$1[i$1++] = 63 & u$1 | 128;
					}
				}
				e$1 = o$1.subarray(0, i$1);
			}
			Z$1(t$1.g, 8 * n$1 + 2), Z$1(t$1.g, e$1.length), it$1(t$1, t$1.g.end()), it$1(t$1, e$1);
		}
	})), ce = ie((function(t$1, e$1, n$1, r$1, i$1) {
		if (2 !== t$1.h) return !1;
		e$1 = Mt$1(e$1, n$1, r$1), n$1 = t$1.g.i, r$1 = J$1(t$1.g) >>> 0;
		var o$1 = t$1.g.g + r$1, a$1 = o$1 - n$1;
		if (0 >= a$1 && (t$1.g.i = o$1, i$1(e$1, t$1), a$1 = o$1 - t$1.g.g), a$1) throw Error("Message parsing ended unexpectedly. Expected to read " + r$1 + " bytes, instead read " + (r$1 - a$1) + " bytes, either the data ended unexpectedly or the message misreported its own length");
		return t$1.g.g = o$1, t$1.g.i = n$1, !0;
	}), (function(t$1, e$1, n$1, r$1, i$1) {
		if (null != (e$1 = xt$1(e$1, r$1, n$1))) for (r$1 = 0; r$1 < e$1.length; r$1++) {
			var o$1 = t$1;
			Z$1(o$1.g, 8 * n$1 + 2);
			var a$1 = o$1.g.end();
			it$1(o$1, a$1), a$1.push(o$1.h), o$1 = a$1, i$1(e$1[r$1], t$1), a$1 = t$1;
			var u$1 = o$1.pop();
			for (u$1 = a$1.h + a$1.g.length() - u$1; 127 < u$1;) o$1.push(127 & u$1 | 128), u$1 >>>= 7, a$1.h++;
			o$1.push(u$1), a$1.h++;
		}
	}));
	function he() {
		jt$1.apply(this, arguments);
	}
	if (d(he, jt$1), gt$1) {
		var le = {};
		Object.defineProperties(he, (le[Symbol.hasInstance] = vt$1(Object[Symbol.hasInstance]), le));
	}
	function fe(t$1) {
		he.call(this, t$1);
	}
	function de() {
		return [
			1,
			ue,
			2,
			oe,
			3,
			se,
			4,
			se
		];
	}
	function pe(t$1) {
		he.call(this, t$1, -1, ve);
	}
	function ge() {
		return [
			1,
			ce,
			fe,
			de
		];
	}
	d(fe, he), d(pe, he), pe.prototype.addClassification = function(t$1, e$1) {
		return Mt$1(this, 1, fe, t$1, e$1), this;
	};
	var ve = [1];
	function me(t$1) {
		he.call(this, t$1);
	}
	function ye() {
		return [
			1,
			oe,
			2,
			oe,
			3,
			oe,
			4,
			oe,
			5,
			oe
		];
	}
	function we(t$1) {
		he.call(this, t$1, -1, xe);
	}
	function be() {
		return [
			1,
			ce,
			me,
			ye
		];
	}
	d(me, he), d(we, he);
	var xe = [1];
	function Me(t$1) {
		he.call(this, t$1);
	}
	function Ae() {
		return [
			1,
			oe,
			2,
			oe,
			3,
			oe,
			4,
			oe,
			5,
			oe,
			6,
			ae
		];
	}
	d(Me, he);
	var Te = [
		[61, 146],
		[146, 91],
		[91, 181],
		[181, 84],
		[84, 17],
		[17, 314],
		[314, 405],
		[405, 321],
		[321, 375],
		[375, 291],
		[61, 185],
		[185, 40],
		[40, 39],
		[39, 37],
		[37, 0],
		[0, 267],
		[267, 269],
		[269, 270],
		[270, 409],
		[409, 291],
		[78, 95],
		[95, 88],
		[88, 178],
		[178, 87],
		[87, 14],
		[14, 317],
		[317, 402],
		[402, 318],
		[318, 324],
		[324, 308],
		[78, 191],
		[191, 80],
		[80, 81],
		[81, 82],
		[82, 13],
		[13, 312],
		[312, 311],
		[311, 310],
		[310, 415],
		[415, 308]
	], Ee = [
		[263, 249],
		[249, 390],
		[390, 373],
		[373, 374],
		[374, 380],
		[380, 381],
		[381, 382],
		[382, 362],
		[263, 466],
		[466, 388],
		[388, 387],
		[387, 386],
		[386, 385],
		[385, 384],
		[384, 398],
		[398, 362]
	], Se = [
		[276, 283],
		[283, 282],
		[282, 295],
		[295, 285],
		[300, 293],
		[293, 334],
		[334, 296],
		[296, 336]
	], Fe = [
		[33, 7],
		[7, 163],
		[163, 144],
		[144, 145],
		[145, 153],
		[153, 154],
		[154, 155],
		[155, 133],
		[33, 246],
		[246, 161],
		[161, 160],
		[160, 159],
		[159, 158],
		[158, 157],
		[157, 173],
		[173, 133]
	], Ce = [
		[46, 53],
		[53, 52],
		[52, 65],
		[65, 55],
		[70, 63],
		[63, 105],
		[105, 66],
		[66, 107]
	], Oe = [
		[10, 338],
		[338, 297],
		[297, 332],
		[332, 284],
		[284, 251],
		[251, 389],
		[389, 356],
		[356, 454],
		[454, 323],
		[323, 361],
		[361, 288],
		[288, 397],
		[397, 365],
		[365, 379],
		[379, 378],
		[378, 400],
		[400, 377],
		[377, 152],
		[152, 148],
		[148, 176],
		[176, 149],
		[149, 150],
		[150, 136],
		[136, 172],
		[172, 58],
		[58, 132],
		[132, 93],
		[93, 234],
		[234, 127],
		[127, 162],
		[162, 21],
		[21, 54],
		[54, 103],
		[103, 67],
		[67, 109],
		[109, 10]
	], _e = [].concat(u(Te), u(Ee), u(Se), u(Fe), u(Ce), u(Oe));
	function je(t$1, e$1, n$1) {
		if (n$1 = t$1.createShader(0 === n$1 ? t$1.VERTEX_SHADER : t$1.FRAGMENT_SHADER), t$1.shaderSource(n$1, e$1), t$1.compileShader(n$1), !t$1.getShaderParameter(n$1, t$1.COMPILE_STATUS)) throw Error("Could not compile WebGL shader.\n\n" + t$1.getShaderInfoLog(n$1));
		return n$1;
	}
	function ke(t$1) {
		return xt$1(t$1, fe, 1).map((function(t$2) {
			return {
				index: At$1(t$2, 1),
				ga: bt$1(t$2, 2),
				label: null != mt$1(t$2, 3) ? Tt$1(t$2, 3) : void 0,
				displayName: null != mt$1(t$2, 4) ? Tt$1(t$2, 4) : void 0
			};
		}));
	}
	function Re(t$1) {
		return {
			x: bt$1(t$1, 1),
			y: bt$1(t$1, 2),
			z: bt$1(t$1, 3),
			visibility: null != mt$1(t$1, 4) ? bt$1(t$1, 4) : void 0
		};
	}
	function Ie(t$1, e$1) {
		this.h = t$1, this.g = e$1, this.l = 0;
	}
	function Le(t$1, e$1, n$1) {
		return function(t$2, e$2) {
			var n$2 = t$2.g;
			if (void 0 === t$2.o) {
				var r$1 = je(n$2, "\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }", 0), i$1 = je(n$2, "\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }", 1), o$1 = n$2.createProgram();
				if (n$2.attachShader(o$1, r$1), n$2.attachShader(o$1, i$1), n$2.linkProgram(o$1), !n$2.getProgramParameter(o$1, n$2.LINK_STATUS)) throw Error("Could not compile WebGL program.\n\n" + n$2.getProgramInfoLog(o$1));
				r$1 = t$2.o = o$1, n$2.useProgram(r$1), i$1 = n$2.getUniformLocation(r$1, "sampler0"), t$2.j = {
					K: n$2.getAttribLocation(r$1, "aVertex"),
					J: n$2.getAttribLocation(r$1, "aTex"),
					ma: i$1
				}, t$2.u = n$2.createBuffer(), n$2.bindBuffer(n$2.ARRAY_BUFFER, t$2.u), n$2.enableVertexAttribArray(t$2.j.K), n$2.vertexAttribPointer(t$2.j.K, 2, n$2.FLOAT, !1, 0, 0), n$2.bufferData(n$2.ARRAY_BUFFER, new Float32Array([
					-1,
					-1,
					-1,
					1,
					1,
					1,
					1,
					-1
				]), n$2.STATIC_DRAW), n$2.bindBuffer(n$2.ARRAY_BUFFER, null), t$2.s = n$2.createBuffer(), n$2.bindBuffer(n$2.ARRAY_BUFFER, t$2.s), n$2.enableVertexAttribArray(t$2.j.J), n$2.vertexAttribPointer(t$2.j.J, 2, n$2.FLOAT, !1, 0, 0), n$2.bufferData(n$2.ARRAY_BUFFER, new Float32Array([
					0,
					1,
					0,
					0,
					1,
					0,
					1,
					1
				]), n$2.STATIC_DRAW), n$2.bindBuffer(n$2.ARRAY_BUFFER, null), n$2.uniform1i(i$1, 0);
			}
			r$1 = t$2.j, n$2.useProgram(t$2.o), n$2.canvas.width = e$2.width, n$2.canvas.height = e$2.height, n$2.viewport(0, 0, e$2.width, e$2.height), n$2.activeTexture(n$2.TEXTURE0), t$2.h.bindTexture2d(e$2.glName), n$2.enableVertexAttribArray(r$1.K), n$2.bindBuffer(n$2.ARRAY_BUFFER, t$2.u), n$2.vertexAttribPointer(r$1.K, 2, n$2.FLOAT, !1, 0, 0), n$2.enableVertexAttribArray(r$1.J), n$2.bindBuffer(n$2.ARRAY_BUFFER, t$2.s), n$2.vertexAttribPointer(r$1.J, 2, n$2.FLOAT, !1, 0, 0), n$2.bindFramebuffer(n$2.DRAW_FRAMEBUFFER ? n$2.DRAW_FRAMEBUFFER : n$2.FRAMEBUFFER, null), n$2.clearColor(0, 0, 0, 0), n$2.clear(n$2.COLOR_BUFFER_BIT), n$2.colorMask(!0, !0, !0, !0), n$2.drawArrays(n$2.TRIANGLE_FAN, 0, 4), n$2.disableVertexAttribArray(r$1.K), n$2.disableVertexAttribArray(r$1.J), n$2.bindBuffer(n$2.ARRAY_BUFFER, null), t$2.h.bindTexture2d(0);
		}(t$1, e$1), "function" == typeof t$1.g.canvas.transferToImageBitmap ? Promise.resolve(t$1.g.canvas.transferToImageBitmap()) : n$1 ? Promise.resolve(t$1.g.canvas) : "function" == typeof createImageBitmap ? createImageBitmap(t$1.g.canvas) : (void 0 === t$1.i && (t$1.i = document.createElement("canvas")), new Promise((function(e$2) {
			t$1.i.height = t$1.g.canvas.height, t$1.i.width = t$1.g.canvas.width, t$1.i.getContext("2d", {}).drawImage(t$1.g.canvas, 0, 0, t$1.g.canvas.width, t$1.g.canvas.height), e$2(t$1.i);
		})));
	}
	function Be(t$1) {
		this.g = t$1;
	}
	var De = new Uint8Array([
		0,
		97,
		115,
		109,
		1,
		0,
		0,
		0,
		1,
		4,
		1,
		96,
		0,
		0,
		3,
		2,
		1,
		0,
		10,
		9,
		1,
		7,
		0,
		65,
		0,
		253,
		15,
		26,
		11
	]);
	function Pe(t$1, e$1) {
		return e$1 + t$1;
	}
	function ze(t$1, e$1) {
		window[t$1] = e$1;
	}
	function Ue(t$1) {
		if (this.g = t$1, this.listeners = {}, this.j = {}, this.H = {}, this.o = {}, this.u = {}, this.I = this.s = this.Z = !0, this.D = Promise.resolve(), this.Y = "", this.C = {}, this.locateFile = t$1 && t$1.locateFile || Pe, "object" == typeof window) var e$1 = window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf("/")) + "/";
		else {
			if ("undefined" == typeof location) throw Error("solutions can only be loaded on a web page or in a web worker");
			e$1 = location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf("/")) + "/";
		}
		if (this.$ = e$1, t$1.options) for (var n$1 = (e$1 = a(Object.keys(t$1.options))).next(); !n$1.done; n$1 = e$1.next()) {
			n$1 = n$1.value;
			var r$1 = t$1.options[n$1].default;
			void 0 !== r$1 && (this.j[n$1] = "function" == typeof r$1 ? r$1() : r$1);
		}
	}
	function Ne(t$1) {
		var e$1, n$1, r$1, i$1, o$1, a$1, s$1, c$1, h$1, l$1, f$1;
		return M((function(d$1) {
			switch (d$1.g) {
				case 1: return t$1.Z ? (e$1 = void 0 === t$1.g.files ? [] : "function" == typeof t$1.g.files ? t$1.g.files(t$1.j) : t$1.g.files, m(d$1, M((function(t$2) {
					switch (t$2.g) {
						case 1: return t$2.o = 2, m(t$2, WebAssembly.instantiate(De), 4);
						case 4:
							t$2.g = 3, t$2.o = 0;
							break;
						case 2: return t$2.o = 0, t$2.j = null, t$2.return(!1);
						case 3: return t$2.return(!0);
					}
				})), 2)) : d$1.return();
				case 2:
					if (n$1 = d$1.h, "object" == typeof window) return ze("createMediapipeSolutionsWasm", { locateFile: t$1.locateFile }), ze("createMediapipeSolutionsPackedAssets", { locateFile: t$1.locateFile }), a$1 = e$1.filter((function(t$2) {
						return void 0 !== t$2.data;
					})), s$1 = e$1.filter((function(t$2) {
						return void 0 === t$2.data;
					})), c$1 = Promise.all(a$1.map((function(e$2) {
						var n$2 = Ve(t$1, e$2.url);
						if (void 0 !== e$2.path) {
							var r$2 = e$2.path;
							n$2 = n$2.then((function(e$3) {
								return t$1.overrideFile(r$2, e$3), Promise.resolve(e$3);
							}));
						}
						return n$2;
					}))), h$1 = Promise.all(s$1.map((function(e$2) {
						return void 0 === e$2.simd || e$2.simd && n$1 || !e$2.simd && !n$1 ? function(t$2) {
							var e$3 = document.createElement("script");
							return e$3.setAttribute("src", t$2), e$3.setAttribute("crossorigin", "anonymous"), new Promise((function(t$3) {
								e$3.addEventListener("load", (function() {
									t$3();
								}), !1), e$3.addEventListener("error", (function() {
									t$3();
								}), !1), document.body.appendChild(e$3);
							}));
						}(t$1.locateFile(e$2.url, t$1.$)) : Promise.resolve();
					}))).then((function() {
						var e$2, n$2, r$2;
						return M((function(i$2) {
							if (1 == i$2.g) return e$2 = window.createMediapipeSolutionsWasm, n$2 = window.createMediapipeSolutionsPackedAssets, r$2 = t$1, m(i$2, e$2(n$2), 2);
							r$2.h = i$2.h, i$2.g = 0;
						}));
					})), l$1 = M((function(e$2) {
						return t$1.g.graph && t$1.g.graph.url ? e$2 = m(e$2, Ve(t$1, t$1.g.graph.url), 0) : (e$2.g = 0, e$2 = void 0), e$2;
					})), m(d$1, Promise.all([
						h$1,
						c$1,
						l$1
					]), 7);
					if ("function" != typeof importScripts) throw Error("solutions can only be loaded on a web page or in a web worker");
					return r$1 = e$1.filter((function(t$2) {
						return void 0 === t$2.simd || t$2.simd && n$1 || !t$2.simd && !n$1;
					})).map((function(e$2) {
						return t$1.locateFile(e$2.url, t$1.$);
					})), importScripts.apply(null, u(r$1)), i$1 = t$1, m(d$1, createMediapipeSolutionsWasm(Module), 6);
				case 6:
					i$1.h = d$1.h, t$1.l = new OffscreenCanvas(1, 1), t$1.h.canvas = t$1.l, o$1 = t$1.h.GL.createContext(t$1.l, {
						antialias: !1,
						alpha: !1,
						ja: "undefined" != typeof WebGL2RenderingContext ? 2 : 1
					}), t$1.h.GL.makeContextCurrent(o$1), d$1.g = 4;
					break;
				case 7:
					if (t$1.l = document.createElement("canvas"), !(f$1 = t$1.l.getContext("webgl2", {})) && !(f$1 = t$1.l.getContext("webgl", {}))) return alert("Failed to create WebGL canvas context when passing video frame."), d$1.return();
					t$1.G = f$1, t$1.h.canvas = t$1.l, t$1.h.createContext(t$1.l, !0, !0, {});
				case 4: t$1.i = new t$1.h.SolutionWasm(), t$1.Z = !1, d$1.g = 0;
			}
		}));
	}
	function Ve(t$1, e$1) {
		var n$1, r$1;
		return M((function(i$1) {
			return e$1 in t$1.H ? i$1.return(t$1.H[e$1]) : (n$1 = t$1.locateFile(e$1, ""), r$1 = fetch(n$1).then((function(t$2) {
				return t$2.arrayBuffer();
			})), t$1.H[e$1] = r$1, i$1.return(r$1));
		}));
	}
	function He(t$1, e$1, n$1) {
		var r$1, i$1, o$1, u$1, s$1, c$1, h$1, l$1, f$1, d$1, p$1, g$1, v$1, y$1;
		return M((function(w$1) {
			switch (w$1.g) {
				case 1:
					if (!n$1) return w$1.return(e$1);
					for (r$1 = {}, i$1 = 0, o$1 = a(Object.keys(n$1)), u$1 = o$1.next(); !u$1.done; u$1 = o$1.next()) s$1 = u$1.value, "string" != typeof (c$1 = n$1[s$1]) && "texture" === c$1.type && void 0 !== e$1[c$1.stream] && ++i$1;
					1 < i$1 && (t$1.I = !1), h$1 = a(Object.keys(n$1)), u$1 = h$1.next();
				case 2:
					if (u$1.done) {
						w$1.g = 4;
						break;
					}
					if (l$1 = u$1.value, "string" == typeof (f$1 = n$1[l$1])) return v$1 = r$1, y$1 = l$1, m(w$1, function(t$2, e$2, n$2) {
						var r$2;
						return M((function(i$2) {
							return "number" == typeof n$2 || n$2 instanceof Uint8Array || n$2 instanceof t$2.h.Uint8BlobList ? i$2.return(n$2) : n$2 instanceof t$2.h.Texture2dDataOut ? ((r$2 = t$2.u[e$2]) || (r$2 = new Ie(t$2.h, t$2.G), t$2.u[e$2] = r$2), i$2.return(Le(r$2, n$2, t$2.I))) : i$2.return(void 0);
						}));
					}(t$1, l$1, e$1[f$1]), 14);
					if (d$1 = e$1[f$1.stream], "detection_list" === f$1.type) {
						if (d$1) {
							for (var b$1 = d$1.getRectList(), x$1 = d$1.getLandmarksList(), A$1 = d$1.getClassificationsList(), T$1 = [], E$2 = 0; E$2 < b$1.size(); ++E$2) {
								var S$2 = ee(b$1.get(E$2), Me, Ae);
								S$2 = {
									boundingBox: {
										xCenter: bt$1(S$2, 1),
										yCenter: bt$1(S$2, 2),
										height: bt$1(S$2, 3),
										width: bt$1(S$2, 4),
										rotation: bt$1(S$2, 5, 0),
										rectId: At$1(S$2, 6)
									},
									landmarks: xt$1(ee(x$1.get(E$2), we, be), me, 1).map(Re),
									V: ke(ee(A$1.get(E$2), pe, ge))
								}, T$1.push(S$2);
							}
							b$1 = T$1;
						} else b$1 = [];
						r$1[l$1] = b$1, w$1.g = 7;
						break;
					}
					if ("proto_list" === f$1.type) {
						if (d$1) {
							for (b$1 = Array(d$1.size()), x$1 = 0; x$1 < d$1.size(); x$1++) b$1[x$1] = d$1.get(x$1);
							d$1.delete();
						} else b$1 = [];
						r$1[l$1] = b$1, w$1.g = 7;
						break;
					}
					if (void 0 === d$1) {
						w$1.g = 3;
						break;
					}
					if ("float_list" === f$1.type) {
						r$1[l$1] = d$1, w$1.g = 7;
						break;
					}
					if ("proto" === f$1.type) {
						r$1[l$1] = d$1, w$1.g = 7;
						break;
					}
					if ("texture" !== f$1.type) throw Error("Unknown output config type: '" + f$1.type + "'");
					return (p$1 = t$1.u[l$1]) || (p$1 = new Ie(t$1.h, t$1.G), t$1.u[l$1] = p$1), m(w$1, Le(p$1, d$1, t$1.I), 13);
				case 13: g$1 = w$1.h, r$1[l$1] = g$1;
				case 7:
					f$1.transform && r$1[l$1] && (r$1[l$1] = f$1.transform(r$1[l$1])), w$1.g = 3;
					break;
				case 14: v$1[y$1] = w$1.h;
				case 3:
					u$1 = h$1.next(), w$1.g = 2;
					break;
				case 4: return w$1.return(r$1);
			}
		}));
	}
	function Ke(t$1, e$1) {
		for (var n$1 = e$1.name || "$", r$1 = [].concat(u(e$1.wants)), i$1 = new t$1.h.StringList(), o$1 = a(e$1.wants), s$1 = o$1.next(); !s$1.done; s$1 = o$1.next()) i$1.push_back(s$1.value);
		o$1 = t$1.h.PacketListener.implement({ onResults: function(i$2) {
			for (var o$2 = {}, a$1 = 0; a$1 < e$1.wants.length; ++a$1) o$2[r$1[a$1]] = i$2.get(a$1);
			var u$1 = t$1.listeners[n$1];
			u$1 && (t$1.D = He(t$1, o$2, e$1.outs).then((function(n$2) {
				n$2 = u$1(n$2);
				for (var i$3 = 0; i$3 < e$1.wants.length; ++i$3) {
					var a$2 = o$2[r$1[i$3]];
					"object" == typeof a$2 && a$2.hasOwnProperty && a$2.hasOwnProperty("delete") && a$2.delete();
				}
				n$2 && (t$1.D = n$2);
			})));
		} }), t$1.i.attachMultiListener(i$1, o$1), i$1.delete();
	}
	function We(t$1) {
		var e$1 = this;
		t$1 = t$1 || {};
		var n$1 = { url: "face_detection_short.binarypb" }, r$1 = {
			type: 1,
			graphOptionXref: {
				calculatorType: "TensorsToDetectionsCalculator",
				calculatorName: "facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",
				fieldName: "min_score_thresh"
			}
		};
		this.g = new Ue({
			locateFile: t$1.locateFile,
			files: [
				{
					data: !0,
					url: "face_detection_short.binarypb"
				},
				{
					data: !0,
					url: "face_detection_short_range.tflite"
				},
				{
					simd: !0,
					url: "face_detection_solution_simd_wasm_bin.js"
				},
				{
					simd: !1,
					url: "face_detection_solution_wasm_bin.js"
				}
			],
			graph: n$1,
			listeners: [{
				wants: ["detections", "image_transformed"],
				outs: {
					image: "image_transformed",
					detections: {
						type: "detection_list",
						stream: "detections"
					}
				}
			}],
			inputs: { image: {
				type: "video",
				stream: "input_frames_gpu"
			} },
			options: {
				useCpuInference: {
					type: 0,
					graphOptionXref: {
						calculatorType: "InferenceCalculator",
						fieldName: "use_cpu_inference"
					},
					default: "object" == typeof window && void 0 !== window.navigator && ("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document)
				},
				selfieMode: {
					type: 0,
					graphOptionXref: {
						calculatorType: "GlScalerCalculator",
						calculatorIndex: 1,
						fieldName: "flip_horizontal"
					}
				},
				model: {
					type: 0,
					onChange: function(t$2) {
						var i$1, o$1, u$1, s$1, c$1;
						return M((function(h$1) {
							switch (h$1.g) {
								case 1: i$1 = a("short" === t$2 ? ["face_detection_short_range.tflite"] : ["face_detection_full_range_sparse.tflite"]), o$1 = i$1.next();
								case 2:
									if (o$1.done) {
										h$1.g = 4;
										break;
									}
									return u$1 = o$1.value, s$1 = "third_party/mediapipe/modules/face_detection/" + u$1, m(h$1, Ve(e$1.g, u$1), 5);
								case 5:
									c$1 = h$1.h, e$1.g.overrideFile(s$1, c$1), o$1 = i$1.next(), h$1.g = 2;
									break;
								case 4: return n$1.url = "short" === t$2 ? "face_detection_short.binarypb" : "face_detection_full.binarypb", r$1.graphOptionXref.calculatorName = "short" === t$2 ? "facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator" : "facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator", h$1.return(!0);
							}
						}));
					}
				},
				minDetectionConfidence: r$1
			}
		});
	}
	(t = Ue.prototype).close = function() {
		return this.i && this.i.delete(), Promise.resolve();
	}, t.reset = function() {
		var t$1 = this;
		return M((function(e$1) {
			t$1.i && (t$1.i.reset(), t$1.o = {}, t$1.u = {}), e$1.g = 0;
		}));
	}, t.setOptions = function(t$1, e$1) {
		var n$1 = this;
		if (e$1 = e$1 || this.g.options) {
			for (var r$1 = [], i$1 = [], o$1 = {}, u$1 = a(Object.keys(t$1)), s$1 = u$1.next(); !s$1.done; o$1 = {
				R: o$1.R,
				S: o$1.S
			}, s$1 = u$1.next()) {
				var c$1 = s$1.value;
				c$1 in this.j && this.j[c$1] === t$1[c$1] || (this.j[c$1] = t$1[c$1], void 0 !== (s$1 = e$1[c$1]) && (s$1.onChange && (o$1.R = s$1.onChange, o$1.S = t$1[c$1], r$1.push(function(t$2) {
					return function() {
						return M((function(e$2) {
							if (1 == e$2.g) return m(e$2, t$2.R(t$2.S), 2);
							!0 === e$2.h && (n$1.s = !0), e$2.g = 0;
						}));
					};
				}(o$1))), s$1.graphOptionXref && (c$1 = {
					valueNumber: 1 === s$1.type ? t$1[c$1] : 0,
					valueBoolean: 0 === s$1.type && t$1[c$1],
					valueString: 2 === s$1.type ? t$1[c$1] : ""
				}, s$1 = Object.assign(Object.assign(Object.assign({}, {
					calculatorName: "",
					calculatorIndex: 0
				}), s$1.graphOptionXref), c$1), i$1.push(s$1))));
			}
			0 === r$1.length && 0 === i$1.length || (this.s = !0, this.B = (void 0 === this.B ? [] : this.B).concat(i$1), this.A = (void 0 === this.A ? [] : this.A).concat(r$1));
		}
	}, t.initialize = function() {
		var t$1 = this;
		return M((function(e$1) {
			return 1 == e$1.g ? m(e$1, Ne(t$1), 2) : 3 != e$1.g ? m(e$1, function(t$2) {
				var e$2, n$1, r$1, i$1, o$1, u$1, s$1, c$1;
				return M((function(h$1) {
					if (1 == h$1.g) return t$2.g.graph && t$2.g.graph.url && t$2.Y === t$2.g.graph.url ? h$1.return() : (t$2.s = !0, t$2.g.graph && t$2.g.graph.url ? (t$2.Y = t$2.g.graph.url, m(h$1, Ve(t$2, t$2.g.graph.url), 3)) : void (h$1.g = 2));
					for (2 != h$1.g && (e$2 = h$1.h, t$2.i.loadGraph(e$2)), n$1 = a(Object.keys(t$2.C)), r$1 = n$1.next(); !r$1.done; r$1 = n$1.next()) i$1 = r$1.value, t$2.i.overrideFile(i$1, t$2.C[i$1]);
					if (t$2.C = {}, t$2.g.listeners) for (o$1 = a(t$2.g.listeners), u$1 = o$1.next(); !u$1.done; u$1 = o$1.next()) s$1 = u$1.value, Ke(t$2, s$1);
					c$1 = t$2.j, t$2.j = {}, t$2.setOptions(c$1), h$1.g = 0;
				}));
			}(t$1), 3) : m(e$1, function(t$2) {
				var e$2, n$1, r$1, i$1, o$1, u$1;
				return M((function(s$1) {
					switch (s$1.g) {
						case 1:
							if (!t$2.s) return s$1.return();
							if (!t$2.A) {
								s$1.g = 2;
								break;
							}
							e$2 = a(t$2.A), n$1 = e$2.next();
						case 3:
							if (n$1.done) {
								s$1.g = 5;
								break;
							}
							return m(s$1, (0, n$1.value)(), 4);
						case 4:
							n$1 = e$2.next(), s$1.g = 3;
							break;
						case 5: t$2.A = void 0;
						case 2:
							if (t$2.B) {
								for (r$1 = new t$2.h.GraphOptionChangeRequestList(), i$1 = a(t$2.B), o$1 = i$1.next(); !o$1.done; o$1 = i$1.next()) u$1 = o$1.value, r$1.push_back(u$1);
								t$2.i.changeOptions(r$1), r$1.delete(), t$2.B = void 0;
							}
							t$2.s = !1, s$1.g = 0;
					}
				}));
			}(t$1), 0);
		}));
	}, t.overrideFile = function(t$1, e$1) {
		this.i ? this.i.overrideFile(t$1, e$1) : this.C[t$1] = e$1;
	}, t.clearOverriddenFiles = function() {
		this.C = {}, this.i && this.i.clearOverriddenFiles();
	}, t.send = function(t$1, e$1) {
		var n$1, r$1, i$1, o$1, u$1, s$1, c$1, h$1, l$1, f$1 = this;
		return M((function(d$1) {
			switch (d$1.g) {
				case 1: return f$1.g.inputs ? (n$1 = 1e3 * (null == e$1 ? performance.now() : e$1), m(d$1, f$1.D, 2)) : d$1.return();
				case 2: return m(d$1, f$1.initialize(), 3);
				case 3:
					for (r$1 = new f$1.h.PacketDataList(), i$1 = a(Object.keys(t$1)), o$1 = i$1.next(); !o$1.done; o$1 = i$1.next()) if (u$1 = o$1.value, s$1 = f$1.g.inputs[u$1]) {
						t: {
							var p$1 = t$1[u$1];
							switch (s$1.type) {
								case "video":
									var g$1 = f$1.o[s$1.stream];
									if (g$1 || (g$1 = new Ie(f$1.h, f$1.G), f$1.o[s$1.stream] = g$1), 0 === g$1.l && (g$1.l = g$1.h.createTexture()), "undefined" != typeof HTMLVideoElement && p$1 instanceof HTMLVideoElement) var v$1 = p$1.videoWidth, y$1 = p$1.videoHeight;
									else "undefined" != typeof HTMLImageElement && p$1 instanceof HTMLImageElement ? (v$1 = p$1.naturalWidth, y$1 = p$1.naturalHeight) : (v$1 = p$1.width, y$1 = p$1.height);
									y$1 = {
										glName: g$1.l,
										width: v$1,
										height: y$1
									}, (v$1 = g$1.g).canvas.width = y$1.width, v$1.canvas.height = y$1.height, v$1.activeTexture(v$1.TEXTURE0), g$1.h.bindTexture2d(g$1.l), v$1.texImage2D(v$1.TEXTURE_2D, 0, v$1.RGBA, v$1.RGBA, v$1.UNSIGNED_BYTE, p$1), g$1.h.bindTexture2d(0), g$1 = y$1;
									break t;
								case "detections":
									for ((g$1 = f$1.o[s$1.stream]) || (g$1 = new Be(f$1.h), f$1.o[s$1.stream] = g$1), g$1.data || (g$1.data = new g$1.g.DetectionListData()), g$1.data.reset(p$1.length), y$1 = 0; y$1 < p$1.length; ++y$1) {
										v$1 = p$1[y$1];
										var w$1 = g$1.data, b$1 = w$1.setBoundingBox, x$1 = y$1, M$1 = v$1.boundingBox, A$1 = new Me();
										if (yt$1(A$1, 1, M$1.xCenter), yt$1(A$1, 2, M$1.yCenter), yt$1(A$1, 3, M$1.height), yt$1(A$1, 4, M$1.width), yt$1(A$1, 5, M$1.rotation), yt$1(A$1, 6, M$1.rectId), M$1 = re(A$1, Ae), b$1.call(w$1, x$1, M$1), v$1.landmarks) for (w$1 = 0; w$1 < v$1.landmarks.length; ++w$1) {
											var T$1 = !!(A$1 = v$1.landmarks[w$1]).visibility;
											x$1 = (b$1 = g$1.data).addNormalizedLandmark, M$1 = y$1, A$1 = Object.assign(Object.assign({}, A$1), { visibility: T$1 ? A$1.visibility : 0 }), yt$1(T$1 = new me(), 1, A$1.x), yt$1(T$1, 2, A$1.y), yt$1(T$1, 3, A$1.z), A$1.visibility && yt$1(T$1, 4, A$1.visibility), A$1 = re(T$1, ye), x$1.call(b$1, M$1, A$1);
										}
										if (v$1.V) for (w$1 = 0; w$1 < v$1.V.length; ++w$1) x$1 = (b$1 = g$1.data).addClassification, M$1 = y$1, A$1 = v$1.V[w$1], yt$1(T$1 = new fe(), 2, A$1.ga), A$1.index && yt$1(T$1, 1, A$1.index), A$1.label && yt$1(T$1, 3, A$1.label), A$1.displayName && yt$1(T$1, 4, A$1.displayName), A$1 = re(T$1, de), x$1.call(b$1, M$1, A$1);
									}
									g$1 = g$1.data;
									break t;
								default: g$1 = {};
							}
						}
						switch (c$1 = g$1, h$1 = s$1.stream, s$1.type) {
							case "video":
								r$1.pushTexture2d(Object.assign(Object.assign({}, c$1), {
									stream: h$1,
									timestamp: n$1
								}));
								break;
							case "detections":
								(l$1 = c$1).stream = h$1, l$1.timestamp = n$1, r$1.pushDetectionList(l$1);
								break;
							default: throw Error("Unknown input config type: '" + s$1.type + "'");
						}
					}
					return f$1.i.send(r$1), m(d$1, f$1.D, 4);
				case 4: r$1.delete(), d$1.g = 0;
			}
		}));
	}, t.onResults = function(t$1, e$1) {
		this.listeners[e$1 || "$"] = t$1;
	}, E$1("Solution", Ue), E$1("OptionType", {
		BOOL: 0,
		NUMBER: 1,
		ia: 2,
		0: "BOOL",
		1: "NUMBER",
		2: "STRING"
	}), (t = We.prototype).close = function() {
		return this.g.close(), Promise.resolve();
	}, t.onResults = function(t$1) {
		this.g.onResults(t$1);
	}, t.initialize = function() {
		var t$1 = this;
		return M((function(e$1) {
			return m(e$1, t$1.g.initialize(), 0);
		}));
	}, t.reset = function() {
		this.g.reset();
	}, t.send = function(t$1) {
		var e$1 = this;
		return M((function(n$1) {
			return m(n$1, e$1.g.send(t$1), 0);
		}));
	}, t.setOptions = function(t$1) {
		this.g.setOptions(t$1);
	}, E$1("FaceDetection", We), E$1("FACEDETECTION_LIPS", Te), E$1("FACEDETECTION_LEFT_EYE", Ee), E$1("FACEDETECTION_LEFT_EYEBROW", Se), E$1("FACEDETECTION_RIGHT_EYE", Fe), E$1("FACEDETECTION_RIGHT_EYEBROW", Ce), E$1("FACEDETECTION_FACE_OVAL", Oe), E$1("FACEDETECTION_CONTOURS", _e), E$1("FACEDETECTION_TESSELATION", [
		[127, 34],
		[34, 139],
		[139, 127],
		[11, 0],
		[0, 37],
		[37, 11],
		[232, 231],
		[231, 120],
		[120, 232],
		[72, 37],
		[37, 39],
		[39, 72],
		[128, 121],
		[121, 47],
		[47, 128],
		[232, 121],
		[121, 128],
		[128, 232],
		[104, 69],
		[69, 67],
		[67, 104],
		[175, 171],
		[171, 148],
		[148, 175],
		[118, 50],
		[50, 101],
		[101, 118],
		[73, 39],
		[39, 40],
		[40, 73],
		[9, 151],
		[151, 108],
		[108, 9],
		[48, 115],
		[115, 131],
		[131, 48],
		[194, 204],
		[204, 211],
		[211, 194],
		[74, 40],
		[40, 185],
		[185, 74],
		[80, 42],
		[42, 183],
		[183, 80],
		[40, 92],
		[92, 186],
		[186, 40],
		[230, 229],
		[229, 118],
		[118, 230],
		[202, 212],
		[212, 214],
		[214, 202],
		[83, 18],
		[18, 17],
		[17, 83],
		[76, 61],
		[61, 146],
		[146, 76],
		[160, 29],
		[29, 30],
		[30, 160],
		[56, 157],
		[157, 173],
		[173, 56],
		[106, 204],
		[204, 194],
		[194, 106],
		[135, 214],
		[214, 192],
		[192, 135],
		[203, 165],
		[165, 98],
		[98, 203],
		[21, 71],
		[71, 68],
		[68, 21],
		[51, 45],
		[45, 4],
		[4, 51],
		[144, 24],
		[24, 23],
		[23, 144],
		[77, 146],
		[146, 91],
		[91, 77],
		[205, 50],
		[50, 187],
		[187, 205],
		[201, 200],
		[200, 18],
		[18, 201],
		[91, 106],
		[106, 182],
		[182, 91],
		[90, 91],
		[91, 181],
		[181, 90],
		[85, 84],
		[84, 17],
		[17, 85],
		[206, 203],
		[203, 36],
		[36, 206],
		[148, 171],
		[171, 140],
		[140, 148],
		[92, 40],
		[40, 39],
		[39, 92],
		[193, 189],
		[189, 244],
		[244, 193],
		[159, 158],
		[158, 28],
		[28, 159],
		[247, 246],
		[246, 161],
		[161, 247],
		[236, 3],
		[3, 196],
		[196, 236],
		[54, 68],
		[68, 104],
		[104, 54],
		[193, 168],
		[168, 8],
		[8, 193],
		[117, 228],
		[228, 31],
		[31, 117],
		[189, 193],
		[193, 55],
		[55, 189],
		[98, 97],
		[97, 99],
		[99, 98],
		[126, 47],
		[47, 100],
		[100, 126],
		[166, 79],
		[79, 218],
		[218, 166],
		[155, 154],
		[154, 26],
		[26, 155],
		[209, 49],
		[49, 131],
		[131, 209],
		[135, 136],
		[136, 150],
		[150, 135],
		[47, 126],
		[126, 217],
		[217, 47],
		[223, 52],
		[52, 53],
		[53, 223],
		[45, 51],
		[51, 134],
		[134, 45],
		[211, 170],
		[170, 140],
		[140, 211],
		[67, 69],
		[69, 108],
		[108, 67],
		[43, 106],
		[106, 91],
		[91, 43],
		[230, 119],
		[119, 120],
		[120, 230],
		[226, 130],
		[130, 247],
		[247, 226],
		[63, 53],
		[53, 52],
		[52, 63],
		[238, 20],
		[20, 242],
		[242, 238],
		[46, 70],
		[70, 156],
		[156, 46],
		[78, 62],
		[62, 96],
		[96, 78],
		[46, 53],
		[53, 63],
		[63, 46],
		[143, 34],
		[34, 227],
		[227, 143],
		[123, 117],
		[117, 111],
		[111, 123],
		[44, 125],
		[125, 19],
		[19, 44],
		[236, 134],
		[134, 51],
		[51, 236],
		[216, 206],
		[206, 205],
		[205, 216],
		[154, 153],
		[153, 22],
		[22, 154],
		[39, 37],
		[37, 167],
		[167, 39],
		[200, 201],
		[201, 208],
		[208, 200],
		[36, 142],
		[142, 100],
		[100, 36],
		[57, 212],
		[212, 202],
		[202, 57],
		[20, 60],
		[60, 99],
		[99, 20],
		[28, 158],
		[158, 157],
		[157, 28],
		[35, 226],
		[226, 113],
		[113, 35],
		[160, 159],
		[159, 27],
		[27, 160],
		[204, 202],
		[202, 210],
		[210, 204],
		[113, 225],
		[225, 46],
		[46, 113],
		[43, 202],
		[202, 204],
		[204, 43],
		[62, 76],
		[76, 77],
		[77, 62],
		[137, 123],
		[123, 116],
		[116, 137],
		[41, 38],
		[38, 72],
		[72, 41],
		[203, 129],
		[129, 142],
		[142, 203],
		[64, 98],
		[98, 240],
		[240, 64],
		[49, 102],
		[102, 64],
		[64, 49],
		[41, 73],
		[73, 74],
		[74, 41],
		[212, 216],
		[216, 207],
		[207, 212],
		[42, 74],
		[74, 184],
		[184, 42],
		[169, 170],
		[170, 211],
		[211, 169],
		[170, 149],
		[149, 176],
		[176, 170],
		[105, 66],
		[66, 69],
		[69, 105],
		[122, 6],
		[6, 168],
		[168, 122],
		[123, 147],
		[147, 187],
		[187, 123],
		[96, 77],
		[77, 90],
		[90, 96],
		[65, 55],
		[55, 107],
		[107, 65],
		[89, 90],
		[90, 180],
		[180, 89],
		[101, 100],
		[100, 120],
		[120, 101],
		[63, 105],
		[105, 104],
		[104, 63],
		[93, 137],
		[137, 227],
		[227, 93],
		[15, 86],
		[86, 85],
		[85, 15],
		[129, 102],
		[102, 49],
		[49, 129],
		[14, 87],
		[87, 86],
		[86, 14],
		[55, 8],
		[8, 9],
		[9, 55],
		[100, 47],
		[47, 121],
		[121, 100],
		[145, 23],
		[23, 22],
		[22, 145],
		[88, 89],
		[89, 179],
		[179, 88],
		[6, 122],
		[122, 196],
		[196, 6],
		[88, 95],
		[95, 96],
		[96, 88],
		[138, 172],
		[172, 136],
		[136, 138],
		[215, 58],
		[58, 172],
		[172, 215],
		[115, 48],
		[48, 219],
		[219, 115],
		[42, 80],
		[80, 81],
		[81, 42],
		[195, 3],
		[3, 51],
		[51, 195],
		[43, 146],
		[146, 61],
		[61, 43],
		[171, 175],
		[175, 199],
		[199, 171],
		[81, 82],
		[82, 38],
		[38, 81],
		[53, 46],
		[46, 225],
		[225, 53],
		[144, 163],
		[163, 110],
		[110, 144],
		[52, 65],
		[65, 66],
		[66, 52],
		[229, 228],
		[228, 117],
		[117, 229],
		[34, 127],
		[127, 234],
		[234, 34],
		[107, 108],
		[108, 69],
		[69, 107],
		[109, 108],
		[108, 151],
		[151, 109],
		[48, 64],
		[64, 235],
		[235, 48],
		[62, 78],
		[78, 191],
		[191, 62],
		[129, 209],
		[209, 126],
		[126, 129],
		[111, 35],
		[35, 143],
		[143, 111],
		[117, 123],
		[123, 50],
		[50, 117],
		[222, 65],
		[65, 52],
		[52, 222],
		[19, 125],
		[125, 141],
		[141, 19],
		[221, 55],
		[55, 65],
		[65, 221],
		[3, 195],
		[195, 197],
		[197, 3],
		[25, 7],
		[7, 33],
		[33, 25],
		[220, 237],
		[237, 44],
		[44, 220],
		[70, 71],
		[71, 139],
		[139, 70],
		[122, 193],
		[193, 245],
		[245, 122],
		[247, 130],
		[130, 33],
		[33, 247],
		[71, 21],
		[21, 162],
		[162, 71],
		[170, 169],
		[169, 150],
		[150, 170],
		[188, 174],
		[174, 196],
		[196, 188],
		[216, 186],
		[186, 92],
		[92, 216],
		[2, 97],
		[97, 167],
		[167, 2],
		[141, 125],
		[125, 241],
		[241, 141],
		[164, 167],
		[167, 37],
		[37, 164],
		[72, 38],
		[38, 12],
		[12, 72],
		[38, 82],
		[82, 13],
		[13, 38],
		[63, 68],
		[68, 71],
		[71, 63],
		[226, 35],
		[35, 111],
		[111, 226],
		[101, 50],
		[50, 205],
		[205, 101],
		[206, 92],
		[92, 165],
		[165, 206],
		[209, 198],
		[198, 217],
		[217, 209],
		[165, 167],
		[167, 97],
		[97, 165],
		[220, 115],
		[115, 218],
		[218, 220],
		[133, 112],
		[112, 243],
		[243, 133],
		[239, 238],
		[238, 241],
		[241, 239],
		[214, 135],
		[135, 169],
		[169, 214],
		[190, 173],
		[173, 133],
		[133, 190],
		[171, 208],
		[208, 32],
		[32, 171],
		[125, 44],
		[44, 237],
		[237, 125],
		[86, 87],
		[87, 178],
		[178, 86],
		[85, 86],
		[86, 179],
		[179, 85],
		[84, 85],
		[85, 180],
		[180, 84],
		[83, 84],
		[84, 181],
		[181, 83],
		[201, 83],
		[83, 182],
		[182, 201],
		[137, 93],
		[93, 132],
		[132, 137],
		[76, 62],
		[62, 183],
		[183, 76],
		[61, 76],
		[76, 184],
		[184, 61],
		[57, 61],
		[61, 185],
		[185, 57],
		[212, 57],
		[57, 186],
		[186, 212],
		[214, 207],
		[207, 187],
		[187, 214],
		[34, 143],
		[143, 156],
		[156, 34],
		[79, 239],
		[239, 237],
		[237, 79],
		[123, 137],
		[137, 177],
		[177, 123],
		[44, 1],
		[1, 4],
		[4, 44],
		[201, 194],
		[194, 32],
		[32, 201],
		[64, 102],
		[102, 129],
		[129, 64],
		[213, 215],
		[215, 138],
		[138, 213],
		[59, 166],
		[166, 219],
		[219, 59],
		[242, 99],
		[99, 97],
		[97, 242],
		[2, 94],
		[94, 141],
		[141, 2],
		[75, 59],
		[59, 235],
		[235, 75],
		[24, 110],
		[110, 228],
		[228, 24],
		[25, 130],
		[130, 226],
		[226, 25],
		[23, 24],
		[24, 229],
		[229, 23],
		[22, 23],
		[23, 230],
		[230, 22],
		[26, 22],
		[22, 231],
		[231, 26],
		[112, 26],
		[26, 232],
		[232, 112],
		[189, 190],
		[190, 243],
		[243, 189],
		[221, 56],
		[56, 190],
		[190, 221],
		[28, 56],
		[56, 221],
		[221, 28],
		[27, 28],
		[28, 222],
		[222, 27],
		[29, 27],
		[27, 223],
		[223, 29],
		[30, 29],
		[29, 224],
		[224, 30],
		[247, 30],
		[30, 225],
		[225, 247],
		[238, 79],
		[79, 20],
		[20, 238],
		[166, 59],
		[59, 75],
		[75, 166],
		[60, 75],
		[75, 240],
		[240, 60],
		[147, 177],
		[177, 215],
		[215, 147],
		[20, 79],
		[79, 166],
		[166, 20],
		[187, 147],
		[147, 213],
		[213, 187],
		[112, 233],
		[233, 244],
		[244, 112],
		[233, 128],
		[128, 245],
		[245, 233],
		[128, 114],
		[114, 188],
		[188, 128],
		[114, 217],
		[217, 174],
		[174, 114],
		[131, 115],
		[115, 220],
		[220, 131],
		[217, 198],
		[198, 236],
		[236, 217],
		[198, 131],
		[131, 134],
		[134, 198],
		[177, 132],
		[132, 58],
		[58, 177],
		[143, 35],
		[35, 124],
		[124, 143],
		[110, 163],
		[163, 7],
		[7, 110],
		[228, 110],
		[110, 25],
		[25, 228],
		[356, 389],
		[389, 368],
		[368, 356],
		[11, 302],
		[302, 267],
		[267, 11],
		[452, 350],
		[350, 349],
		[349, 452],
		[302, 303],
		[303, 269],
		[269, 302],
		[357, 343],
		[343, 277],
		[277, 357],
		[452, 453],
		[453, 357],
		[357, 452],
		[333, 332],
		[332, 297],
		[297, 333],
		[175, 152],
		[152, 377],
		[377, 175],
		[347, 348],
		[348, 330],
		[330, 347],
		[303, 304],
		[304, 270],
		[270, 303],
		[9, 336],
		[336, 337],
		[337, 9],
		[278, 279],
		[279, 360],
		[360, 278],
		[418, 262],
		[262, 431],
		[431, 418],
		[304, 408],
		[408, 409],
		[409, 304],
		[310, 415],
		[415, 407],
		[407, 310],
		[270, 409],
		[409, 410],
		[410, 270],
		[450, 348],
		[348, 347],
		[347, 450],
		[422, 430],
		[430, 434],
		[434, 422],
		[313, 314],
		[314, 17],
		[17, 313],
		[306, 307],
		[307, 375],
		[375, 306],
		[387, 388],
		[388, 260],
		[260, 387],
		[286, 414],
		[414, 398],
		[398, 286],
		[335, 406],
		[406, 418],
		[418, 335],
		[364, 367],
		[367, 416],
		[416, 364],
		[423, 358],
		[358, 327],
		[327, 423],
		[251, 284],
		[284, 298],
		[298, 251],
		[281, 5],
		[5, 4],
		[4, 281],
		[373, 374],
		[374, 253],
		[253, 373],
		[307, 320],
		[320, 321],
		[321, 307],
		[425, 427],
		[427, 411],
		[411, 425],
		[421, 313],
		[313, 18],
		[18, 421],
		[321, 405],
		[405, 406],
		[406, 321],
		[320, 404],
		[404, 405],
		[405, 320],
		[315, 16],
		[16, 17],
		[17, 315],
		[426, 425],
		[425, 266],
		[266, 426],
		[377, 400],
		[400, 369],
		[369, 377],
		[322, 391],
		[391, 269],
		[269, 322],
		[417, 465],
		[465, 464],
		[464, 417],
		[386, 257],
		[257, 258],
		[258, 386],
		[466, 260],
		[260, 388],
		[388, 466],
		[456, 399],
		[399, 419],
		[419, 456],
		[284, 332],
		[332, 333],
		[333, 284],
		[417, 285],
		[285, 8],
		[8, 417],
		[346, 340],
		[340, 261],
		[261, 346],
		[413, 441],
		[441, 285],
		[285, 413],
		[327, 460],
		[460, 328],
		[328, 327],
		[355, 371],
		[371, 329],
		[329, 355],
		[392, 439],
		[439, 438],
		[438, 392],
		[382, 341],
		[341, 256],
		[256, 382],
		[429, 420],
		[420, 360],
		[360, 429],
		[364, 394],
		[394, 379],
		[379, 364],
		[277, 343],
		[343, 437],
		[437, 277],
		[443, 444],
		[444, 283],
		[283, 443],
		[275, 440],
		[440, 363],
		[363, 275],
		[431, 262],
		[262, 369],
		[369, 431],
		[297, 338],
		[338, 337],
		[337, 297],
		[273, 375],
		[375, 321],
		[321, 273],
		[450, 451],
		[451, 349],
		[349, 450],
		[446, 342],
		[342, 467],
		[467, 446],
		[293, 334],
		[334, 282],
		[282, 293],
		[458, 461],
		[461, 462],
		[462, 458],
		[276, 353],
		[353, 383],
		[383, 276],
		[308, 324],
		[324, 325],
		[325, 308],
		[276, 300],
		[300, 293],
		[293, 276],
		[372, 345],
		[345, 447],
		[447, 372],
		[352, 345],
		[345, 340],
		[340, 352],
		[274, 1],
		[1, 19],
		[19, 274],
		[456, 248],
		[248, 281],
		[281, 456],
		[436, 427],
		[427, 425],
		[425, 436],
		[381, 256],
		[256, 252],
		[252, 381],
		[269, 391],
		[391, 393],
		[393, 269],
		[200, 199],
		[199, 428],
		[428, 200],
		[266, 330],
		[330, 329],
		[329, 266],
		[287, 273],
		[273, 422],
		[422, 287],
		[250, 462],
		[462, 328],
		[328, 250],
		[258, 286],
		[286, 384],
		[384, 258],
		[265, 353],
		[353, 342],
		[342, 265],
		[387, 259],
		[259, 257],
		[257, 387],
		[424, 431],
		[431, 430],
		[430, 424],
		[342, 353],
		[353, 276],
		[276, 342],
		[273, 335],
		[335, 424],
		[424, 273],
		[292, 325],
		[325, 307],
		[307, 292],
		[366, 447],
		[447, 345],
		[345, 366],
		[271, 303],
		[303, 302],
		[302, 271],
		[423, 266],
		[266, 371],
		[371, 423],
		[294, 455],
		[455, 460],
		[460, 294],
		[279, 278],
		[278, 294],
		[294, 279],
		[271, 272],
		[272, 304],
		[304, 271],
		[432, 434],
		[434, 427],
		[427, 432],
		[272, 407],
		[407, 408],
		[408, 272],
		[394, 430],
		[430, 431],
		[431, 394],
		[395, 369],
		[369, 400],
		[400, 395],
		[334, 333],
		[333, 299],
		[299, 334],
		[351, 417],
		[417, 168],
		[168, 351],
		[352, 280],
		[280, 411],
		[411, 352],
		[325, 319],
		[319, 320],
		[320, 325],
		[295, 296],
		[296, 336],
		[336, 295],
		[319, 403],
		[403, 404],
		[404, 319],
		[330, 348],
		[348, 349],
		[349, 330],
		[293, 298],
		[298, 333],
		[333, 293],
		[323, 454],
		[454, 447],
		[447, 323],
		[15, 16],
		[16, 315],
		[315, 15],
		[358, 429],
		[429, 279],
		[279, 358],
		[14, 15],
		[15, 316],
		[316, 14],
		[285, 336],
		[336, 9],
		[9, 285],
		[329, 349],
		[349, 350],
		[350, 329],
		[374, 380],
		[380, 252],
		[252, 374],
		[318, 402],
		[402, 403],
		[403, 318],
		[6, 197],
		[197, 419],
		[419, 6],
		[318, 319],
		[319, 325],
		[325, 318],
		[367, 364],
		[364, 365],
		[365, 367],
		[435, 367],
		[367, 397],
		[397, 435],
		[344, 438],
		[438, 439],
		[439, 344],
		[272, 271],
		[271, 311],
		[311, 272],
		[195, 5],
		[5, 281],
		[281, 195],
		[273, 287],
		[287, 291],
		[291, 273],
		[396, 428],
		[428, 199],
		[199, 396],
		[311, 271],
		[271, 268],
		[268, 311],
		[283, 444],
		[444, 445],
		[445, 283],
		[373, 254],
		[254, 339],
		[339, 373],
		[282, 334],
		[334, 296],
		[296, 282],
		[449, 347],
		[347, 346],
		[346, 449],
		[264, 447],
		[447, 454],
		[454, 264],
		[336, 296],
		[296, 299],
		[299, 336],
		[338, 10],
		[10, 151],
		[151, 338],
		[278, 439],
		[439, 455],
		[455, 278],
		[292, 407],
		[407, 415],
		[415, 292],
		[358, 371],
		[371, 355],
		[355, 358],
		[340, 345],
		[345, 372],
		[372, 340],
		[346, 347],
		[347, 280],
		[280, 346],
		[442, 443],
		[443, 282],
		[282, 442],
		[19, 94],
		[94, 370],
		[370, 19],
		[441, 442],
		[442, 295],
		[295, 441],
		[248, 419],
		[419, 197],
		[197, 248],
		[263, 255],
		[255, 359],
		[359, 263],
		[440, 275],
		[275, 274],
		[274, 440],
		[300, 383],
		[383, 368],
		[368, 300],
		[351, 412],
		[412, 465],
		[465, 351],
		[263, 467],
		[467, 466],
		[466, 263],
		[301, 368],
		[368, 389],
		[389, 301],
		[395, 378],
		[378, 379],
		[379, 395],
		[412, 351],
		[351, 419],
		[419, 412],
		[436, 426],
		[426, 322],
		[322, 436],
		[2, 164],
		[164, 393],
		[393, 2],
		[370, 462],
		[462, 461],
		[461, 370],
		[164, 0],
		[0, 267],
		[267, 164],
		[302, 11],
		[11, 12],
		[12, 302],
		[268, 12],
		[12, 13],
		[13, 268],
		[293, 300],
		[300, 301],
		[301, 293],
		[446, 261],
		[261, 340],
		[340, 446],
		[330, 266],
		[266, 425],
		[425, 330],
		[426, 423],
		[423, 391],
		[391, 426],
		[429, 355],
		[355, 437],
		[437, 429],
		[391, 327],
		[327, 326],
		[326, 391],
		[440, 457],
		[457, 438],
		[438, 440],
		[341, 382],
		[382, 362],
		[362, 341],
		[459, 457],
		[457, 461],
		[461, 459],
		[434, 430],
		[430, 394],
		[394, 434],
		[414, 463],
		[463, 362],
		[362, 414],
		[396, 369],
		[369, 262],
		[262, 396],
		[354, 461],
		[461, 457],
		[457, 354],
		[316, 403],
		[403, 402],
		[402, 316],
		[315, 404],
		[404, 403],
		[403, 315],
		[314, 405],
		[405, 404],
		[404, 314],
		[313, 406],
		[406, 405],
		[405, 313],
		[421, 418],
		[418, 406],
		[406, 421],
		[366, 401],
		[401, 361],
		[361, 366],
		[306, 408],
		[408, 407],
		[407, 306],
		[291, 409],
		[409, 408],
		[408, 291],
		[287, 410],
		[410, 409],
		[409, 287],
		[432, 436],
		[436, 410],
		[410, 432],
		[434, 416],
		[416, 411],
		[411, 434],
		[264, 368],
		[368, 383],
		[383, 264],
		[309, 438],
		[438, 457],
		[457, 309],
		[352, 376],
		[376, 401],
		[401, 352],
		[274, 275],
		[275, 4],
		[4, 274],
		[421, 428],
		[428, 262],
		[262, 421],
		[294, 327],
		[327, 358],
		[358, 294],
		[433, 416],
		[416, 367],
		[367, 433],
		[289, 455],
		[455, 439],
		[439, 289],
		[462, 370],
		[370, 326],
		[326, 462],
		[2, 326],
		[326, 370],
		[370, 2],
		[305, 460],
		[460, 455],
		[455, 305],
		[254, 449],
		[449, 448],
		[448, 254],
		[255, 261],
		[261, 446],
		[446, 255],
		[253, 450],
		[450, 449],
		[449, 253],
		[252, 451],
		[451, 450],
		[450, 252],
		[256, 452],
		[452, 451],
		[451, 256],
		[341, 453],
		[453, 452],
		[452, 341],
		[413, 464],
		[464, 463],
		[463, 413],
		[441, 413],
		[413, 414],
		[414, 441],
		[258, 442],
		[442, 441],
		[441, 258],
		[257, 443],
		[443, 442],
		[442, 257],
		[259, 444],
		[444, 443],
		[443, 259],
		[260, 445],
		[445, 444],
		[444, 260],
		[467, 342],
		[342, 445],
		[445, 467],
		[459, 458],
		[458, 250],
		[250, 459],
		[289, 392],
		[392, 290],
		[290, 289],
		[290, 328],
		[328, 460],
		[460, 290],
		[376, 433],
		[433, 435],
		[435, 376],
		[250, 290],
		[290, 392],
		[392, 250],
		[411, 416],
		[416, 433],
		[433, 411],
		[341, 463],
		[463, 464],
		[464, 341],
		[453, 464],
		[464, 465],
		[465, 453],
		[357, 465],
		[465, 412],
		[412, 357],
		[343, 412],
		[412, 399],
		[399, 343],
		[360, 363],
		[363, 440],
		[440, 360],
		[437, 399],
		[399, 456],
		[456, 437],
		[420, 456],
		[456, 363],
		[363, 420],
		[401, 435],
		[435, 288],
		[288, 401],
		[372, 383],
		[383, 353],
		[353, 372],
		[339, 255],
		[255, 249],
		[249, 339],
		[448, 261],
		[261, 255],
		[255, 448],
		[133, 243],
		[243, 190],
		[190, 133],
		[133, 155],
		[155, 112],
		[112, 133],
		[33, 246],
		[246, 247],
		[247, 33],
		[33, 130],
		[130, 25],
		[25, 33],
		[398, 384],
		[384, 286],
		[286, 398],
		[362, 398],
		[398, 414],
		[414, 362],
		[362, 463],
		[463, 341],
		[341, 362],
		[263, 359],
		[359, 467],
		[467, 263],
		[263, 249],
		[249, 255],
		[255, 263],
		[466, 467],
		[467, 260],
		[260, 466],
		[75, 60],
		[60, 166],
		[166, 75],
		[238, 239],
		[239, 79],
		[79, 238],
		[162, 127],
		[127, 139],
		[139, 162],
		[72, 11],
		[11, 37],
		[37, 72],
		[121, 232],
		[232, 120],
		[120, 121],
		[73, 72],
		[72, 39],
		[39, 73],
		[114, 128],
		[128, 47],
		[47, 114],
		[233, 232],
		[232, 128],
		[128, 233],
		[103, 104],
		[104, 67],
		[67, 103],
		[152, 175],
		[175, 148],
		[148, 152],
		[119, 118],
		[118, 101],
		[101, 119],
		[74, 73],
		[73, 40],
		[40, 74],
		[107, 9],
		[9, 108],
		[108, 107],
		[49, 48],
		[48, 131],
		[131, 49],
		[32, 194],
		[194, 211],
		[211, 32],
		[184, 74],
		[74, 185],
		[185, 184],
		[191, 80],
		[80, 183],
		[183, 191],
		[185, 40],
		[40, 186],
		[186, 185],
		[119, 230],
		[230, 118],
		[118, 119],
		[210, 202],
		[202, 214],
		[214, 210],
		[84, 83],
		[83, 17],
		[17, 84],
		[77, 76],
		[76, 146],
		[146, 77],
		[161, 160],
		[160, 30],
		[30, 161],
		[190, 56],
		[56, 173],
		[173, 190],
		[182, 106],
		[106, 194],
		[194, 182],
		[138, 135],
		[135, 192],
		[192, 138],
		[129, 203],
		[203, 98],
		[98, 129],
		[54, 21],
		[21, 68],
		[68, 54],
		[5, 51],
		[51, 4],
		[4, 5],
		[145, 144],
		[144, 23],
		[23, 145],
		[90, 77],
		[77, 91],
		[91, 90],
		[207, 205],
		[205, 187],
		[187, 207],
		[83, 201],
		[201, 18],
		[18, 83],
		[181, 91],
		[91, 182],
		[182, 181],
		[180, 90],
		[90, 181],
		[181, 180],
		[16, 85],
		[85, 17],
		[17, 16],
		[205, 206],
		[206, 36],
		[36, 205],
		[176, 148],
		[148, 140],
		[140, 176],
		[165, 92],
		[92, 39],
		[39, 165],
		[245, 193],
		[193, 244],
		[244, 245],
		[27, 159],
		[159, 28],
		[28, 27],
		[30, 247],
		[247, 161],
		[161, 30],
		[174, 236],
		[236, 196],
		[196, 174],
		[103, 54],
		[54, 104],
		[104, 103],
		[55, 193],
		[193, 8],
		[8, 55],
		[111, 117],
		[117, 31],
		[31, 111],
		[221, 189],
		[189, 55],
		[55, 221],
		[240, 98],
		[98, 99],
		[99, 240],
		[142, 126],
		[126, 100],
		[100, 142],
		[219, 166],
		[166, 218],
		[218, 219],
		[112, 155],
		[155, 26],
		[26, 112],
		[198, 209],
		[209, 131],
		[131, 198],
		[169, 135],
		[135, 150],
		[150, 169],
		[114, 47],
		[47, 217],
		[217, 114],
		[224, 223],
		[223, 53],
		[53, 224],
		[220, 45],
		[45, 134],
		[134, 220],
		[32, 211],
		[211, 140],
		[140, 32],
		[109, 67],
		[67, 108],
		[108, 109],
		[146, 43],
		[43, 91],
		[91, 146],
		[231, 230],
		[230, 120],
		[120, 231],
		[113, 226],
		[226, 247],
		[247, 113],
		[105, 63],
		[63, 52],
		[52, 105],
		[241, 238],
		[238, 242],
		[242, 241],
		[124, 46],
		[46, 156],
		[156, 124],
		[95, 78],
		[78, 96],
		[96, 95],
		[70, 46],
		[46, 63],
		[63, 70],
		[116, 143],
		[143, 227],
		[227, 116],
		[116, 123],
		[123, 111],
		[111, 116],
		[1, 44],
		[44, 19],
		[19, 1],
		[3, 236],
		[236, 51],
		[51, 3],
		[207, 216],
		[216, 205],
		[205, 207],
		[26, 154],
		[154, 22],
		[22, 26],
		[165, 39],
		[39, 167],
		[167, 165],
		[199, 200],
		[200, 208],
		[208, 199],
		[101, 36],
		[36, 100],
		[100, 101],
		[43, 57],
		[57, 202],
		[202, 43],
		[242, 20],
		[20, 99],
		[99, 242],
		[56, 28],
		[28, 157],
		[157, 56],
		[124, 35],
		[35, 113],
		[113, 124],
		[29, 160],
		[160, 27],
		[27, 29],
		[211, 204],
		[204, 210],
		[210, 211],
		[124, 113],
		[113, 46],
		[46, 124],
		[106, 43],
		[43, 204],
		[204, 106],
		[96, 62],
		[62, 77],
		[77, 96],
		[227, 137],
		[137, 116],
		[116, 227],
		[73, 41],
		[41, 72],
		[72, 73],
		[36, 203],
		[203, 142],
		[142, 36],
		[235, 64],
		[64, 240],
		[240, 235],
		[48, 49],
		[49, 64],
		[64, 48],
		[42, 41],
		[41, 74],
		[74, 42],
		[214, 212],
		[212, 207],
		[207, 214],
		[183, 42],
		[42, 184],
		[184, 183],
		[210, 169],
		[169, 211],
		[211, 210],
		[140, 170],
		[170, 176],
		[176, 140],
		[104, 105],
		[105, 69],
		[69, 104],
		[193, 122],
		[122, 168],
		[168, 193],
		[50, 123],
		[123, 187],
		[187, 50],
		[89, 96],
		[96, 90],
		[90, 89],
		[66, 65],
		[65, 107],
		[107, 66],
		[179, 89],
		[89, 180],
		[180, 179],
		[119, 101],
		[101, 120],
		[120, 119],
		[68, 63],
		[63, 104],
		[104, 68],
		[234, 93],
		[93, 227],
		[227, 234],
		[16, 15],
		[15, 85],
		[85, 16],
		[209, 129],
		[129, 49],
		[49, 209],
		[15, 14],
		[14, 86],
		[86, 15],
		[107, 55],
		[55, 9],
		[9, 107],
		[120, 100],
		[100, 121],
		[121, 120],
		[153, 145],
		[145, 22],
		[22, 153],
		[178, 88],
		[88, 179],
		[179, 178],
		[197, 6],
		[6, 196],
		[196, 197],
		[89, 88],
		[88, 96],
		[96, 89],
		[135, 138],
		[138, 136],
		[136, 135],
		[138, 215],
		[215, 172],
		[172, 138],
		[218, 115],
		[115, 219],
		[219, 218],
		[41, 42],
		[42, 81],
		[81, 41],
		[5, 195],
		[195, 51],
		[51, 5],
		[57, 43],
		[43, 61],
		[61, 57],
		[208, 171],
		[171, 199],
		[199, 208],
		[41, 81],
		[81, 38],
		[38, 41],
		[224, 53],
		[53, 225],
		[225, 224],
		[24, 144],
		[144, 110],
		[110, 24],
		[105, 52],
		[52, 66],
		[66, 105],
		[118, 229],
		[229, 117],
		[117, 118],
		[227, 34],
		[34, 234],
		[234, 227],
		[66, 107],
		[107, 69],
		[69, 66],
		[10, 109],
		[109, 151],
		[151, 10],
		[219, 48],
		[48, 235],
		[235, 219],
		[183, 62],
		[62, 191],
		[191, 183],
		[142, 129],
		[129, 126],
		[126, 142],
		[116, 111],
		[111, 143],
		[143, 116],
		[118, 117],
		[117, 50],
		[50, 118],
		[223, 222],
		[222, 52],
		[52, 223],
		[94, 19],
		[19, 141],
		[141, 94],
		[222, 221],
		[221, 65],
		[65, 222],
		[196, 3],
		[3, 197],
		[197, 196],
		[45, 220],
		[220, 44],
		[44, 45],
		[156, 70],
		[70, 139],
		[139, 156],
		[188, 122],
		[122, 245],
		[245, 188],
		[139, 71],
		[71, 162],
		[162, 139],
		[149, 170],
		[170, 150],
		[150, 149],
		[122, 188],
		[188, 196],
		[196, 122],
		[206, 216],
		[216, 92],
		[92, 206],
		[164, 2],
		[2, 167],
		[167, 164],
		[242, 141],
		[141, 241],
		[241, 242],
		[0, 164],
		[164, 37],
		[37, 0],
		[11, 72],
		[72, 12],
		[12, 11],
		[12, 38],
		[38, 13],
		[13, 12],
		[70, 63],
		[63, 71],
		[71, 70],
		[31, 226],
		[226, 111],
		[111, 31],
		[36, 101],
		[101, 205],
		[205, 36],
		[203, 206],
		[206, 165],
		[165, 203],
		[126, 209],
		[209, 217],
		[217, 126],
		[98, 165],
		[165, 97],
		[97, 98],
		[237, 220],
		[220, 218],
		[218, 237],
		[237, 239],
		[239, 241],
		[241, 237],
		[210, 214],
		[214, 169],
		[169, 210],
		[140, 171],
		[171, 32],
		[32, 140],
		[241, 125],
		[125, 237],
		[237, 241],
		[179, 86],
		[86, 178],
		[178, 179],
		[180, 85],
		[85, 179],
		[179, 180],
		[181, 84],
		[84, 180],
		[180, 181],
		[182, 83],
		[83, 181],
		[181, 182],
		[194, 201],
		[201, 182],
		[182, 194],
		[177, 137],
		[137, 132],
		[132, 177],
		[184, 76],
		[76, 183],
		[183, 184],
		[185, 61],
		[61, 184],
		[184, 185],
		[186, 57],
		[57, 185],
		[185, 186],
		[216, 212],
		[212, 186],
		[186, 216],
		[192, 214],
		[214, 187],
		[187, 192],
		[139, 34],
		[34, 156],
		[156, 139],
		[218, 79],
		[79, 237],
		[237, 218],
		[147, 123],
		[123, 177],
		[177, 147],
		[45, 44],
		[44, 4],
		[4, 45],
		[208, 201],
		[201, 32],
		[32, 208],
		[98, 64],
		[64, 129],
		[129, 98],
		[192, 213],
		[213, 138],
		[138, 192],
		[235, 59],
		[59, 219],
		[219, 235],
		[141, 242],
		[242, 97],
		[97, 141],
		[97, 2],
		[2, 141],
		[141, 97],
		[240, 75],
		[75, 235],
		[235, 240],
		[229, 24],
		[24, 228],
		[228, 229],
		[31, 25],
		[25, 226],
		[226, 31],
		[230, 23],
		[23, 229],
		[229, 230],
		[231, 22],
		[22, 230],
		[230, 231],
		[232, 26],
		[26, 231],
		[231, 232],
		[233, 112],
		[112, 232],
		[232, 233],
		[244, 189],
		[189, 243],
		[243, 244],
		[189, 221],
		[221, 190],
		[190, 189],
		[222, 28],
		[28, 221],
		[221, 222],
		[223, 27],
		[27, 222],
		[222, 223],
		[224, 29],
		[29, 223],
		[223, 224],
		[225, 30],
		[30, 224],
		[224, 225],
		[113, 247],
		[247, 225],
		[225, 113],
		[99, 60],
		[60, 240],
		[240, 99],
		[213, 147],
		[147, 215],
		[215, 213],
		[60, 20],
		[20, 166],
		[166, 60],
		[192, 187],
		[187, 213],
		[213, 192],
		[243, 112],
		[112, 244],
		[244, 243],
		[244, 233],
		[233, 245],
		[245, 244],
		[245, 128],
		[128, 188],
		[188, 245],
		[188, 114],
		[114, 174],
		[174, 188],
		[134, 131],
		[131, 220],
		[220, 134],
		[174, 217],
		[217, 236],
		[236, 174],
		[236, 198],
		[198, 134],
		[134, 236],
		[215, 177],
		[177, 58],
		[58, 215],
		[156, 143],
		[143, 124],
		[124, 156],
		[25, 110],
		[110, 7],
		[7, 25],
		[31, 228],
		[228, 25],
		[25, 31],
		[264, 356],
		[356, 368],
		[368, 264],
		[0, 11],
		[11, 267],
		[267, 0],
		[451, 452],
		[452, 349],
		[349, 451],
		[267, 302],
		[302, 269],
		[269, 267],
		[350, 357],
		[357, 277],
		[277, 350],
		[350, 452],
		[452, 357],
		[357, 350],
		[299, 333],
		[333, 297],
		[297, 299],
		[396, 175],
		[175, 377],
		[377, 396],
		[280, 347],
		[347, 330],
		[330, 280],
		[269, 303],
		[303, 270],
		[270, 269],
		[151, 9],
		[9, 337],
		[337, 151],
		[344, 278],
		[278, 360],
		[360, 344],
		[424, 418],
		[418, 431],
		[431, 424],
		[270, 304],
		[304, 409],
		[409, 270],
		[272, 310],
		[310, 407],
		[407, 272],
		[322, 270],
		[270, 410],
		[410, 322],
		[449, 450],
		[450, 347],
		[347, 449],
		[432, 422],
		[422, 434],
		[434, 432],
		[18, 313],
		[313, 17],
		[17, 18],
		[291, 306],
		[306, 375],
		[375, 291],
		[259, 387],
		[387, 260],
		[260, 259],
		[424, 335],
		[335, 418],
		[418, 424],
		[434, 364],
		[364, 416],
		[416, 434],
		[391, 423],
		[423, 327],
		[327, 391],
		[301, 251],
		[251, 298],
		[298, 301],
		[275, 281],
		[281, 4],
		[4, 275],
		[254, 373],
		[373, 253],
		[253, 254],
		[375, 307],
		[307, 321],
		[321, 375],
		[280, 425],
		[425, 411],
		[411, 280],
		[200, 421],
		[421, 18],
		[18, 200],
		[335, 321],
		[321, 406],
		[406, 335],
		[321, 320],
		[320, 405],
		[405, 321],
		[314, 315],
		[315, 17],
		[17, 314],
		[423, 426],
		[426, 266],
		[266, 423],
		[396, 377],
		[377, 369],
		[369, 396],
		[270, 322],
		[322, 269],
		[269, 270],
		[413, 417],
		[417, 464],
		[464, 413],
		[385, 386],
		[386, 258],
		[258, 385],
		[248, 456],
		[456, 419],
		[419, 248],
		[298, 284],
		[284, 333],
		[333, 298],
		[168, 417],
		[417, 8],
		[8, 168],
		[448, 346],
		[346, 261],
		[261, 448],
		[417, 413],
		[413, 285],
		[285, 417],
		[326, 327],
		[327, 328],
		[328, 326],
		[277, 355],
		[355, 329],
		[329, 277],
		[309, 392],
		[392, 438],
		[438, 309],
		[381, 382],
		[382, 256],
		[256, 381],
		[279, 429],
		[429, 360],
		[360, 279],
		[365, 364],
		[364, 379],
		[379, 365],
		[355, 277],
		[277, 437],
		[437, 355],
		[282, 443],
		[443, 283],
		[283, 282],
		[281, 275],
		[275, 363],
		[363, 281],
		[395, 431],
		[431, 369],
		[369, 395],
		[299, 297],
		[297, 337],
		[337, 299],
		[335, 273],
		[273, 321],
		[321, 335],
		[348, 450],
		[450, 349],
		[349, 348],
		[359, 446],
		[446, 467],
		[467, 359],
		[283, 293],
		[293, 282],
		[282, 283],
		[250, 458],
		[458, 462],
		[462, 250],
		[300, 276],
		[276, 383],
		[383, 300],
		[292, 308],
		[308, 325],
		[325, 292],
		[283, 276],
		[276, 293],
		[293, 283],
		[264, 372],
		[372, 447],
		[447, 264],
		[346, 352],
		[352, 340],
		[340, 346],
		[354, 274],
		[274, 19],
		[19, 354],
		[363, 456],
		[456, 281],
		[281, 363],
		[426, 436],
		[436, 425],
		[425, 426],
		[380, 381],
		[381, 252],
		[252, 380],
		[267, 269],
		[269, 393],
		[393, 267],
		[421, 200],
		[200, 428],
		[428, 421],
		[371, 266],
		[266, 329],
		[329, 371],
		[432, 287],
		[287, 422],
		[422, 432],
		[290, 250],
		[250, 328],
		[328, 290],
		[385, 258],
		[258, 384],
		[384, 385],
		[446, 265],
		[265, 342],
		[342, 446],
		[386, 387],
		[387, 257],
		[257, 386],
		[422, 424],
		[424, 430],
		[430, 422],
		[445, 342],
		[342, 276],
		[276, 445],
		[422, 273],
		[273, 424],
		[424, 422],
		[306, 292],
		[292, 307],
		[307, 306],
		[352, 366],
		[366, 345],
		[345, 352],
		[268, 271],
		[271, 302],
		[302, 268],
		[358, 423],
		[423, 371],
		[371, 358],
		[327, 294],
		[294, 460],
		[460, 327],
		[331, 279],
		[279, 294],
		[294, 331],
		[303, 271],
		[271, 304],
		[304, 303],
		[436, 432],
		[432, 427],
		[427, 436],
		[304, 272],
		[272, 408],
		[408, 304],
		[395, 394],
		[394, 431],
		[431, 395],
		[378, 395],
		[395, 400],
		[400, 378],
		[296, 334],
		[334, 299],
		[299, 296],
		[6, 351],
		[351, 168],
		[168, 6],
		[376, 352],
		[352, 411],
		[411, 376],
		[307, 325],
		[325, 320],
		[320, 307],
		[285, 295],
		[295, 336],
		[336, 285],
		[320, 319],
		[319, 404],
		[404, 320],
		[329, 330],
		[330, 349],
		[349, 329],
		[334, 293],
		[293, 333],
		[333, 334],
		[366, 323],
		[323, 447],
		[447, 366],
		[316, 15],
		[15, 315],
		[315, 316],
		[331, 358],
		[358, 279],
		[279, 331],
		[317, 14],
		[14, 316],
		[316, 317],
		[8, 285],
		[285, 9],
		[9, 8],
		[277, 329],
		[329, 350],
		[350, 277],
		[253, 374],
		[374, 252],
		[252, 253],
		[319, 318],
		[318, 403],
		[403, 319],
		[351, 6],
		[6, 419],
		[419, 351],
		[324, 318],
		[318, 325],
		[325, 324],
		[397, 367],
		[367, 365],
		[365, 397],
		[288, 435],
		[435, 397],
		[397, 288],
		[278, 344],
		[344, 439],
		[439, 278],
		[310, 272],
		[272, 311],
		[311, 310],
		[248, 195],
		[195, 281],
		[281, 248],
		[375, 273],
		[273, 291],
		[291, 375],
		[175, 396],
		[396, 199],
		[199, 175],
		[312, 311],
		[311, 268],
		[268, 312],
		[276, 283],
		[283, 445],
		[445, 276],
		[390, 373],
		[373, 339],
		[339, 390],
		[295, 282],
		[282, 296],
		[296, 295],
		[448, 449],
		[449, 346],
		[346, 448],
		[356, 264],
		[264, 454],
		[454, 356],
		[337, 336],
		[336, 299],
		[299, 337],
		[337, 338],
		[338, 151],
		[151, 337],
		[294, 278],
		[278, 455],
		[455, 294],
		[308, 292],
		[292, 415],
		[415, 308],
		[429, 358],
		[358, 355],
		[355, 429],
		[265, 340],
		[340, 372],
		[372, 265],
		[352, 346],
		[346, 280],
		[280, 352],
		[295, 442],
		[442, 282],
		[282, 295],
		[354, 19],
		[19, 370],
		[370, 354],
		[285, 441],
		[441, 295],
		[295, 285],
		[195, 248],
		[248, 197],
		[197, 195],
		[457, 440],
		[440, 274],
		[274, 457],
		[301, 300],
		[300, 368],
		[368, 301],
		[417, 351],
		[351, 465],
		[465, 417],
		[251, 301],
		[301, 389],
		[389, 251],
		[394, 395],
		[395, 379],
		[379, 394],
		[399, 412],
		[412, 419],
		[419, 399],
		[410, 436],
		[436, 322],
		[322, 410],
		[326, 2],
		[2, 393],
		[393, 326],
		[354, 370],
		[370, 461],
		[461, 354],
		[393, 164],
		[164, 267],
		[267, 393],
		[268, 302],
		[302, 12],
		[12, 268],
		[312, 268],
		[268, 13],
		[13, 312],
		[298, 293],
		[293, 301],
		[301, 298],
		[265, 446],
		[446, 340],
		[340, 265],
		[280, 330],
		[330, 425],
		[425, 280],
		[322, 426],
		[426, 391],
		[391, 322],
		[420, 429],
		[429, 437],
		[437, 420],
		[393, 391],
		[391, 326],
		[326, 393],
		[344, 440],
		[440, 438],
		[438, 344],
		[458, 459],
		[459, 461],
		[461, 458],
		[364, 434],
		[434, 394],
		[394, 364],
		[428, 396],
		[396, 262],
		[262, 428],
		[274, 354],
		[354, 457],
		[457, 274],
		[317, 316],
		[316, 402],
		[402, 317],
		[316, 315],
		[315, 403],
		[403, 316],
		[315, 314],
		[314, 404],
		[404, 315],
		[314, 313],
		[313, 405],
		[405, 314],
		[313, 421],
		[421, 406],
		[406, 313],
		[323, 366],
		[366, 361],
		[361, 323],
		[292, 306],
		[306, 407],
		[407, 292],
		[306, 291],
		[291, 408],
		[408, 306],
		[291, 287],
		[287, 409],
		[409, 291],
		[287, 432],
		[432, 410],
		[410, 287],
		[427, 434],
		[434, 411],
		[411, 427],
		[372, 264],
		[264, 383],
		[383, 372],
		[459, 309],
		[309, 457],
		[457, 459],
		[366, 352],
		[352, 401],
		[401, 366],
		[1, 274],
		[274, 4],
		[4, 1],
		[418, 421],
		[421, 262],
		[262, 418],
		[331, 294],
		[294, 358],
		[358, 331],
		[435, 433],
		[433, 367],
		[367, 435],
		[392, 289],
		[289, 439],
		[439, 392],
		[328, 462],
		[462, 326],
		[326, 328],
		[94, 2],
		[2, 370],
		[370, 94],
		[289, 305],
		[305, 455],
		[455, 289],
		[339, 254],
		[254, 448],
		[448, 339],
		[359, 255],
		[255, 446],
		[446, 359],
		[254, 253],
		[253, 449],
		[449, 254],
		[253, 252],
		[252, 450],
		[450, 253],
		[252, 256],
		[256, 451],
		[451, 252],
		[256, 341],
		[341, 452],
		[452, 256],
		[414, 413],
		[413, 463],
		[463, 414],
		[286, 441],
		[441, 414],
		[414, 286],
		[286, 258],
		[258, 441],
		[441, 286],
		[258, 257],
		[257, 442],
		[442, 258],
		[257, 259],
		[259, 443],
		[443, 257],
		[259, 260],
		[260, 444],
		[444, 259],
		[260, 467],
		[467, 445],
		[445, 260],
		[309, 459],
		[459, 250],
		[250, 309],
		[305, 289],
		[289, 290],
		[290, 305],
		[305, 290],
		[290, 460],
		[460, 305],
		[401, 376],
		[376, 435],
		[435, 401],
		[309, 250],
		[250, 392],
		[392, 309],
		[376, 411],
		[411, 433],
		[433, 376],
		[453, 341],
		[341, 464],
		[464, 453],
		[357, 453],
		[453, 465],
		[465, 357],
		[343, 357],
		[357, 412],
		[412, 343],
		[437, 343],
		[343, 399],
		[399, 437],
		[344, 360],
		[360, 440],
		[440, 344],
		[420, 437],
		[437, 456],
		[456, 420],
		[360, 420],
		[420, 363],
		[363, 360],
		[361, 401],
		[401, 288],
		[288, 361],
		[265, 372],
		[372, 353],
		[353, 265],
		[390, 339],
		[339, 249],
		[249, 390],
		[339, 448],
		[448, 255],
		[255, 339]
	]), E$1("VERSION", "0.4.1646425229");
}).call(D);
var z = function() {
	return z = Object.assign || function(t) {
		for (var e, n = 1, r = arguments.length; n < r; n++) for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
		return t;
	}, z.apply(this, arguments);
};
function U(t, e, n, r) {
	return new (n || (n = Promise))((function(i, o) {
		function a(t$1) {
			try {
				s(r.next(t$1));
			} catch (t$2) {
				o(t$2);
			}
		}
		function u(t$1) {
			try {
				s(r.throw(t$1));
			} catch (t$2) {
				o(t$2);
			}
		}
		function s(t$1) {
			var e$1;
			t$1.done ? i(t$1.value) : (e$1 = t$1.value, e$1 instanceof n ? e$1 : new n((function(t$2) {
				t$2(e$1);
			}))).then(a, u);
		}
		s((r = r.apply(t, e || [])).next());
	}));
}
function N(t, e) {
	var n, r, i, o, a = {
		label: 0,
		sent: function() {
			if (1 & i[0]) throw i[1];
			return i[1];
		},
		trys: [],
		ops: []
	};
	return o = {
		next: u(0),
		throw: u(1),
		return: u(2)
	}, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
		return this;
	}), o;
	function u(o$1) {
		return function(u$1) {
			return function(o$2) {
				if (n) throw new TypeError("Generator is already executing.");
				for (; a;) try {
					if (n = 1, r && (i = 2 & o$2[0] ? r.return : o$2[0] ? r.throw || ((i = r.return) && i.call(r), 0) : r.next) && !(i = i.call(r, o$2[1])).done) return i;
					switch (r = 0, i && (o$2 = [2 & o$2[0], i.value]), o$2[0]) {
						case 0:
						case 1:
							i = o$2;
							break;
						case 4: return a.label++, {
							value: o$2[1],
							done: !1
						};
						case 5:
							a.label++, r = o$2[1], o$2 = [0];
							continue;
						case 7:
							o$2 = a.ops.pop(), a.trys.pop();
							continue;
						default:
							if (!((i = (i = a.trys).length > 0 && i[i.length - 1]) || 6 !== o$2[0] && 2 !== o$2[0])) {
								a = 0;
								continue;
							}
							if (3 === o$2[0] && (!i || o$2[1] > i[0] && o$2[1] < i[3])) {
								a.label = o$2[1];
								break;
							}
							if (6 === o$2[0] && a.label < i[1]) {
								a.label = i[1], i = o$2;
								break;
							}
							if (i && a.label < i[2]) {
								a.label = i[2], a.ops.push(o$2);
								break;
							}
							i[2] && a.ops.pop(), a.trys.pop();
							continue;
					}
					o$2 = e.call(t, a);
				} catch (t$1) {
					o$2 = [6, t$1], r = 0;
				} finally {
					n = i = 0;
				}
				if (5 & o$2[0]) throw o$2[1];
				return {
					value: o$2[0] ? o$2[1] : void 0,
					done: !0
				};
			}([o$1, u$1]);
		};
	}
}
var V = [
	"rightEye",
	"leftEye",
	"noseTip",
	"mouthCenter",
	"rightEarTragion",
	"leftEarTragion"
], H = {
	modelType: "short",
	runtime: "mediapipe",
	maxFaces: 1
}, K = function() {
	function t(t$1) {
		var e = this;
		this.width = 0, this.height = 0, this.selfieMode = !1, this.faceDetectorSolution = new P.FaceDetection({ locateFile: function(e$1, n) {
			if (t$1.solutionPath) {
				var r = t$1.solutionPath.replace(/\/+$/, "");
				return "".concat(r, "/").concat(e$1);
			}
			return "".concat(n, "/").concat(e$1);
		} }), this.faceDetectorSolution.setOptions({
			selfieMode: this.selfieMode,
			model: t$1.modelType
		}), this.faceDetectorSolution.onResults((function(t$2) {
			if (e.height = t$2.image.height, e.width = t$2.image.width, e.faces = [], null !== t$2.detections) for (var n = 0, r = t$2.detections; n < r.length; n++) {
				var i = r[n];
				e.faces.push(e.normalizedToAbsolute(i.landmarks, {
					xMin: a = (o = i.boundingBox).xCenter - o.width / 2,
					xMax: a + o.width,
					yMin: u = o.yCenter - o.height / 2,
					yMax: u + o.height,
					width: o.width,
					height: o.height
				}));
			}
			var o, a, u;
		}));
	}
	return t.prototype.normalizedToAbsolute = function(t$1, e) {
		var n = this;
		return {
			keypoints: t$1.map((function(t$2, e$1) {
				return {
					x: t$2.x * n.width,
					y: t$2.y * n.height,
					name: V[e$1]
				};
			})),
			box: {
				xMin: e.xMin * this.width,
				yMin: e.yMin * this.height,
				xMax: e.xMax * this.width,
				yMax: e.yMax * this.height,
				width: e.width * this.width,
				height: e.height * this.height
			}
		};
	}, t.prototype.estimateFaces = function(t$1, e) {
		return U(this, void 0, void 0, (function() {
			var i, o;
			return N(this, (function(a) {
				switch (a.label) {
					case 0: return e && e.flipHorizontal && e.flipHorizontal !== this.selfieMode && (this.selfieMode = e.flipHorizontal, this.faceDetectorSolution.setOptions({ selfieMode: this.selfieMode })), t$1 instanceof Tensor ? (o = ImageData.bind, [4, toPixels(t$1)]) : [3, 2];
					case 1: return i = new (o.apply(ImageData, [
						void 0,
						a.sent(),
						t$1.shape[1],
						t$1.shape[0]
					]))(), [3, 3];
					case 2: i = t$1, a.label = 3;
					case 3: return t$1 = i, [4, this.faceDetectorSolution.send({ image: t$1 })];
					case 4: return a.sent(), [2, this.faces];
				}
			}));
		}));
	}, t.prototype.dispose = function() {
		this.faceDetectorSolution.close();
	}, t.prototype.reset = function() {
		this.faceDetectorSolution.reset(), this.width = 0, this.height = 0, this.faces = null, this.selfieMode = !1;
	}, t.prototype.initialize = function() {
		return this.faceDetectorSolution.initialize();
	}, t;
}();
function W(t) {
	return U(this, void 0, void 0, (function() {
		var e, n;
		return N(this, (function(r) {
			switch (r.label) {
				case 0: return e = function(t$1) {
					if (null == t$1) return z({}, H);
					var e$1 = z({}, t$1);
					return e$1.runtime = "mediapipe", e$1.modelType ??= H.modelType, e$1.maxFaces ??= H.maxFaces, e$1;
				}(t), [4, (n = new K(e)).initialize()];
				case 1: return r.sent(), [2, n];
			}
		}));
	}));
}
function G(t) {
	return t instanceof Tensor ? {
		height: t.shape[0],
		width: t.shape[1]
	} : {
		height: t.height,
		width: t.width
	};
}
function X(t) {
	return t instanceof Tensor ? t : fromPixels(t);
}
function Y(t, e) {
	assert(0 !== t.width, (function() {
		return "".concat(e, " width cannot be 0.");
	})), assert(0 !== t.height, (function() {
		return "".concat(e, " height cannot be 0.");
	}));
}
function J(t, e, n) {
	var r = e.outputTensorSize, i = e.keepAspectRatio, o = e.borderMode, h = e.outputTensorFloatRange, f = G(t), g = function(t$1, e$1) {
		return e$1 ? {
			xCenter: e$1.xCenter * t$1.width,
			yCenter: e$1.yCenter * t$1.height,
			width: e$1.width * t$1.width,
			height: e$1.height * t$1.height,
			rotation: e$1.rotation
		} : {
			xCenter: .5 * t$1.width,
			yCenter: .5 * t$1.height,
			width: t$1.width,
			height: t$1.height,
			rotation: 0
		};
	}(f, n), v = function(t$1, e$1, n$1) {
		if (void 0 === n$1 && (n$1 = !1), !n$1) return {
			top: 0,
			left: 0,
			right: 0,
			bottom: 0
		};
		var r$1 = e$1.height, i$1 = e$1.width;
		Y(e$1, "targetSize"), Y(t$1, "roi");
		var o$1, a, u = r$1 / i$1, s = t$1.height / t$1.width, c = 0, h$1 = 0;
		return u > s ? (o$1 = t$1.width, a = t$1.width * u, h$1 = (1 - s / u) / 2) : (o$1 = t$1.height / u, a = t$1.height, c = (1 - u / s) / 2), t$1.width = o$1, t$1.height = a, {
			top: h$1,
			left: c,
			right: c,
			bottom: h$1
		};
	}(g, r, i), m = function(t$1, e$1, n$1, r$1) {
		var i$1 = t$1.width, o$1 = t$1.height, a = r$1 ? -1 : 1, u = Math.cos(t$1.rotation), s = Math.sin(t$1.rotation), c = t$1.xCenter, h$1 = t$1.yCenter, l = 1 / e$1, f$1 = 1 / n$1, d = new Array(16);
		return d[0] = i$1 * u * a * l, d[1] = -o$1 * s * l, d[2] = 0, d[3] = (-.5 * i$1 * u * a + .5 * o$1 * s + c) * l, d[4] = i$1 * s * a * f$1, d[5] = o$1 * u * f$1, d[6] = 0, d[7] = (-.5 * o$1 * u - .5 * i$1 * s * a + h$1) * f$1, d[8] = 0, d[9] = 0, d[10] = i$1 * l, d[11] = 0, d[12] = 0, d[13] = 0, d[14] = 0, d[15] = 1, function(t$2) {
			if (16 !== t$2.length) throw new Error("Array length must be 16 but got ".concat(t$2.length));
			return [
				[
					t$2[0],
					t$2[1],
					t$2[2],
					t$2[3]
				],
				[
					t$2[4],
					t$2[5],
					t$2[6],
					t$2[7]
				],
				[
					t$2[8],
					t$2[9],
					t$2[10],
					t$2[11]
				],
				[
					t$2[12],
					t$2[13],
					t$2[14],
					t$2[15]
				]
			];
		}(d);
	}(g, f.width, f.height, !1);
	return {
		imageTensor: tidy((function() {
			var e$1 = X(t), n$1 = tensor2d(function(t$1, e$2, n$2) {
				return Y(n$2, "inputResolution"), [
					1 / n$2.width * t$1[0][0] * e$2.width,
					1 / n$2.height * t$1[0][1] * e$2.width,
					t$1[0][3] * e$2.width,
					1 / n$2.width * t$1[1][0] * e$2.height,
					1 / n$2.height * t$1[1][1] * e$2.height,
					t$1[1][3] * e$2.height,
					0,
					0
				];
			}(m, f, r), [1, 8]), i$1 = "zero" === o ? "constant" : "nearest", g$1 = image.transform(expandDims(cast(e$1, "float32")), n$1, "bilinear", i$1, 0, [r.height, r.width]);
			return null != h ? function(t$1, e$2) {
				var n$2 = function(t$2, e$3, n$3, r$1) {
					var i$2 = (r$1 - n$3) / 255;
					return {
						scale: i$2,
						offset: n$3 - 0 * i$2
					};
				}(0, 0, e$2[0], e$2[1]);
				return tidy((function() {
					return add(mul(t$1, n$2.scale), n$2.offset);
				}));
			}(g$1, h) : g$1;
		})),
		padding: v,
		transformationMatrix: m
	};
}
function q(t) {
	t.reduceBoxesInLowestLayer ??= !1, t.interpolatedScaleAspectRatio ??= 1, t.fixedAnchorSize ??= !1;
	for (var e = [], n = 0; n < t.numLayers;) {
		for (var r = [], i = [], o = [], a = [], u = n; u < t.strides.length && t.strides[u] === t.strides[n];) {
			var s = $(t.minScale, t.maxScale, u, t.strides.length);
			if (0 === u && t.reduceBoxesInLowestLayer) o.push(1), o.push(2), o.push(.5), a.push(.1), a.push(s), a.push(s);
			else {
				for (var c = 0; c < t.aspectRatios.length; ++c) o.push(t.aspectRatios[c]), a.push(s);
				if (t.interpolatedScaleAspectRatio > 0) {
					var h = u === t.strides.length - 1 ? 1 : $(t.minScale, t.maxScale, u + 1, t.strides.length);
					a.push(Math.sqrt(s * h)), o.push(t.interpolatedScaleAspectRatio);
				}
			}
			u++;
		}
		for (var l = 0; l < o.length; ++l) {
			var f = Math.sqrt(o[l]);
			r.push(a[l] / f), i.push(a[l] * f);
		}
		var d = 0, p = 0;
		if (t.featureMapHeight.length > 0) d = t.featureMapHeight[n], p = t.featureMapWidth[n];
		else {
			var g = t.strides[n];
			d = Math.ceil(t.inputSizeHeight / g), p = Math.ceil(t.inputSizeWidth / g);
		}
		for (var v = 0; v < d; ++v) for (var m = 0; m < p; ++m) for (var y = 0; y < r.length; ++y) {
			var w = {
				xCenter: (m + t.anchorOffsetX) / p,
				yCenter: (v + t.anchorOffsetY) / d,
				width: 0,
				height: 0
			};
			t.fixedAnchorSize ? (w.width = 1, w.height = 1) : (w.width = i[y], w.height = r[y]), e.push(w);
		}
		n = u;
	}
	return e;
}
function $(t, e, n, r) {
	return 1 === r ? .5 * (t + e) : t + (e - t) * n / (r - 1);
}
function Z(t, e) {
	var n = e[0], r = e[1];
	return [n * t[0] + r * t[1] + t[3], n * t[4] + r * t[5] + t[7]];
}
function Q(t, e, n, r) {
	return U(this, void 0, void 0, (function() {
		var r$1, s, c, h, l;
		return N(this, (function(f) {
			switch (f.label) {
				case 0: return t.sort((function(t$1, e$1) {
					return Math.max.apply(Math, e$1.score) - Math.max.apply(Math, t$1.score);
				})), r$1 = tensor2d(t.map((function(t$1) {
					return [
						t$1.locationData.relativeBoundingBox.yMin,
						t$1.locationData.relativeBoundingBox.xMin,
						t$1.locationData.relativeBoundingBox.yMax,
						t$1.locationData.relativeBoundingBox.xMax
					];
				}))), s = tensor1d(t.map((function(t$1) {
					return t$1.score[0];
				}))), [4, image.nonMaxSuppressionAsync(r$1, s, e, n)];
				case 1: return [4, (c = f.sent()).array()];
				case 2: return h = f.sent(), l = t.filter((function(t$1, e$1) {
					return h.indexOf(e$1) > -1;
				})), dispose([
					r$1,
					s,
					c
				]), [2, l];
			}
		}));
	}));
}
function tt(t, e, n) {
	return U(this, void 0, void 0, (function() {
		var r, i, a, u, c;
		return N(this, (function(l) {
			switch (l.label) {
				case 0: return r = t[0], i = t[1], a = function(t$1, e$1, n$1) {
					return tidy((function() {
						var r$1, i$1, o, a$1;
						n$1.reverseOutputOrder ? (i$1 = squeeze(slice(t$1, [0, n$1.boxCoordOffset + 0], [-1, 1])), r$1 = squeeze(slice(t$1, [0, n$1.boxCoordOffset + 1], [-1, 1])), a$1 = squeeze(slice(t$1, [0, n$1.boxCoordOffset + 2], [-1, 1])), o = squeeze(slice(t$1, [0, n$1.boxCoordOffset + 3], [-1, 1]))) : (r$1 = squeeze(slice(t$1, [0, n$1.boxCoordOffset + 0], [-1, 1])), i$1 = squeeze(slice(t$1, [0, n$1.boxCoordOffset + 1], [-1, 1])), o = squeeze(slice(t$1, [0, n$1.boxCoordOffset + 2], [-1, 1])), a$1 = squeeze(slice(t$1, [0, n$1.boxCoordOffset + 3], [-1, 1]))), i$1 = add(mul(div(i$1, n$1.xScale), e$1.w), e$1.x), r$1 = add(mul(div(r$1, n$1.yScale), e$1.h), e$1.y), n$1.applyExponentialOnBoxSize ? (o = mul(exp(div(o, n$1.hScale)), e$1.h), a$1 = mul(exp(div(a$1, n$1.wScale)), e$1.w)) : (o = mul(div(o, n$1.hScale), e$1.h), a$1 = mul(div(a$1, n$1.wScale), e$1.h));
						var u$1 = sub(r$1, div(o, 2)), s = sub(i$1, div(a$1, 2)), c$1 = add(r$1, div(o, 2)), l$1 = add(i$1, div(a$1, 2)), b = concat([
							reshape(u$1, [n$1.numBoxes, 1]),
							reshape(s, [n$1.numBoxes, 1]),
							reshape(c$1, [n$1.numBoxes, 1]),
							reshape(l$1, [n$1.numBoxes, 1])
						], 1);
						if (n$1.numKeypoints) for (var x = 0; x < n$1.numKeypoints; ++x) {
							var M = n$1.keypointCoordOffset + x * n$1.numValuesPerKeypoint, A = void 0, T = void 0;
							n$1.reverseOutputOrder ? (A = squeeze(slice(t$1, [0, M], [-1, 1])), T = squeeze(slice(t$1, [0, M + 1], [-1, 1]))) : (T = squeeze(slice(t$1, [0, M], [-1, 1])), A = squeeze(slice(t$1, [0, M + 1], [-1, 1])));
							var E$1 = add(mul(div(A, n$1.xScale), e$1.w), e$1.x), S$1 = add(mul(div(T, n$1.yScale), e$1.h), e$1.y);
							b = concat([
								b,
								reshape(E$1, [n$1.numBoxes, 1]),
								reshape(S$1, [n$1.numBoxes, 1])
							], 1);
						}
						return b;
					}));
				}(i, e, n), u = tidy((function() {
					var t$1 = r;
					return n.sigmoidScore ? (null != n.scoreClippingThresh && (t$1 = clipByValue(r, -n.scoreClippingThresh, n.scoreClippingThresh)), t$1 = sigmoid(t$1)) : t$1;
				})), [4, et(a, u, n)];
				case 1: return c = l.sent(), dispose([a, u]), [2, c];
			}
		}));
	}));
}
function et(t, e, n) {
	return U(this, void 0, void 0, (function() {
		var r, i, o, a, u, s, c, h, l, f, d, p;
		return N(this, (function(g) {
			switch (g.label) {
				case 0: return r = [], [4, t.data()];
				case 1: return i = g.sent(), [4, e.data()];
				case 2:
					for (o = g.sent(), a = 0; a < n.numBoxes; ++a) if (!(null != n.minScoreThresh && o[a] < n.minScoreThresh || (u = a * n.numCoords, s = nt(i[u + 0], i[u + 1], i[u + 2], i[u + 3], o[a], n.flipVertically, a), (c = s.locationData.relativeBoundingBox).width < 0 || c.height < 0))) {
						if (n.numKeypoints > 0) for ((h = s.locationData).relativeKeypoints = [], l = n.numKeypoints * n.numValuesPerKeypoint, f = 0; f < l; f += n.numValuesPerKeypoint) d = u + n.keypointCoordOffset + f, p = {
							x: i[d + 0],
							y: n.flipVertically ? 1 - i[d + 1] : i[d + 1]
						}, h.relativeKeypoints.push(p);
						r.push(s);
					}
					return [2, r];
			}
		}));
	}));
}
function nt(t, e, n, r, i, o, a) {
	return {
		score: [i],
		ind: a,
		locationData: { relativeBoundingBox: {
			xMin: e,
			yMin: o ? 1 - n : t,
			xMax: r,
			yMax: o ? 1 - t : n,
			width: r - e,
			height: n - t
		} }
	};
}
var rt, it = {
	reduceBoxesInLowestLayer: !1,
	interpolatedScaleAspectRatio: 1,
	featureMapHeight: [],
	featureMapWidth: [],
	numLayers: 4,
	minScale: .1484375,
	maxScale: .75,
	inputSizeHeight: 128,
	inputSizeWidth: 128,
	anchorOffsetX: .5,
	anchorOffsetY: .5,
	strides: [
		8,
		16,
		16,
		16
	],
	aspectRatios: [1],
	fixedAnchorSize: !0
}, ot = {
	reduceBoxesInLowestLayer: !1,
	interpolatedScaleAspectRatio: 0,
	featureMapHeight: [],
	featureMapWidth: [],
	numLayers: 1,
	minScale: .1484375,
	maxScale: .75,
	inputSizeHeight: 192,
	inputSizeWidth: 192,
	anchorOffsetX: .5,
	anchorOffsetY: .5,
	strides: [4],
	aspectRatios: [1],
	fixedAnchorSize: !0
}, at = {
	runtime: "tfjs",
	modelType: "short",
	maxFaces: 1,
	detectorModelUrl: "https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"
}, ut = {
	applyExponentialOnBoxSize: !1,
	flipVertically: !1,
	ignoreClasses: [],
	numClasses: 1,
	numBoxes: 896,
	numCoords: 16,
	boxCoordOffset: 0,
	keypointCoordOffset: 4,
	numKeypoints: 6,
	numValuesPerKeypoint: 2,
	sigmoidScore: !0,
	scoreClippingThresh: 100,
	reverseOutputOrder: !0,
	xScale: 128,
	yScale: 128,
	hScale: 128,
	wScale: 128,
	minScoreThresh: .5
}, st = {
	applyExponentialOnBoxSize: !1,
	flipVertically: !1,
	ignoreClasses: [],
	numClasses: 1,
	numBoxes: 2304,
	numCoords: 16,
	boxCoordOffset: 0,
	keypointCoordOffset: 4,
	numKeypoints: 6,
	numValuesPerKeypoint: 2,
	sigmoidScore: !0,
	scoreClippingThresh: 100,
	reverseOutputOrder: !0,
	xScale: 192,
	yScale: 192,
	hScale: 192,
	wScale: 192,
	minScoreThresh: .6
}, ct = {
	outputTensorSize: {
		width: 128,
		height: 128
	},
	keepAspectRatio: !0,
	outputTensorFloatRange: [-1, 1],
	borderMode: "zero"
}, ht = {
	outputTensorSize: {
		width: 192,
		height: 192
	},
	keepAspectRatio: !0,
	outputTensorFloatRange: [-1, 1],
	borderMode: "zero"
}, lt = function() {
	function t(t$1, e, n) {
		this.detectorModel = e, this.maxFaces = n, "full" === t$1 ? (this.imageToTensorConfig = ht, this.tensorsToDetectionConfig = st, this.anchors = q(ot)) : (this.imageToTensorConfig = ct, this.tensorsToDetectionConfig = ut, this.anchors = q(it));
		var r = tensor1d(this.anchors.map((function(t$2) {
			return t$2.width;
		}))), o = tensor1d(this.anchors.map((function(t$2) {
			return t$2.height;
		}))), a = tensor1d(this.anchors.map((function(t$2) {
			return t$2.xCenter;
		}))), u = tensor1d(this.anchors.map((function(t$2) {
			return t$2.yCenter;
		})));
		this.anchorTensor = {
			x: a,
			y: u,
			w: r,
			h: o
		};
	}
	return t.prototype.dispose = function() {
		this.detectorModel.dispose(), dispose([
			this.anchorTensor.x,
			this.anchorTensor.y,
			this.anchorTensor.w,
			this.anchorTensor.h
		]);
	}, t.prototype.reset = function() {}, t.prototype.detectFaces = function(t$1, e) {
		return void 0 === e && (e = !1), U(this, void 0, void 0, (function() {
			var n, r, i, a, d, p, g, v, m, y, w;
			return N(this, (function(b) {
				switch (b.label) {
					case 0: return null == t$1 ? (this.reset(), [2, []]) : (n = tidy((function() {
						var n$1 = cast(X(t$1), "float32");
						return e && (n$1 = squeeze(image.flipLeftRight(expandDims(n$1, 0)), [0])), n$1;
					})), r = J(n, this.imageToTensorConfig), i = r.imageTensor, a = r.transformationMatrix, d = this.detectorModel.execute(i, "Identity:0"), p = function(t$2) {
						return tidy((function() {
							var e$1 = function(t$3) {
								return tidy((function() {
									return [slice(t$3, [
										0,
										0,
										0
									], [
										1,
										-1,
										1
									]), slice(t$3, [
										0,
										0,
										1
									], [
										1,
										-1,
										-1
									])];
								}));
							}(t$2), n$1 = e$1[0], r$1 = e$1[1];
							return {
								boxes: squeeze(r$1),
								logits: squeeze(n$1)
							};
						}));
					}(d), g = p.boxes, [4, tt([v = p.logits, g], this.anchorTensor, this.tensorsToDetectionConfig)]);
					case 1: return 0 === (m = b.sent()).length ? (dispose([
						n,
						i,
						d,
						v,
						g
					]), [2, m]) : [4, Q(m, this.maxFaces, .3)];
					case 2: return y = b.sent(), w = function(t$2, e$1) {
						void 0 === t$2 && (t$2 = []);
						var n$1, r$1 = (n$1 = e$1, [].concat.apply([], n$1));
						return t$2.forEach((function(t$3) {
							var e$2 = t$3.locationData;
							e$2.relativeKeypoints.forEach((function(t$4) {
								var e$3 = Z(r$1, [t$4.x, t$4.y]), n$3 = e$3[0], i$2 = e$3[1];
								t$4.x = n$3, t$4.y = i$2;
							}));
							var n$2 = e$2.relativeBoundingBox, i$1 = Number.MAX_VALUE, o = Number.MAX_VALUE, a$1 = Number.MIN_VALUE, u = Number.MIN_VALUE;
							[
								[n$2.xMin, n$2.yMin],
								[n$2.xMin + n$2.width, n$2.yMin],
								[n$2.xMin + n$2.width, n$2.yMin + n$2.height],
								[n$2.xMin, n$2.yMin + n$2.height]
							].forEach((function(t$4) {
								var e$3 = Z(r$1, t$4), n$3 = e$3[0], s = e$3[1];
								i$1 = Math.min(i$1, n$3), a$1 = Math.max(a$1, n$3), o = Math.min(o, s), u = Math.max(u, s);
							})), e$2.relativeBoundingBox = {
								xMin: i$1,
								xMax: a$1,
								yMin: o,
								yMax: u,
								width: a$1 - i$1,
								height: u - o
							};
						})), t$2;
					}(y, a), dispose([
						n,
						i,
						d,
						v,
						g
					]), [2, w];
				}
			}));
		}));
	}, t.prototype.estimateFaces = function(t$1, e) {
		return U(this, void 0, void 0, (function() {
			var n, r;
			return N(this, (function(i) {
				return n = G(t$1), r = !!e && e.flipHorizontal, [2, this.detectFaces(t$1, r).then((function(t$2) {
					return t$2.map((function(t$3) {
						for (var e$1 = t$3.locationData.relativeKeypoints.map((function(t$4, e$2) {
							return z(z({}, t$4), {
								x: t$4.x * n.width,
								y: t$4.y * n.height,
								name: V[e$2]
							});
						})), r$1 = t$3.locationData.relativeBoundingBox, i$1 = 0, o = [
							"width",
							"xMax",
							"xMin"
						]; i$1 < o.length; i$1++) r$1[o[i$1]] *= n.width;
						for (var a = 0, u = [
							"height",
							"yMax",
							"yMin"
						]; a < u.length; a++) r$1[u[a]] *= n.height;
						return {
							keypoints: e$1,
							box: r$1
						};
					}));
				}))];
			}));
		}));
	}, t;
}();
function ft(t) {
	return U(this, void 0, void 0, (function() {
		var e, n, r;
		return N(this, (function(i) {
			switch (i.label) {
				case 0: return e = function(t$1) {
					if (null == t$1) return z({}, at);
					var e$1 = z({}, t$1);
					return e$1.modelType ??= at.modelType, e$1.maxFaces ??= at.maxFaces, e$1.detectorModelUrl ?? ("full" === e$1.modelType ? e$1.detectorModelUrl = "https://tfhub.dev/mediapipe/tfjs-model/face_detection/full/1" : e$1.detectorModelUrl = "https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"), e$1;
				}(t), n = "string" == typeof e.detectorModelUrl && e.detectorModelUrl.indexOf("https://tfhub.dev") > -1, [4, loadGraphModel(e.detectorModelUrl, { fromTFHub: n })];
				case 1: return r = i.sent(), [2, new lt(e.modelType, r, e.maxFaces)];
			}
		}));
	}));
}
function dt(t, e) {
	return U(this, void 0, void 0, (function() {
		var n, r;
		return N(this, (function(i) {
			if (t === rt.MediaPipeFaceDetector) {
				if (r = void 0, null != (n = e)) {
					if ("tfjs" === n.runtime) return [2, ft(n)];
					if ("mediapipe" === n.runtime) return [2, W(n)];
					r = n.runtime;
				}
				throw new Error("Expect modelConfig.runtime to be either 'tfjs' " + "or 'mediapipe', but got ".concat(r));
			}
			throw new Error("".concat(t, " is not a supported model name."));
		}));
	}));
}
function pt(t) {
	return t.width * t.height;
}
function gt(t) {
	var e = t.xCenter - t.width / 2, n = e + t.width, r = t.yCenter - t.height / 2;
	return {
		xMin: e,
		xMax: n,
		yMin: r,
		yMax: r + t.height,
		width: t.width,
		height: t.height
	};
}
function vt(t, e) {
	var n = gt(t), r = gt(e);
	if (!function(t$1, e$1) {
		return !(t$1.xMax < e$1.xMin || e$1.xMax < t$1.xMin || t$1.yMax < e$1.yMin || e$1.yMax < t$1.yMin);
	}(n, r)) return 0;
	var i = pt(function(t$1, e$1) {
		var n$1 = Math.max(t$1.xMin, e$1.xMin), r$1 = Math.min(t$1.xMax, e$1.xMax), i$1 = Math.max(t$1.yMin, e$1.yMin), o$1 = Math.min(t$1.yMax, e$1.yMax);
		return {
			xMin: n$1,
			xMax: r$1,
			yMin: i$1,
			yMax: o$1,
			width: Math.max(r$1 - n$1, 0),
			height: Math.max(o$1 - i$1, 0)
		};
	}(n, r)), o = pt(n) + pt(r) - i;
	return o > 0 ? i / o : 0;
}
function mt(t, e, n, r) {
	var i = t.width, o = t.height, a = r ? -1 : 1, u = Math.cos(t.rotation), s = Math.sin(t.rotation), c = t.xCenter, h = t.yCenter, l = 1 / e, f = 1 / n, d = new Array(16);
	return d[0] = i * u * a * l, d[1] = -o * s * l, d[2] = 0, d[3] = (-.5 * i * u * a + .5 * o * s + c) * l, d[4] = i * s * a * f, d[5] = o * u * f, d[6] = 0, d[7] = (-.5 * o * u - .5 * i * s * a + h) * f, d[8] = 0, d[9] = 0, d[10] = i * l, d[11] = 0, d[12] = 0, d[13] = 0, d[14] = 0, d[15] = 1, function(t$1) {
		if (16 !== t$1.length) throw new Error("Array length must be 16 but got " + t$1.length);
		return [
			[
				t$1[0],
				t$1[1],
				t$1[2],
				t$1[3]
			],
			[
				t$1[4],
				t$1[5],
				t$1[6],
				t$1[7]
			],
			[
				t$1[8],
				t$1[9],
				t$1[10],
				t$1[11]
			],
			[
				t$1[12],
				t$1[13],
				t$1[14],
				t$1[15]
			]
		];
	}(d);
}
function yt(t) {
	return t instanceof Tensor ? {
		height: t.shape[0],
		width: t.shape[1]
	} : {
		height: t.height,
		width: t.width
	};
}
function wt(t) {
	return t - 2 * Math.PI * Math.floor((t + Math.PI) / (2 * Math.PI));
}
function bt(t) {
	return t instanceof Tensor ? t : fromPixels(t);
}
function xt(t, n) {
	assert(0 !== t.width, (function() {
		return n + " width cannot be 0.";
	})), assert(0 !== t.height, (function() {
		return n + " height cannot be 0.";
	}));
}
function Mt(t, n) {
	var r = function(t$1, e, n$1, r$1) {
		var i = e - t$1, o = r$1 - n$1;
		if (0 === i) throw new Error("Original min and max are both " + t$1 + ", range cannot be 0.");
		var a = o / i;
		return {
			scale: a,
			offset: n$1 - t$1 * a
		};
	}(0, 255, n[0], n[1]);
	return tidy((function() {
		return add(mul(t, r.scale), r.offset);
	}));
}
function At(t, n, r) {
	var i = n.outputTensorSize, o = n.keepAspectRatio, a = n.borderMode, u = n.outputTensorFloatRange, s = yt(t), c = function(t$1, e) {
		return e ? {
			xCenter: e.xCenter * t$1.width,
			yCenter: e.yCenter * t$1.height,
			width: e.width * t$1.width,
			height: e.height * t$1.height,
			rotation: e.rotation
		} : {
			xCenter: .5 * t$1.width,
			yCenter: .5 * t$1.height,
			width: t$1.width,
			height: t$1.height,
			rotation: 0
		};
	}(s, r), h = function(t$1, e, n$1) {
		if (void 0 === n$1 && (n$1 = !1), !n$1) return {
			top: 0,
			left: 0,
			right: 0,
			bottom: 0
		};
		var r$1 = e.height, i$1 = e.width;
		xt(e, "targetSize"), xt(t$1, "roi");
		var o$1, a$1, u$1 = r$1 / i$1, s$1 = t$1.height / t$1.width, c$1 = 0, h$1 = 0;
		return u$1 > s$1 ? (o$1 = t$1.width, a$1 = t$1.width * u$1, h$1 = (1 - s$1 / u$1) / 2) : (o$1 = t$1.height / u$1, a$1 = t$1.height, c$1 = (1 - u$1 / s$1) / 2), t$1.width = o$1, t$1.height = a$1, {
			top: h$1,
			left: c$1,
			right: c$1,
			bottom: h$1
		};
	}(c, i, o), l = mt(c, s.width, s.height, !1);
	return {
		imageTensor: tidy((function() {
			var n$1 = bt(t), r$1 = tensor2d(function(t$1, e, n$2) {
				return xt(n$2, "inputResolution"), [
					1 / n$2.width * t$1[0][0] * e.width,
					1 / n$2.height * t$1[0][1] * e.width,
					t$1[0][3] * e.width,
					1 / n$2.width * t$1[1][0] * e.height,
					1 / n$2.height * t$1[1][1] * e.height,
					t$1[1][3] * e.height,
					0,
					0
				];
			}(l, s, i), [1, 8]), o$1 = "zero" === a ? "constant" : "nearest", c$1 = image.transform(expandDims(cast(n$1, "float32")), r$1, "bilinear", o$1, 0, [i.height, i.width]);
			return null != u ? Mt(c$1, u) : c$1;
		})),
		padding: h,
		transformationMatrix: l
	};
}
function Tt(t) {
	return {
		xCenter: t.xMin + t.width / 2,
		yCenter: t.yMin + t.height / 2,
		width: t.width,
		height: t.height
	};
}
function Et(t) {
	var e = t.relativeKeypoints;
	if (e.length <= 1) throw new Error("2 or more keypoints required to calculate a rect.");
	var n = Number.MAX_VALUE, r = Number.MAX_VALUE, i = Number.MIN_VALUE, o = Number.MIN_VALUE;
	return e.forEach((function(t$1) {
		n = Math.min(n, t$1.x), i = Math.max(i, t$1.x), r = Math.min(r, t$1.y), o = Math.max(o, t$1.y);
	})), {
		xCenter: (n + i) / 2,
		yCenter: (r + o) / 2,
		width: i - n,
		height: o - r
	};
}
function St(t, e, n, r, i) {
	var o = "rect" === n ? function(t$1, e$1, n$1) {
		var r$1, i$1 = t$1.locationData;
		if ("boundingbox" === e$1) r$1 = Tt(i$1.boundingBox);
		else {
			r$1 = Et(i$1);
			var o$1 = n$1.width, a = n$1.height;
			r$1.xCenter = Math.round(r$1.xCenter * o$1), r$1.yCenter = Math.round(r$1.yCenter * a), r$1.width = Math.round(r$1.width * o$1), r$1.height = Math.round(r$1.height * a);
		}
		return r$1;
	}(t, e, r) : function(t$1, e$1) {
		var n$1 = t$1.locationData;
		return "boundingbox" === e$1 ? Tt(n$1.relativeBoundingBox) : Et(n$1);
	}(t, e);
	return i && (o.rotation = function(t$1, e$1, n$1) {
		var r$1, i$1 = t$1.locationData, o$1 = n$1.rotationVectorStartKeypointIndex, a = n$1.rotationVectorEndKeypointIndex;
		r$1 = n$1.rotationVectorTargetAngle ? n$1.rotationVectorTargetAngle : Math.PI * n$1.rotationVectorTargetAngleDegree / 180;
		var u = i$1.relativeKeypoints[o$1].x * e$1.width, s = i$1.relativeKeypoints[o$1].y * e$1.height, c = i$1.relativeKeypoints[a].x * e$1.width, h = i$1.relativeKeypoints[a].y * e$1.height;
		return wt(r$1 - Math.atan2(-(h - s), c - u));
	}(t, r, i)), o;
}
function Ft(t, e, n) {
	for (var r = 0; r < e.length; ++r) {
		var i = e[r], o = n[t[r]];
		o.x = i.x, o.y = i.y;
	}
}
function Ct(t, e, n, r) {
	if ("string" == typeof e) {
		if ("copy" === e) for (var i = 0; i < n.length; ++i) r[t[i]].z = n[i].z;
	} else {
		var o = function(t$1, e$1) {
			for (var n$1 = 0, r$1 = 0; r$1 < e$1.length; ++r$1) n$1 += t$1[e$1[r$1]].z;
			return n$1 / e$1.length;
		}(r, e);
		for (i = 0; i < t.length; ++i) r[t[i]].z = o;
	}
}
function Ot(t, e) {
	for (var n = function(t$1) {
		var e$1 = [].concat.apply([], t$1.map((function(t$2) {
			return t$2.indexesMapping;
		})));
		if (0 === e$1.length) throw new Error("There should be at least one landmark in indexes mapping");
		var n$1 = e$1[0], r$1 = e$1[0], i$1 = new Set(e$1);
		i$1.forEach((function(t$2) {
			n$1 = Math.min(n$1, t$2), r$1 = Math.max(r$1, t$2);
		}));
		var o$1 = i$1.size;
		if (0 !== n$1) throw new Error("Indexes are expected to start with 0 instead of " + n$1);
		if (r$1 + 1 !== o$1) throw new Error("Indexes should have no gaps but " + (r$1 - o$1 + 1) + " indexes are missing");
		return o$1;
	}(e), r = new Array(n).fill(null).map(Object), i = 0; i < t.length; ++i) {
		var o = t[i], a = e[i];
		if (o.length !== a.indexesMapping.length) throw new Error("There are " + o.length + " refinement landmarks while mapping has " + a.indexesMapping.length);
		Ft(a.indexesMapping, o, r), Ct(a.indexesMapping, a.zRefinement, o, r);
	}
	return r;
}
function _t(t, e) {
	return t.map((function(t$1) {
		var n = E(E({}, t$1), {
			x: t$1.x * e.width,
			y: t$1.y * e.height
		});
		return null != t$1.z && (n.z = t$1.z * e.width), n;
	}));
}
function jt(t, e) {
	return "none" === t ? e : function(t$1) {
		return 1 / (1 + Math.exp(-t$1));
	}(e);
}
function kt(t, e, n, r) {
	return S(this, void 0, void 0, (function() {
		var i, o, a, u, s, c, h, l;
		return F(this, (function(f) {
			switch (f.label) {
				case 0: return n = n || e.flipHorizontally || !1, r = r || e.flipVertically || !1, i = t.size, o = i / e.numLandmarks, [4, t.data()];
				case 1:
					for (a = f.sent(), u = [], s = 0; s < e.numLandmarks; ++s) c = s * o, (l = {
						x: 0,
						y: 0
					}).x = n ? e.inputImageWidth - a[c] : a[c], o > 1 && (l.y = r ? e.inputImageHeight - a[c + 1] : a[c + 1]), o > 2 && (l.z = a[c + 2]), o > 3 && (l.score = jt(e.visibilityActivation, a[c + 3])), u.push(l);
					for (h = 0; h < u.length; ++h) (l = u[h]).x = l.x / e.inputImageWidth, l.y = l.y / e.inputImageHeight, l.z = l.z / e.inputImageWidth / (e.normalizeZ || 1);
					return [2, u];
			}
		}));
	}));
}
function Rt(t, e, n) {
	var r = t.width, i = t.height, o = t.rotation;
	if (null == n.rotation && null == n.rotationDegree || (o = function(t$1, e$1) {
		null != e$1.rotation ? t$1 += e$1.rotation : null != e$1.rotationDegree && (t$1 += Math.PI * e$1.rotationDegree / 180);
		return wt(t$1);
	}(o, n)), 0 === o) t.xCenter = t.xCenter + r * n.shiftX, t.yCenter = t.yCenter + i * n.shiftY;
	else {
		var a = (e.width * r * n.shiftX * Math.cos(o) - e.height * i * n.shiftY * Math.sin(o)) / e.width, u = (e.width * r * n.shiftX * Math.sin(o) + e.height * i * n.shiftY * Math.cos(o)) / e.height;
		t.xCenter = t.xCenter + a, t.yCenter = t.yCenter + u;
	}
	if (n.squareLong) {
		var s = Math.max(r * e.width, i * e.height);
		r = s / e.width, i = s / e.height;
	} else if (n.squareShort) {
		var c = Math.min(r * e.width, i * e.height);
		r = c / e.width, i = c / e.height;
	}
	return t.width = r * n.scaleX, t.height = i * n.scaleY, t;
}
(rt || (rt = {})).MediaPipeFaceDetector = "MediaPipeFaceDetector";
var It = {
	runtime: "tfjs",
	maxFaces: 1,
	refineLandmarks: !1,
	landmarkModelUrl: "https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"
}, Lt = {
	flipHorizontal: !1,
	staticImageMode: !1
}, Bt = {
	shiftX: 0,
	shiftY: 0,
	scaleX: 1.5,
	scaleY: 1.5,
	squareLong: !0
}, Dt = {
	outputTensorSize: {
		width: 192,
		height: 192
	},
	outputTensorFloatRange: [0, 1],
	borderMode: "replicate"
}, Pt = {
	numLandmarks: 468,
	inputImageWidth: 192,
	inputImageHeight: 192,
	visibilityActivation: "none",
	flipHorizontally: !1,
	flipVertically: !1
}, zt = {
	numLandmarks: 80,
	inputImageWidth: 192,
	inputImageHeight: 192,
	visibilityActivation: "none",
	flipHorizontally: !1,
	flipVertically: !1
}, Ut = {
	numLandmarks: 71,
	inputImageWidth: 192,
	inputImageHeight: 192,
	visibilityActivation: "none",
	flipHorizontally: !1,
	flipVertically: !1
}, Nt = {
	numLandmarks: 5,
	inputImageWidth: 192,
	inputImageHeight: 192,
	visibilityActivation: "none",
	flipHorizontally: !1,
	flipVertically: !1
}, Vt = {
	indexesMapping: Array.from(Array(468).keys()),
	zRefinement: "copy"
}, Ht = {
	indexesMapping: [
		61,
		146,
		91,
		181,
		84,
		17,
		314,
		405,
		321,
		375,
		291,
		185,
		40,
		39,
		37,
		0,
		267,
		269,
		270,
		409,
		78,
		95,
		88,
		178,
		87,
		14,
		317,
		402,
		318,
		324,
		308,
		191,
		80,
		81,
		82,
		13,
		312,
		311,
		310,
		415,
		76,
		77,
		90,
		180,
		85,
		16,
		315,
		404,
		320,
		307,
		306,
		184,
		74,
		73,
		72,
		11,
		302,
		303,
		304,
		408,
		62,
		96,
		89,
		179,
		86,
		15,
		316,
		403,
		319,
		325,
		292,
		183,
		42,
		41,
		38,
		12,
		268,
		271,
		272,
		407
	],
	zRefinement: "none"
}, Kt = {
	indexesMapping: [
		33,
		7,
		163,
		144,
		145,
		153,
		154,
		155,
		133,
		246,
		161,
		160,
		159,
		158,
		157,
		173,
		130,
		25,
		110,
		24,
		23,
		22,
		26,
		112,
		243,
		247,
		30,
		29,
		27,
		28,
		56,
		190,
		226,
		31,
		228,
		229,
		230,
		231,
		232,
		233,
		244,
		113,
		225,
		224,
		223,
		222,
		221,
		189,
		35,
		124,
		46,
		53,
		52,
		65,
		143,
		111,
		117,
		118,
		119,
		120,
		121,
		128,
		245,
		156,
		70,
		63,
		105,
		66,
		107,
		55,
		193
	],
	zRefinement: "none"
}, Wt = {
	indexesMapping: [
		263,
		249,
		390,
		373,
		374,
		380,
		381,
		382,
		362,
		466,
		388,
		387,
		386,
		385,
		384,
		398,
		359,
		255,
		339,
		254,
		253,
		252,
		256,
		341,
		463,
		467,
		260,
		259,
		257,
		258,
		286,
		414,
		446,
		261,
		448,
		449,
		450,
		451,
		452,
		453,
		464,
		342,
		445,
		444,
		443,
		442,
		441,
		413,
		265,
		353,
		276,
		283,
		282,
		295,
		372,
		340,
		346,
		347,
		348,
		349,
		350,
		357,
		465,
		383,
		300,
		293,
		334,
		296,
		336,
		285,
		417
	],
	zRefinement: "none"
}, Gt = {
	indexesMapping: [
		468,
		469,
		470,
		471,
		472
	],
	zRefinement: [
		33,
		7,
		163,
		144,
		145,
		153,
		154,
		155,
		133,
		246,
		161,
		160,
		159,
		158,
		157,
		173
	]
}, Xt = {
	indexesMapping: [
		473,
		474,
		475,
		476,
		477
	],
	zRefinement: [
		263,
		249,
		390,
		373,
		374,
		380,
		381,
		382,
		362,
		466,
		388,
		387,
		386,
		385,
		384,
		398
	]
};
var Yt, Jt = function() {
	function t(t$1, e, n, r) {
		this.detector = t$1, this.landmarkModel = e, this.maxFaces = n, this.withAttention = r, this.prevFaceRectsFromLandmarks = null;
	}
	return t.prototype.estimateFaces = function(t$1, n) {
		return S(this, void 0, void 0, (function() {
			var r, i, o, a, u, s, c, h, l, f, d, p, g, v = this;
			return F(this, (function(m) {
				switch (m.label) {
					case 0: return r = function(t$2) {
						if (null == t$2) return E({}, Lt);
						var e = E({}, t$2);
						return e.flipHorizontal ??= Lt.flipHorizontal, e.staticImageMode ??= Lt.staticImageMode, e;
					}(n), null == t$1 ? (this.reset(), [2, []]) : (i = yt(t$1), o = tidy((function() {
						var n$1 = cast(bt(t$1), "float32");
						if (r.flipHorizontal) n$1 = squeeze(image.flipLeftRight(expandDims(n$1, 0)), [0]);
						return n$1;
					})), a = this.prevFaceRectsFromLandmarks, r.staticImageMode || null == a || a.length < this.maxFaces ? [4, this.detector.detectFaces(o, !1)] : [3, 2]);
					case 1: return 0 === (s = m.sent()).length ? (this.reset(), o.dispose(), [2, []]) : (u = s.map((function(t$2) {
						return v.faceDetectionFrontDetectionToRoi(t$2, i);
					})), [3, 3]);
					case 2: u = [], m.label = 3;
					case 3: return y = .5, w = [], [u, a || []].forEach((function(t$2) {
						return t$2.forEach((function(t$3) {
							(w = w.filter((function(e) {
								return vt(t$3, e) <= y;
							}))).push(t$3);
						}));
					})), c = w, [4, Promise.all(c.map((function(t$2) {
						return v.faceLandmark(t$2, o);
					})))];
					case 4:
						for (h = m.sent(), l = [], this.prevFaceRectsFromLandmarks = [], f = 0; f < h.length; ++f) null != (d = h[f]) && (this.prevFaceRectsFromLandmarks.push(this.faceLandmarksToRoi(d, i)), null != (p = _t(d, i)) && p.forEach((function(t$2, e) {
							var n$1 = k.get(e);
							null != n$1 && (t$2.name = n$1);
						})), g = R(p), l.push({
							keypoints: p,
							box: g.locationData.relativeBoundingBox
						}));
						return o.dispose(), [2, l];
				}
				var y, w;
			}));
		}));
	}, t.prototype.dispose = function() {
		this.detector.dispose(), this.landmarkModel.dispose();
	}, t.prototype.reset = function() {
		this.detector.reset(), this.prevFaceRectsFromLandmarks = null;
	}, t.prototype.faceDetectionFrontDetectionToRoi = function(t$1, e) {
		return Rt(St(t$1, "boundingbox", "normRect", e, {
			rotationVectorStartKeypointIndex: 0,
			rotationVectorEndKeypointIndex: 1,
			rotationVectorTargetAngleDegree: 0
		}), e, Bt);
	}, t.prototype.faceLandmark = function(t$1, n) {
		return S(this, void 0, void 0, (function() {
			var r, i, o, a, u, s, c;
			return F(this, (function(h) {
				switch (h.label) {
					case 0: return r = At(n, Dt, t$1).imageTensor, i = ["output_faceflag"].concat(this.withAttention ? [
						"output_mesh_identity",
						"output_lips",
						"Identity_6:0",
						"Identity_1:0",
						"Identity_2:0",
						"Identity_5:0"
					] : ["output_mesh"]), o = this.landmarkModel.execute(r, i), a = o[0], u = o.slice(1), [4, a.data()];
					case 1: return h.sent()[0] < .5 ? (dispose(o), dispose(r), [2, null]) : this.withAttention ? [4, this.tensorsToFaceLandmarksWithAttention(u)] : [3, 3];
					case 2: return s = h.sent(), [3, 5];
					case 3: return [4, this.tensorsToFaceLandmarks(u)];
					case 4: s = h.sent(), h.label = 5;
					case 5: return c = function(t$2, e, n$1) {
						void 0 === n$1 && (n$1 = { ignoreRotation: !1 });
						for (var r$1 = [], i$1 = 0, o$1 = t$2; i$1 < o$1.length; i$1++) {
							var a$1 = o$1[i$1], u$1 = a$1.x - .5, s$1 = a$1.y - .5, c$1 = n$1.ignoreRotation ? 0 : e.rotation, h$1 = Math.cos(c$1) * u$1 - Math.sin(c$1) * s$1, l = Math.sin(c$1) * u$1 + Math.cos(c$1) * s$1;
							h$1 = h$1 * e.width + e.xCenter, l = l * e.height + e.yCenter;
							var f = a$1.z * e.width, d = E({}, a$1);
							d.x = h$1, d.y = l, d.z = f, r$1.push(d);
						}
						return r$1;
					}(s, t$1), dispose(o), dispose(r), [2, c];
				}
			}));
		}));
	}, t.prototype.tensorsToFaceLandmarks = function(t$1) {
		return S(this, void 0, void 0, (function() {
			return F(this, (function(e) {
				return [2, kt(t$1[0], Pt)];
			}));
		}));
	}, t.prototype.tensorsToFaceLandmarksWithAttention = function(t$1) {
		return S(this, void 0, void 0, (function() {
			var e, n, r, i, o, a;
			return F(this, (function(u) {
				switch (u.label) {
					case 0: return [4, kt(t$1[0], Pt)];
					case 1: return e = u.sent(), [4, kt(t$1[1], zt)];
					case 2: return n = u.sent(), [4, kt(t$1[3], Ut)];
					case 3: return r = u.sent(), [4, kt(t$1[5], Ut)];
					case 4: return i = u.sent(), [4, kt(t$1[4], Nt)];
					case 5: return o = u.sent(), [4, kt(t$1[2], Nt)];
					case 6: return a = u.sent(), [2, Ot([
						e,
						n,
						r,
						i,
						o,
						a
					], [
						Vt,
						Ht,
						Kt,
						Wt,
						Gt,
						Xt
					])];
				}
			}));
		}));
	}, t.prototype.faceLandmarksToRoi = function(t$1, e) {
		return Rt(St(R(t$1), "boundingbox", "normRect", e, {
			rotationVectorStartKeypointIndex: 33,
			rotationVectorEndKeypointIndex: 263,
			rotationVectorTargetAngleDegree: 0
		}), e, Bt);
	}, t;
}();
function qt(t) {
	return S(this, void 0, void 0, (function() {
		var e, n, r, i;
		return F(this, (function(o) {
			switch (o.label) {
				case 0: return e = function(t$1) {
					if (null == t$1) return E({}, It);
					var e$1 = E({}, t$1);
					return e$1.runtime = "tfjs", e$1.maxFaces ??= It.maxFaces, e$1.refineLandmarks ??= It.refineLandmarks, e$1.landmarkModelUrl ??= e$1.refineLandmarks ? "https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/attention_mesh/1" : "https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1", e$1;
				}(t), n = "string" == typeof e.landmarkModelUrl && e.landmarkModelUrl.indexOf("https://tfhub.dev") > -1, [4, loadGraphModel(e.landmarkModelUrl, { fromTFHub: n })];
				case 1: return r = o.sent(), [4, dt(rt.MediaPipeFaceDetector, {
					modelType: "short",
					maxFaces: e.maxFaces,
					detectorModelUrl: e.detectorModelUrl,
					runtime: e.runtime
				})];
				case 2: return i = o.sent(), [2, new Jt(i, r, e.maxFaces, e.refineLandmarks)];
			}
		}));
	}));
}
function $t(t, e) {
	return S(this, void 0, void 0, (function() {
		var n, r;
		return F(this, (function(i) {
			if (t === Yt.MediaPipeFaceMesh) {
				if (r = void 0, null != (n = e)) {
					if ("tfjs" === n.runtime) return [2, qt(n)];
					if ("mediapipe" === n.runtime) return [2, B(n)];
					r = n.runtime;
				}
				throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got " + r);
			}
			throw new Error(t + " is not a supported model name.");
		}));
	}));
}
(function(t) {
	t.MediaPipeFaceMesh = "MediaPipeFaceMesh";
})(Yt || (Yt = {}));
var Zt = Object.freeze({
	__proto__: null,
	getKeypointIndexByContour: function(t) {
		if (t === Yt.MediaPipeFaceMesh) return O;
		throw new Error("Model " + t + " is not supported.");
	},
	getAdjacentPairs: function(t) {
		if (t === Yt.MediaPipeFaceMesh) return _;
		throw new Error("Model " + t + " is not supported.");
	}
});

//#endregion
export { Yt as SupportedModels, $t as createDetector, Zt as util };
//# sourceMappingURL=@tensorflow-models_face-landmarks-detection.js.map